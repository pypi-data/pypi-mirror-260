"""
Chunk Impact Test
"""

import numpy as np
from numpy import dot
from numpy.linalg import norm

from .test_utils import embedding_generator


def chunk_impact_test(contexts, response=None, threshold=0.5):
    """
    Provides the Impact score for each chunk

    Args:
        context (list) : The list of Responses given to the model
        response (str, optional): The response generated by the model.
        threshold (float): The threshold for Chunk Test.

    Returns:
        dict: A dictionary containing overall score based on contexts and response
              pass and fail based on threshold
    """
    if type(contexts) is not list:
        print('Ensure to send constext as list of contexts for each prompt')
        raise ValueError('Context not in correct format')
    context_embeddings = embedding_generator(contexts)
    response_embedding = embedding_generator([response])[0]
    scores = []
    relevant_contexts = []
    for i, embedding in enumerate(context_embeddings):
        score = dot(embedding, response_embedding) / (
            norm(embedding) * norm(response_embedding)
        )
        if score > threshold:
            relevant_contexts.append(contexts[i])
        scores.append(score)
    # wt_scores = scores/np.linalg.norm(scores,ord=1)
    relevant_count = float(sum(np.array(scores) > threshold))
    relevant_score = relevant_count * 100 / len(contexts)
    is_passed = bool(relevant_score == 1)

    result = {
        "response": response,
        "score": relevant_score,
        "is_passed": is_passed,
        "relevant_contexts": relevant_contexts,
        "threshold": threshold,
    }
    return result
