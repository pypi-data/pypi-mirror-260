Metadata-Version: 2.1
Name: PyFQL
Version: 0.0.1
Summary: A simple french query language for keysdb.
Home-page: https://github.com/yannbanas/PyFQL
Author: Banas Yann
Author-email: yannbanas@gmail.com
Project-URL: Bug Tracker, https://github.com/yannbanas/PyFQL/-/issues
Project-URL: repository, https://github.com/yannbanas/PyFQL
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE

# Guide d'utilisation du script `query.py`

/!\ Modification rÃ©guliÃ¨re peut ne pas marcher ou etre Ã  jour /!\

Ce guide explique comment utiliser le script `query.py` pour interagir avec ma base de donnÃ©es simplifiÃ©e via des commandes en ligne de commande. Le script permet de crÃ©er des tables, d'ajouter des enregistrements, de les afficher et de les supprimer de diffÃ©rentes maniÃ¨res.

## PrÃ©requis

Assurez-vous d'avoir Python installÃ© sur votre systÃ¨me pour exÃ©cuter le script.

## ExÃ©cution du script

Pour lancer le script, ouvrez un terminal ou une invite de commandes, accÃ©dez au rÃ©pertoire contenant le fichier `query.py` et exÃ©cutez la commande suivante :

```bash
python query.py
```

## Commandes disponibles

Le script prend en charge les commandes suivantes :

- `creer table [nom_table]`: CrÃ©e une nouvelle table dans la base de donnÃ©es.
- `ajoute [nom_table] [attributs]`: Ajoute un enregistrement Ã  une table existante.
- `supprime [nom_table] [options]`: Supprime des enregistrements ou une table entiÃ¨re de la base de donnÃ©es.
- `affiche [nom_table]`: Affiche le contenu d'une table.
- `exit` ou `quit`: Quitte le programme.

## Exemples de requÃªtes

Voici des exemples de requÃªtes que vous pouvez exÃ©cuter dans le script :

1. **CrÃ©ation d'une table** :
   ```bash
   creer table voiture
   ```

2. **Ajout d'un enregistrement** :
   ```bash
   ajoute voiture marque=Toyota modele=Corolla annee=2020 couleur=bleu
   ```

3. **Affichage du contenu d'une table** :
   ```bash
   affiche voiture
   ```

4. **Suppression d'un enregistrement par index** :
   ```bash
   supprime voiture 0
   ```

5. **Suppression d'un champ spÃ©cifique d'un enregistrement** :
   ```bash
   supprime voiture 0 couleur
   ```

6. **Suppression de tous les enregistrements d'une table** :
   ```bash
   supprime voiture tous
   ```

7. **Suppression d'une table entiÃ¨re** :
   ```bash
   supprime voiture
   ```

## Fonctionnement du script

Le script utilise une classe `Database` pour gÃ©rer la base de donnÃ©es. Voici un aperÃ§u de ses principales mÃ©thodes :

- `create_table`: CrÃ©e une nouvelle table dans la base de donnÃ©es.
- `insert`: InsÃ¨re un nouvel enregistrement dans une table existante.
- `delete`: Supprime des enregistrements ou une table entiÃ¨re de la base de donnÃ©es.
- `display_table`: Affiche le contenu d'une table.
- `execute_query`: Analyse et exÃ©cute les commandes fournies par l'utilisateur.

## Phrase type traiter en language naturel sans library externe
- [creer] la [table]/[bdd] [VARIABLE]       
  RESERVER IGNORE RESERVER VARIABLE
--
- [utilise] la [bdd] [VARIABLE]
  RESERVER IGNORE RESERVER VARIABLE
--
- [supprime] la [table]/[bdd] [VARIABLE]
  RESERVER IGNORE RESERVER VARIABLE
--
- [supprime] le [champ]/ [VARIABLE] de la [table] [VARIABLE]
  RESERVER IGNORE RESERVER VARIABLE IGNORE IGNORE RESERVER VARIABLE
--
- [supprime] les [enregistrements] de la [table] [VARIABLE]
  RESERVER IGNORE RESERVER IGNORE IGNORE RESERVER VARIABLE
--
-[modifie] la [table] [VARIABLE] et [renome] le [champ] [VARIABLE] par [VARIABLE]
RESERVER IGNORE RESERVER RESERVER IGNORE RESERVER IGNORE RESERVER RESERVER IGNORE VARIABLE
--
-[modifie] la [table] [VARIABLE] et [ajoute] le [champ] [VARIABLE]
RESERVER IGNORE RESERVER VARIABLE IGNORE RESERVER IGNORE RESERVER VARIABLE
--
- [modifie] la     [table] [VARIABLE] et    [ajoute]   le [champ] [VARIABLE]  a la position [VARIABLE]
  RESERVER IGNORE RESERVER VARIABLE  IGNORE RESERVER IGNORE RESERVER VARIABLE IGNORE IGNORE IGNORE VARIABLE
--
## Conclusion

Ce guide devrait vous aider Ã  comprendre comment utiliser le script `query.py` pour interagir avec une base de donnÃ©es simple via des commandes en ligne de commande. Si vous avez des questions ou des problÃ¨mes, n'hÃ©sitez pas Ã  demander de l'aide Ã  ce mail yannbanas@gmail.com.
