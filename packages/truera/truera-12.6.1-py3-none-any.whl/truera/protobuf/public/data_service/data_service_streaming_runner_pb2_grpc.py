# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from truera.protobuf.public.data_service import data_service_streaming_runner_pb2 as truera_dot_protobuf_dot_public_dot_data__service_dot_data__service__streaming__runner__pb2


class DataServiceStreamingRunnerStub(object):
    """A service that is used to process topics.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SubscribeToTopic = channel.unary_unary(
                '/truera.data_service_streaming_runner.DataServiceStreamingRunner/SubscribeToTopic',
                request_serializer=truera_dot_protobuf_dot_public_dot_data__service_dot_data__service__streaming__runner__pb2.SubscribeToTopicRequest.SerializeToString,
                response_deserializer=truera_dot_protobuf_dot_public_dot_data__service_dot_data__service__streaming__runner__pb2.SubscribeToTopicResponse.FromString,
                )
        self.UnsubscribeFromTopic = channel.unary_unary(
                '/truera.data_service_streaming_runner.DataServiceStreamingRunner/UnsubscribeFromTopic',
                request_serializer=truera_dot_protobuf_dot_public_dot_data__service_dot_data__service__streaming__runner__pb2.UnsubscribeFromTopicRequest.SerializeToString,
                response_deserializer=truera_dot_protobuf_dot_public_dot_data__service_dot_data__service__streaming__runner__pb2.UnsubscribeFromTopicResponse.FromString,
                )
        self.GetStreamingRunnerStatus = channel.unary_unary(
                '/truera.data_service_streaming_runner.DataServiceStreamingRunner/GetStreamingRunnerStatus',
                request_serializer=truera_dot_protobuf_dot_public_dot_data__service_dot_data__service__streaming__runner__pb2.GetStreamingRunnerStatusRequest.SerializeToString,
                response_deserializer=truera_dot_protobuf_dot_public_dot_data__service_dot_data__service__streaming__runner__pb2.GetStreamingRunnerStatusResponse.FromString,
                )
        self.ShutdownStreamingRunner = channel.unary_unary(
                '/truera.data_service_streaming_runner.DataServiceStreamingRunner/ShutdownStreamingRunner',
                request_serializer=truera_dot_protobuf_dot_public_dot_data__service_dot_data__service__streaming__runner__pb2.ShutdownStreamingRunnerRequest.SerializeToString,
                response_deserializer=truera_dot_protobuf_dot_public_dot_data__service_dot_data__service__streaming__runner__pb2.ShutdownStreamingRunnerResponse.FromString,
                )


class DataServiceStreamingRunnerServicer(object):
    """A service that is used to process topics.
    """

    def SubscribeToTopic(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnsubscribeFromTopic(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStreamingRunnerStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ShutdownStreamingRunner(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DataServiceStreamingRunnerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SubscribeToTopic': grpc.unary_unary_rpc_method_handler(
                    servicer.SubscribeToTopic,
                    request_deserializer=truera_dot_protobuf_dot_public_dot_data__service_dot_data__service__streaming__runner__pb2.SubscribeToTopicRequest.FromString,
                    response_serializer=truera_dot_protobuf_dot_public_dot_data__service_dot_data__service__streaming__runner__pb2.SubscribeToTopicResponse.SerializeToString,
            ),
            'UnsubscribeFromTopic': grpc.unary_unary_rpc_method_handler(
                    servicer.UnsubscribeFromTopic,
                    request_deserializer=truera_dot_protobuf_dot_public_dot_data__service_dot_data__service__streaming__runner__pb2.UnsubscribeFromTopicRequest.FromString,
                    response_serializer=truera_dot_protobuf_dot_public_dot_data__service_dot_data__service__streaming__runner__pb2.UnsubscribeFromTopicResponse.SerializeToString,
            ),
            'GetStreamingRunnerStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStreamingRunnerStatus,
                    request_deserializer=truera_dot_protobuf_dot_public_dot_data__service_dot_data__service__streaming__runner__pb2.GetStreamingRunnerStatusRequest.FromString,
                    response_serializer=truera_dot_protobuf_dot_public_dot_data__service_dot_data__service__streaming__runner__pb2.GetStreamingRunnerStatusResponse.SerializeToString,
            ),
            'ShutdownStreamingRunner': grpc.unary_unary_rpc_method_handler(
                    servicer.ShutdownStreamingRunner,
                    request_deserializer=truera_dot_protobuf_dot_public_dot_data__service_dot_data__service__streaming__runner__pb2.ShutdownStreamingRunnerRequest.FromString,
                    response_serializer=truera_dot_protobuf_dot_public_dot_data__service_dot_data__service__streaming__runner__pb2.ShutdownStreamingRunnerResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'truera.data_service_streaming_runner.DataServiceStreamingRunner', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DataServiceStreamingRunner(object):
    """A service that is used to process topics.
    """

    @staticmethod
    def SubscribeToTopic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/truera.data_service_streaming_runner.DataServiceStreamingRunner/SubscribeToTopic',
            truera_dot_protobuf_dot_public_dot_data__service_dot_data__service__streaming__runner__pb2.SubscribeToTopicRequest.SerializeToString,
            truera_dot_protobuf_dot_public_dot_data__service_dot_data__service__streaming__runner__pb2.SubscribeToTopicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnsubscribeFromTopic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/truera.data_service_streaming_runner.DataServiceStreamingRunner/UnsubscribeFromTopic',
            truera_dot_protobuf_dot_public_dot_data__service_dot_data__service__streaming__runner__pb2.UnsubscribeFromTopicRequest.SerializeToString,
            truera_dot_protobuf_dot_public_dot_data__service_dot_data__service__streaming__runner__pb2.UnsubscribeFromTopicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStreamingRunnerStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/truera.data_service_streaming_runner.DataServiceStreamingRunner/GetStreamingRunnerStatus',
            truera_dot_protobuf_dot_public_dot_data__service_dot_data__service__streaming__runner__pb2.GetStreamingRunnerStatusRequest.SerializeToString,
            truera_dot_protobuf_dot_public_dot_data__service_dot_data__service__streaming__runner__pb2.GetStreamingRunnerStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ShutdownStreamingRunner(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/truera.data_service_streaming_runner.DataServiceStreamingRunner/ShutdownStreamingRunner',
            truera_dot_protobuf_dot_public_dot_data__service_dot_data__service__streaming__runner__pb2.ShutdownStreamingRunnerRequest.SerializeToString,
            truera_dot_protobuf_dot_public_dot_data__service_dot_data__service__streaming__runner__pb2.ShutdownStreamingRunnerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
