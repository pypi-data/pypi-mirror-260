# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from truera.protobuf.public.audit import audit_service_pb2 as truera_dot_protobuf_dot_public_dot_audit_dot_audit__service__pb2


class AuditServiceStub(object):
    """User Analytics service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Ping = channel.unary_unary(
                '/truera.audit.AuditService/Ping',
                request_serializer=truera_dot_protobuf_dot_public_dot_audit_dot_audit__service__pb2.AuditPingRequest.SerializeToString,
                response_deserializer=truera_dot_protobuf_dot_public_dot_audit_dot_audit__service__pb2.AuditPingResponse.FromString,
                )
        self.CreateUserActivityReport = channel.unary_stream(
                '/truera.audit.AuditService/CreateUserActivityReport',
                request_serializer=truera_dot_protobuf_dot_public_dot_audit_dot_audit__service__pb2.CreateUserActivityReportRequest.SerializeToString,
                response_deserializer=truera_dot_protobuf_dot_public_dot_audit_dot_audit__service__pb2.CreateUserActivityReportResponse.FromString,
                )
        self.CreateUsageReport = channel.unary_stream(
                '/truera.audit.AuditService/CreateUsageReport',
                request_serializer=truera_dot_protobuf_dot_public_dot_audit_dot_audit__service__pb2.CreateUsageReportRequest.SerializeToString,
                response_deserializer=truera_dot_protobuf_dot_public_dot_audit_dot_audit__service__pb2.CreateUsageReportResponse.FromString,
                )
        self.CreateUserActivityUberReport = channel.unary_stream(
                '/truera.audit.AuditService/CreateUserActivityUberReport',
                request_serializer=truera_dot_protobuf_dot_public_dot_audit_dot_audit__service__pb2.CreateUserActivityUberReportRequest.SerializeToString,
                response_deserializer=truera_dot_protobuf_dot_public_dot_audit_dot_audit__service__pb2.CreateUserActivityUberReportResponse.FromString,
                )


class AuditServiceServicer(object):
    """User Analytics service.
    """

    def Ping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUserActivityReport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUsageReport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUserActivityUberReport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AuditServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Ping': grpc.unary_unary_rpc_method_handler(
                    servicer.Ping,
                    request_deserializer=truera_dot_protobuf_dot_public_dot_audit_dot_audit__service__pb2.AuditPingRequest.FromString,
                    response_serializer=truera_dot_protobuf_dot_public_dot_audit_dot_audit__service__pb2.AuditPingResponse.SerializeToString,
            ),
            'CreateUserActivityReport': grpc.unary_stream_rpc_method_handler(
                    servicer.CreateUserActivityReport,
                    request_deserializer=truera_dot_protobuf_dot_public_dot_audit_dot_audit__service__pb2.CreateUserActivityReportRequest.FromString,
                    response_serializer=truera_dot_protobuf_dot_public_dot_audit_dot_audit__service__pb2.CreateUserActivityReportResponse.SerializeToString,
            ),
            'CreateUsageReport': grpc.unary_stream_rpc_method_handler(
                    servicer.CreateUsageReport,
                    request_deserializer=truera_dot_protobuf_dot_public_dot_audit_dot_audit__service__pb2.CreateUsageReportRequest.FromString,
                    response_serializer=truera_dot_protobuf_dot_public_dot_audit_dot_audit__service__pb2.CreateUsageReportResponse.SerializeToString,
            ),
            'CreateUserActivityUberReport': grpc.unary_stream_rpc_method_handler(
                    servicer.CreateUserActivityUberReport,
                    request_deserializer=truera_dot_protobuf_dot_public_dot_audit_dot_audit__service__pb2.CreateUserActivityUberReportRequest.FromString,
                    response_serializer=truera_dot_protobuf_dot_public_dot_audit_dot_audit__service__pb2.CreateUserActivityUberReportResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'truera.audit.AuditService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AuditService(object):
    """User Analytics service.
    """

    @staticmethod
    def Ping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/truera.audit.AuditService/Ping',
            truera_dot_protobuf_dot_public_dot_audit_dot_audit__service__pb2.AuditPingRequest.SerializeToString,
            truera_dot_protobuf_dot_public_dot_audit_dot_audit__service__pb2.AuditPingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateUserActivityReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/truera.audit.AuditService/CreateUserActivityReport',
            truera_dot_protobuf_dot_public_dot_audit_dot_audit__service__pb2.CreateUserActivityReportRequest.SerializeToString,
            truera_dot_protobuf_dot_public_dot_audit_dot_audit__service__pb2.CreateUserActivityReportResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateUsageReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/truera.audit.AuditService/CreateUsageReport',
            truera_dot_protobuf_dot_public_dot_audit_dot_audit__service__pb2.CreateUsageReportRequest.SerializeToString,
            truera_dot_protobuf_dot_public_dot_audit_dot_audit__service__pb2.CreateUsageReportResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateUserActivityUberReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/truera.audit.AuditService/CreateUserActivityUberReport',
            truera_dot_protobuf_dot_public_dot_audit_dot_audit__service__pb2.CreateUserActivityUberReportRequest.SerializeToString,
            truera_dot_protobuf_dot_public_dot_audit_dot_audit__service__pb2.CreateUserActivityUberReportResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
