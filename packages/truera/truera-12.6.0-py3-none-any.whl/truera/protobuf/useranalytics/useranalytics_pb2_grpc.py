# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from truera.protobuf.useranalytics import useranalytics_pb2 as truera_dot_protobuf_dot_useranalytics_dot_useranalytics__pb2


class UserAnalyticsServiceStub(object):
    """User Analytics service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Ping = channel.unary_unary(
                '/truera.useranalytics.UserAnalyticsService/Ping',
                request_serializer=truera_dot_protobuf_dot_useranalytics_dot_useranalytics__pb2.UserAnalyticsPingRequest.SerializeToString,
                response_deserializer=truera_dot_protobuf_dot_useranalytics_dot_useranalytics__pb2.UserAnalyticsPingResponse.FromString,
                )
        self.sendAnalyticsEvent = channel.unary_unary(
                '/truera.useranalytics.UserAnalyticsService/sendAnalyticsEvent',
                request_serializer=truera_dot_protobuf_dot_useranalytics_dot_useranalytics__pb2.SendAnalyticsEventRequest.SerializeToString,
                response_deserializer=truera_dot_protobuf_dot_useranalytics_dot_useranalytics__pb2.SendAnalyticsEventResponse.FromString,
                )
        self.sendAnalyticsEventsBatch = channel.unary_unary(
                '/truera.useranalytics.UserAnalyticsService/sendAnalyticsEventsBatch',
                request_serializer=truera_dot_protobuf_dot_useranalytics_dot_useranalytics__pb2.SendAnalyticsEventsBatchRequest.SerializeToString,
                response_deserializer=truera_dot_protobuf_dot_useranalytics_dot_useranalytics__pb2.SendAnalyticsEventsBatchResponse.FromString,
                )


class UserAnalyticsServiceServicer(object):
    """User Analytics service.
    """

    def Ping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sendAnalyticsEvent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sendAnalyticsEventsBatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserAnalyticsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Ping': grpc.unary_unary_rpc_method_handler(
                    servicer.Ping,
                    request_deserializer=truera_dot_protobuf_dot_useranalytics_dot_useranalytics__pb2.UserAnalyticsPingRequest.FromString,
                    response_serializer=truera_dot_protobuf_dot_useranalytics_dot_useranalytics__pb2.UserAnalyticsPingResponse.SerializeToString,
            ),
            'sendAnalyticsEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.sendAnalyticsEvent,
                    request_deserializer=truera_dot_protobuf_dot_useranalytics_dot_useranalytics__pb2.SendAnalyticsEventRequest.FromString,
                    response_serializer=truera_dot_protobuf_dot_useranalytics_dot_useranalytics__pb2.SendAnalyticsEventResponse.SerializeToString,
            ),
            'sendAnalyticsEventsBatch': grpc.unary_unary_rpc_method_handler(
                    servicer.sendAnalyticsEventsBatch,
                    request_deserializer=truera_dot_protobuf_dot_useranalytics_dot_useranalytics__pb2.SendAnalyticsEventsBatchRequest.FromString,
                    response_serializer=truera_dot_protobuf_dot_useranalytics_dot_useranalytics__pb2.SendAnalyticsEventsBatchResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'truera.useranalytics.UserAnalyticsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserAnalyticsService(object):
    """User Analytics service.
    """

    @staticmethod
    def Ping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/truera.useranalytics.UserAnalyticsService/Ping',
            truera_dot_protobuf_dot_useranalytics_dot_useranalytics__pb2.UserAnalyticsPingRequest.SerializeToString,
            truera_dot_protobuf_dot_useranalytics_dot_useranalytics__pb2.UserAnalyticsPingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sendAnalyticsEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/truera.useranalytics.UserAnalyticsService/sendAnalyticsEvent',
            truera_dot_protobuf_dot_useranalytics_dot_useranalytics__pb2.SendAnalyticsEventRequest.SerializeToString,
            truera_dot_protobuf_dot_useranalytics_dot_useranalytics__pb2.SendAnalyticsEventResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sendAnalyticsEventsBatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/truera.useranalytics.UserAnalyticsService/sendAnalyticsEventsBatch',
            truera_dot_protobuf_dot_useranalytics_dot_useranalytics__pb2.SendAnalyticsEventsBatchRequest.SerializeToString,
            truera_dot_protobuf_dot_useranalytics_dot_useranalytics__pb2.SendAnalyticsEventsBatchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
