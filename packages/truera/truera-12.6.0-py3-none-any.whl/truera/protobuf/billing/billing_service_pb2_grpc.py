# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from truera.protobuf.billing import billing_service_pb2 as truera_dot_protobuf_dot_billing_dot_billing__service__pb2


class BillingServiceStub(object):
    """Billing service is used to provide usage information based on configured metrics.
    It will check RBAC to check correct user permissions once it receives request.
    Then it will make the call to metarepo aggregation endpoint to run configured
    pipelines to collect usage information. Once It received the details from metarepo
    It will stitch the results back from different pipelines and return the results back.

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListBillingMetrics = channel.unary_unary(
                '/truera.billing.BillingService/ListBillingMetrics',
                request_serializer=truera_dot_protobuf_dot_billing_dot_billing__service__pb2.ListBillingMetricsRequest.SerializeToString,
                response_deserializer=truera_dot_protobuf_dot_billing_dot_billing__service__pb2.ListBillingMetricsResponse.FromString,
                )
        self.GenerateUsageReport = channel.unary_unary(
                '/truera.billing.BillingService/GenerateUsageReport',
                request_serializer=truera_dot_protobuf_dot_billing_dot_billing__service__pb2.GenerateUsageReportRequest.SerializeToString,
                response_deserializer=truera_dot_protobuf_dot_billing_dot_billing__service__pb2.GenerateUsageReportResponse.FromString,
                )
        self.ListAuditSummaryMetrics = channel.unary_unary(
                '/truera.billing.BillingService/ListAuditSummaryMetrics',
                request_serializer=truera_dot_protobuf_dot_billing_dot_billing__service__pb2.ListAuditSummaryMetricsRequest.SerializeToString,
                response_deserializer=truera_dot_protobuf_dot_billing_dot_billing__service__pb2.ListAuditSummaryMetricsResponse.FromString,
                )
        self.GenerateAuditSummaryReport = channel.unary_unary(
                '/truera.billing.BillingService/GenerateAuditSummaryReport',
                request_serializer=truera_dot_protobuf_dot_billing_dot_billing__service__pb2.GenerateAuditSummaryReportRequest.SerializeToString,
                response_deserializer=truera_dot_protobuf_dot_billing_dot_billing__service__pb2.GenerateAuditSummaryReportResponse.FromString,
                )


class BillingServiceServicer(object):
    """Billing service is used to provide usage information based on configured metrics.
    It will check RBAC to check correct user permissions once it receives request.
    Then it will make the call to metarepo aggregation endpoint to run configured
    pipelines to collect usage information. Once It received the details from metarepo
    It will stitch the results back from different pipelines and return the results back.

    """

    def ListBillingMetrics(self, request, context):
        """Lists all the tracked metrics on which usage details can be requested
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateUsageReport(self, request, context):
        """Generate actual report
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAuditSummaryMetrics(self, request, context):
        """Lists all the tracked audit summary metrics that can be used to generate audit summary reports
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateAuditSummaryReport(self, request, context):
        """Generates audit summary report
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BillingServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListBillingMetrics': grpc.unary_unary_rpc_method_handler(
                    servicer.ListBillingMetrics,
                    request_deserializer=truera_dot_protobuf_dot_billing_dot_billing__service__pb2.ListBillingMetricsRequest.FromString,
                    response_serializer=truera_dot_protobuf_dot_billing_dot_billing__service__pb2.ListBillingMetricsResponse.SerializeToString,
            ),
            'GenerateUsageReport': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateUsageReport,
                    request_deserializer=truera_dot_protobuf_dot_billing_dot_billing__service__pb2.GenerateUsageReportRequest.FromString,
                    response_serializer=truera_dot_protobuf_dot_billing_dot_billing__service__pb2.GenerateUsageReportResponse.SerializeToString,
            ),
            'ListAuditSummaryMetrics': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAuditSummaryMetrics,
                    request_deserializer=truera_dot_protobuf_dot_billing_dot_billing__service__pb2.ListAuditSummaryMetricsRequest.FromString,
                    response_serializer=truera_dot_protobuf_dot_billing_dot_billing__service__pb2.ListAuditSummaryMetricsResponse.SerializeToString,
            ),
            'GenerateAuditSummaryReport': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateAuditSummaryReport,
                    request_deserializer=truera_dot_protobuf_dot_billing_dot_billing__service__pb2.GenerateAuditSummaryReportRequest.FromString,
                    response_serializer=truera_dot_protobuf_dot_billing_dot_billing__service__pb2.GenerateAuditSummaryReportResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'truera.billing.BillingService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BillingService(object):
    """Billing service is used to provide usage information based on configured metrics.
    It will check RBAC to check correct user permissions once it receives request.
    Then it will make the call to metarepo aggregation endpoint to run configured
    pipelines to collect usage information. Once It received the details from metarepo
    It will stitch the results back from different pipelines and return the results back.

    """

    @staticmethod
    def ListBillingMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/truera.billing.BillingService/ListBillingMetrics',
            truera_dot_protobuf_dot_billing_dot_billing__service__pb2.ListBillingMetricsRequest.SerializeToString,
            truera_dot_protobuf_dot_billing_dot_billing__service__pb2.ListBillingMetricsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GenerateUsageReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/truera.billing.BillingService/GenerateUsageReport',
            truera_dot_protobuf_dot_billing_dot_billing__service__pb2.GenerateUsageReportRequest.SerializeToString,
            truera_dot_protobuf_dot_billing_dot_billing__service__pb2.GenerateUsageReportResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListAuditSummaryMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/truera.billing.BillingService/ListAuditSummaryMetrics',
            truera_dot_protobuf_dot_billing_dot_billing__service__pb2.ListAuditSummaryMetricsRequest.SerializeToString,
            truera_dot_protobuf_dot_billing_dot_billing__service__pb2.ListAuditSummaryMetricsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GenerateAuditSummaryReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/truera.billing.BillingService/GenerateAuditSummaryReport',
            truera_dot_protobuf_dot_billing_dot_billing__service__pb2.GenerateAuditSummaryReportRequest.SerializeToString,
            truera_dot_protobuf_dot_billing_dot_billing__service__pb2.GenerateAuditSummaryReportResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
