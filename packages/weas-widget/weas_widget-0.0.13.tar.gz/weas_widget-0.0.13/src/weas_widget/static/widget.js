import*as r from"https://unpkg.com/weas@0.0.8-a/dist/weas.mjs";function p({model:e,el:i}){let t,n=document.createElement("div");u(n),n.style.cssText="position: relative; width: 600px; height: 400px;";let c=e.get("viewerStyle");c&&(n.style.width=c.width,n.style.height=c.height),i.appendChild(n);let d=()=>{let a=e.get("atoms"),o;Array.isArray(a)?o=a.map(h=>new r.Atoms(h)):o=new r.Atoms(a);let s=e.get("guiConfig"),g={debug:e.get("debug"),_modelStyle:e.get("modelStyle"),_colorBy:e.get("colorBy"),_colorType:e.get("colorType"),_colorRamp:e.get("colorRamp"),_materialType:e.get("materialType"),_atomLabelType:e.get("atomLabelType"),_showCell:e.get("showCell"),_showBondedAtoms:e.get("showBondedAtoms"),_boundary:e.get("boundary")};return t=new r.AtomsViewer(n,o,g,s),t.selectedAtomsIndices=e.get("selectedAtomsIndices"),t.isosurfaceManager.volumetricData=l(e.get("volumetricData"),o.cell),t.isosurfaceManager.fromSettings(e.get("isoSettings")),t.VFManager.fromSettings(e.get("vectorField")),t.showVectorField=e.get("showVectorField"),t.meshPrimitive.fromSettings(e.get("meshPrimitives")),t.drawModels(),t.render(),t};setTimeout(()=>{t=d()},10),e.on("change:js_task",()=>{let a=e.get("js_task");function o(s){switch(s.name){case"drawModels":t.drawModels();break;case"exportImage":let g=t.tjs.exportImage(s.kwargs.resolutionScale);e.set("imageData",g),e.save_changes();break;case"downloadImage":t.tjs.downloadImage(s.kwargs.filename);break;case"setCameraPosition":t.tjs.updateCameraAndControls(t.atoms.getCenterOfGeometry(),s.kwargs.position);break}}o(a)}),e.on("change:atoms",()=>{let a=e.get("atoms");if(a.uuid&&t.atoms.uuid&&t.atoms.uuid===a.uuid)return;let o=new r.Atoms(a);t.updateAtoms(o),console.log("update viewer from Python.")}),n.addEventListener("atomsUpdated",a=>{let o=[];a.detail.forEach(s=>{o.push(s.to_dict())}),o.uuid=t.uuid,e.set("atoms",o),e.save_changes(),console.log("Updated atoms from event.")}),n.addEventListener("viewerUpdated",a=>{let o=a.detail;for(let s in o)e.set(s,o[s]);e.save_changes(),console.log("Updated viewer: ",o)}),e.on("change:modelStyle",()=>{t.modelStyle=e.get("modelStyle")}),e.on("change:colorType",()=>{t.colorType=e.get("colorType")}),e.on("change:materialType",()=>{t.materialType=e.get("materialType")}),e.on("change:atomLabelType",()=>{t.atomLabelType=e.get("atomLabelType")}),e.on("change:showCell",()=>{t.showCell=e.get("showCell")}),e.on("change:showBondedAtoms",()=>{t.showBondedAtoms=e.get("showBondedAtoms")}),e.on("change:atomScales",()=>{t.atomScales=e.get("atomScales")}),e.on("change:modelSticks",()=>{t.modelSticks=e.get("modelSticks")}),e.on("change:modelPolyhedras",()=>{t.modelPolyhedras=e.get("modelPolyhedras")}),e.on("change:selectedAtomsIndices",()=>{t.selectedAtomsIndices=e.get("selectedAtomsIndices")}),e.on("change:boundary",()=>{t.boundary=e.get("boundary")}),e.on("change:volumetricData",()=>{let a=e.get("volumetricData");t.isosurfaceManager.volumetricData=l(a)}),e.on("change:isoSettings",()=>{let a=e.get("isoSettings");t.isosurfaceManager.fromSettings(a),t.isosurfaceManager.drawIsosurfaces()}),e.on("change:vectorField",()=>{let a=e.get("vectorField");t.VFManager.fromSettings(a),t.VFManager.drawVectorFields()}),e.on("change:meshPrimitives",()=>{let a=e.get("meshPrimitives");console.log("meshPrimitives: ",a),t.meshPrimitive.fromSettings(a),t.meshPrimitive.drawMesh()})}function l(e,i=[[1,0,0],[0,1,0],[0,0,1]]){let t=[e.values.length,e.values[0].length,e.values[0][0].length],n=[].concat.apply([],[].concat.apply([],e.values));return{dims:t,values:n,cell:i,origin:[0,0,0]}}function u(e){let i=t=>t.stopPropagation();["click","keydown","keyup","keypress"].forEach(t=>{e.addEventListener(t,i,!1)})}var f={render:p};export{f as default};
