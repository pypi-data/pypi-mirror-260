import{d as M,u as D,r as k,y as R,o as T,a as i,b as m,f as I,g as l,w as o,n as h,c as v,h as p,l as c}from"./index-557e0199.js";const S={class:"iv-item"},E=M({__name:"RegisterGroup",props:{errmode:String,sysinfo:Object,appinfo:Object},setup(x,{expose:_}){const w=x,{$gettext:n}=D(),e=k({device:{master:{form:"pc",platform:void 0,python:void 0,pyarmor:void 0},slave:{same:!1,form:"pc",platform:void 0,python:void 0,pyarmor:void 0}},steps:[{ignored:!1,command:"",output:"",remark:""},{ignored:!1,command:"",output:"",remark:""},{ignored:!0,command:"",output:"",remark:""},{ignored:!0,command:"",output:"",remark:""}],expected:""}),U=()=>{if(w.errmode==="unexpected"?f.value==="5":f.value==="4")return!0;f.value=`${parseInt(f.value)+1}`},$=R(()=>{const u=[],a=e.value.device.master,s=e.value.device.slave,r=e.value.steps;u.push("### Environments"),u.push(`Master Machine: (${a.form}) ${a.platform}, Python ${a.python}, pyarmor ${a.pyarmor}`),u.push(s.same?"Build Machine is same as Master Machine":`Build Machine: (${s.form}) ${s.platform}, Python ${s.python}, pyarmor ${s.pyarmor}`),u.push(""),u.push("### Reproduced steps"),u.push(""),u.push("1. Activate group license:"),r[0].ignored?u.push("Ignored because group registration file has been got successfully"):(u.push(`${r[0].command}`),u.push(`${r[0].output}`)),r[0].extra&&(u.push(`
Remark:`),u.push(`${r[0].extra}`));const y=["Activate group license","Create group device file","Create device registration file","Register build device"];for(const d in[1,2,3])r[d].ignored||(u.push(""),u.push(`${parseInt(d)+2}. ${y[d]}:`),u.push(`${r[d].command}`),u.push(`${r[d].output}`),r[0].extra&&(u.push(`
Remark:`),u.push(`${r[d].remark}`)));return e.value.expected&&(u.push(""),u.push("### Expected result"),u.push(e.value.expected)),u.join(`
`)});T(()=>{const u=w.sysinfo,a=w.appinfo;e.value.device.master.platform=`${u.platform} ${u.arch}`,e.value.device.master.python=`${u.python.version}`,e.value.device.master.pyarmor=`${a.pyarmor}`,e.value.device.slave.platform=`${u.platform} ${u.arch}`,e.value.device.slave.python=`${u.python.version}`,e.value.device.slave.pyarmor=`${a.pyarmor}`});const f=k("1");return _({validate:U,bugbody:$}),(u,a)=>{const s=i("el-form-item"),r=i("el-option"),y=i("el-select"),d=i("el-input"),g=i("el-switch"),b=i("el-form"),V=i("el-tab-pane"),C=i("el-tabs"),P=i("el-space");return m(),I("div",S,[l(P,{direction:"vertical"},{default:o(()=>[l(C,{modelValue:f.value,"onUpdate:modelValue":a[25]||(a[25]=t=>f.value=t),type:"card"},{default:o(()=>[l(V,{label:"Step 1",name:"1"},{default:o(()=>[l(b,{inline:!0,"label-position":"left","label-width":"120",class:"w-100"},{default:o(()=>[l(s,{class:"w-100"},{default:o(()=>[h(" This step should describe how to active group licese in Master Device which need internet ")]),_:1}),l(s,{label:"Master Device",class:"w-100"},{default:o(()=>[l(y,{class:"w-100",modelValue:e.value.device.master.form,"onUpdate:modelValue":a[0]||(a[0]=t=>e.value.device.master.form=t)},{default:o(()=>[l(r,{label:"Physics device (PC, Laptop, etc.)",value:"pc"}),l(r,{label:"Virtual machine (Qemu, VMWare, ECS, etc.)",value:"vm"}),l(r,{label:"CI/CD pipeline",value:"ci"}),l(r,{label:"Docker container",value:"docker"})]),_:1},8,["modelValue"])]),_:1}),l(s,{label:"Platform"},{default:o(()=>[l(d,{modelValue:e.value.device.master.platform,"onUpdate:modelValue":a[1]||(a[1]=t=>e.value.device.master.platform=t),placeholder:"linux.x86_64"},null,8,["modelValue"])]),_:1}),l(s,{label:"Python"},{default:o(()=>[l(d,{modelValue:e.value.device.master.python,"onUpdate:modelValue":a[2]||(a[2]=t=>e.value.device.master.python=t),placeholder:"3.12.2"},null,8,["modelValue"])]),_:1}),l(s,{label:"Pyarmor"},{default:o(()=>[l(d,{modelValue:e.value.device.master.pyarmor,"onUpdate:modelValue":a[3]||(a[3]=t=>e.value.device.master.pyarmor=t),placeholder:"8.5.0"},null,8,["modelValue"])]),_:1}),l(s,null,{default:o(()=>[l(g,{modelValue:e.value.steps[0].ignored,"onUpdate:modelValue":a[4]||(a[4]=t=>e.value.steps[0].ignored=t),"active-text":"Ignore this step because I have got group registration file successfully"},null,8,["modelValue"])]),_:1}),e.value.steps[0].ignored?c("",!0):(m(),v(s,{key:0,class:"w-100",label:p(n)("Command")},{default:o(()=>[l(d,{placeholder:"Type full pyarmor command to activate Pyarmor Group License",modelValue:e.value.steps[0].command,"onUpdate:modelValue":a[5]||(a[5]=t=>e.value.steps[0].command=t)},null,8,["modelValue"])]),_:1},8,["label"])),e.value.steps[0].ignored?c("",!0):(m(),v(s,{key:1,class:"w-100",label:p(n)("Console Output")},{default:o(()=>[l(d,{modelValue:e.value.steps[0].output,"onUpdate:modelValue":a[6]||(a[6]=t=>e.value.steps[0].output=t),placeholder:"Full console output, do not mask anything",rows:8,type:"textarea"},null,8,["modelValue"])]),_:1},8,["label"])),l(s,{class:"w-100",label:p(n)("Remark")},{default:o(()=>[l(d,{modelValue:e.value.steps[0].remark,"onUpdate:modelValue":a[7]||(a[7]=t=>e.value.steps[0].remark=t),placeholder:"Paste the content of `pyarmor.error.log` here if this file exists",rows:3,type:"textarea"},null,8,["modelValue"])]),_:1},8,["label"])]),_:1})]),_:1}),l(V,{label:"Step 2",name:"2"},{default:o(()=>[l(b,{inline:!0,"label-position":"left","label-width":"120",class:"w-100"},{default:o(()=>[l(s,{class:"w-100"},{default:o(()=>[h(" This step should describe how to get build device file in Build Device which could be offline ")]),_:1}),l(s,null,{default:o(()=>[l(g,{modelValue:e.value.device.slave.same,"onUpdate:modelValue":a[8]||(a[8]=t=>e.value.device.slave.same=t),"active-text":"The build device is same as Master Device in step 1"},null,8,["modelValue"])]),_:1}),e.value.device.slave.same?c("",!0):(m(),v(s,{key:0,label:"Build Device",class:"w-100"},{default:o(()=>[l(y,{class:"w-100",modelValue:e.value.device.slave.form,"onUpdate:modelValue":a[9]||(a[9]=t=>e.value.device.slave.form=t)},{default:o(()=>[l(r,{label:"Physics device (PC, Laptop, etc.)",value:"pc"}),l(r,{label:"Virtual machine (Qemu, VMWare, ECS, etc.)",value:"vm"}),l(r,{label:"CI/CD pipeline",value:"ci"}),l(r,{label:"Docker container",value:"docker"})]),_:1},8,["modelValue"])]),_:1})),e.value.device.slave.same?c("",!0):(m(),v(s,{key:1,label:"Platform"},{default:o(()=>[l(d,{modelValue:e.value.device.slave.platform,"onUpdate:modelValue":a[10]||(a[10]=t=>e.value.device.slave.platform=t),placeholder:"linux.x86_64"},null,8,["modelValue"])]),_:1})),e.value.device.slave.same?c("",!0):(m(),v(s,{key:2,label:"Python"},{default:o(()=>[l(d,{modelValue:e.value.device.slave.python,"onUpdate:modelValue":a[11]||(a[11]=t=>e.value.device.slave.python=t),placeholder:"3.12.2"},null,8,["modelValue"])]),_:1})),e.value.device.slave.same?c("",!0):(m(),v(s,{key:3,label:"Pyarmor"},{default:o(()=>[l(d,{modelValue:e.value.device.slave.pyarmor,"onUpdate:modelValue":a[12]||(a[12]=t=>e.value.device.slave.pyarmor=t),placeholder:"8.5.0"},null,8,["modelValue"])]),_:1})),l(s,{class:"w-100",label:p(n)("Command")},{default:o(()=>[l(d,{placeholder:"Type full pyarmor command to get device file",modelValue:e.value.steps[1].command,"onUpdate:modelValue":a[13]||(a[13]=t=>e.value.steps[1].command=t)},null,8,["modelValue"])]),_:1},8,["label"]),l(s,{class:"w-100",label:p(n)("Console Output")},{default:o(()=>[l(d,{modelValue:e.value.steps[1].output,"onUpdate:modelValue":a[14]||(a[14]=t=>e.value.steps[1].output=t),placeholder:"Full console output, do not mask anything",rows:8,type:"textarea"},null,8,["modelValue"])]),_:1},8,["label"]),l(s,{class:"w-100",label:p(n)("Remark")},{default:o(()=>[l(d,{modelValue:e.value.steps[1].remark,"onUpdate:modelValue":a[15]||(a[15]=t=>e.value.steps[1].remark=t),rows:3,type:"textarea"},null,8,["modelValue"])]),_:1},8,["label"])]),_:1})]),_:1}),l(V,{label:"Step 3",name:"3"},{default:o(()=>[l(b,{inline:!0,"label-position":"left","label-width":"100",class:"w-100"},{default:o(()=>[l(s,{class:"w-100"},{default:o(()=>[h(" This step should describe how to get device register file in Master Device which is used in step 1 ")]),_:1}),l(s,null,{default:o(()=>[l(g,{modelValue:e.value.steps[2].ignored,"onUpdate:modelValue":a[16]||(a[16]=t=>e.value.steps[2].ignored=t),"active-text":"Ignore this step because previour step failed"},null,8,["modelValue"])]),_:1}),l(s,{class:"w-100",label:p(n)("Command")},{default:o(()=>[l(d,{disabled:e.value.steps[2].ignored,placeholder:"Type full pyarmor command to get device registration file",modelValue:e.value.steps[2].command,"onUpdate:modelValue":a[17]||(a[17]=t=>e.value.steps[2].command=t)},null,8,["disabled","modelValue"])]),_:1},8,["label"]),l(s,{class:"w-100",label:p(n)("Console Output")},{default:o(()=>[l(d,{modelValue:e.value.steps[2].output,"onUpdate:modelValue":a[18]||(a[18]=t=>e.value.steps[2].output=t),disabled:e.value.steps[2].ignored,placeholder:"Full console output, do not mask anything",rows:8,type:"textarea"},null,8,["modelValue","disabled"])]),_:1},8,["label"]),l(s,{class:"w-100",label:p(n)("Remark")},{default:o(()=>[l(d,{modelValue:e.value.steps[2].remark,"onUpdate:modelValue":a[19]||(a[19]=t=>e.value.steps[2].remark=t),disabled:e.value.steps[2].ignored,rows:3,type:"textarea"},null,8,["modelValue","disabled"])]),_:1},8,["label"])]),_:1})]),_:1}),l(V,{label:"Step 4",name:"4"},{default:o(()=>[l(b,{inline:!0,"label-position":"left","label-width":"100",class:"w-100"},{default:o(()=>[l(s,{class:"w-100"},{default:o(()=>[h(" This step should describe how to register device registration file in Build Device which is used in step 2 ")]),_:1}),l(s,null,{default:o(()=>[l(g,{modelValue:e.value.steps[3].ignored,"onUpdate:modelValue":a[20]||(a[20]=t=>e.value.steps[3].ignored=t),"active-text":"Ignore this step because previour step failed"},null,8,["modelValue"])]),_:1}),l(s,{class:"w-100",disabled:e.value.steps[3].ignored,label:p(n)("Command")},{default:o(()=>[l(d,{placeholder:"Type full pyarmor command to get device registration file",disabled:e.value.steps[3].ignored,modelValue:e.value.steps[3].command,"onUpdate:modelValue":a[21]||(a[21]=t=>e.value.steps[3].command=t)},null,8,["disabled","modelValue"])]),_:1},8,["disabled","label"]),l(s,{class:"w-100",label:p(n)("Console Output")},{default:o(()=>[l(d,{modelValue:e.value.steps[3].output,"onUpdate:modelValue":a[22]||(a[22]=t=>e.value.steps[3].output=t),disabled:e.value.steps[3].ignored,placeholder:"Full console output, do not mask anything",rows:8,type:"textarea"},null,8,["modelValue","disabled"])]),_:1},8,["label"]),l(s,{class:"w-100",label:p(n)("Remark")},{default:o(()=>[l(d,{modelValue:e.value.steps[3].remark,"onUpdate:modelValue":a[23]||(a[23]=t=>e.value.steps[3].remark=t),disabled:e.value.steps[3].ignored,rows:3,type:"textarea"},null,8,["modelValue","disabled"])]),_:1},8,["label"])]),_:1})]),_:1}),x.errmode==="unexpected"?(m(),v(V,{key:0,label:"Step 5",name:"5"},{default:o(()=>[l(b,{"label-position":"top"},{default:o(()=>[l(s,{label:p(n)("Expected Result")},{default:o(()=>[l(d,{modelValue:e.value.expected,"onUpdate:modelValue":a[24]||(a[24]=t=>e.value.expected=t),placeholder:"Descript the expected results",rows:10,type:"textarea"},null,8,["modelValue"])]),_:1},8,["label"])]),_:1})]),_:1})):c("",!0)]),_:1},8,["modelValue"])]),_:1})])}}});export{E as default};
