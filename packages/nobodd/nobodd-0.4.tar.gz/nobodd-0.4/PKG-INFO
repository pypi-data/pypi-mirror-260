Metadata-Version: 2.1
Name: nobodd
Version: 0.4
Summary: A simple TFTP boot server for the Raspberry Pi
Author: Dave Jones
Author-email: dave.jones@canonical.com
Project-URL: Documentation, https://nobodd.readthedocs.io/
Project-URL: Source Code, https://github.com/waveform80/nobodd
Project-URL: Issue Tracker, https://github.com/waveform80/nobodd/issues
Keywords: raspberry pi boot nbd tftp
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Intended Audience :: System Administrators
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: System :: Boot
Requires-Python: >=3.7
License-File: LICENSE.txt
Requires-Dist: setuptools
Requires-Dist: importlib_resources~=1.3; python_version < "3.9"
Requires-Dist: importlib_metadata~=1.4; python_version < "3.8"
Provides-Extra: test
Requires-Dist: pytest; extra == "test"
Requires-Dist: pytest-cov; extra == "test"
Provides-Extra: doc
Requires-Dist: sphinx; extra == "doc"
Requires-Dist: sphinx-rtd-theme; extra == "doc"

======
nobodd
======

nobodd is a confusingly named, but simple TFTP server intended for net-booting
Raspberry Pis directly from OS images without having to loop-back mount those
images. Even customization of an image for booting on a particular board is
handled without loop devices or mounts (making it possible to operate
completely unprivileged), via a read/write FAT implementation within the
``nobodd-prep`` tool.


Usage
=====

If you have an appropriately customized OS image already placed in a file
(``ubuntu.img``), and the serial number of the Pi in question (``1234ABCD``)
then serving it as simple as:

.. code-block:: console

    $ sudo nobodd-tftpd --board 1234ABCD,ubuntu.img

This defaults to reading the first partition from the file, and pretends (to
TFTP clients) that the contents of the first partition appears under the
``1234ABCD/`` directory. Hence a TFTP request for ``1234ABCD/cmdline.txt`` will
serve the ``cmdline.txt`` file from the first partition contained in
``ubuntu.img``.

The service either needs to run from root (because the default TFTP port is the
privileged port 69), or can be run as a **systemd** or **inetd**
socket-activated service, in which case the service manager will provide the
initial socket and the service can run without any special privileges.

The mapping of Pi serial numbers to OS image files can also be placed in a
configuration file under ``/etc/nobodd/conf.d``. A tool, ``nobodd-prep``, is
provided to both customize images for boot and generate basic configuration
files for ``nobodd-tftpd`` and ``nbd-server``.


Useful Links
============

* `Source code`_ on GitHub
* `Issues`_ on GitHub
* `Documentation`_ on ReadTheDocs

.. _Source code: https://github.com/waveform80/nobodd
.. _Issues: https://github.com/waveform80/nobodd/issues
.. _Documentation: https://nobodd.readthedocs.io/
