name: Setup Bowtie
description: "Install Bowtie, hooray!"
author: "Julian Berman"
branding:
  icon: package
  color: blue
inputs:
  version:
    required: false
    description: "bowtie version to be installed"
    default: ""
  installation-attempts:
    required: false
    default: "5"
    description: "number of attempts to install bowtie with specified version if this version is not yet avaialble"
  installation-wait-seconds:
    required: false
    default: "10"
    description: "number of seconds to wait before performing the next installation attempt if current one has failed"

runs:
  using: composite
  steps:
    - uses: actions/setup-python@v5
      id: localpython
      with:
        python-version: "3.10 - 3.11"
        update-environment: false

    - name: "Install latest Bowtie"
      if: inputs.version == ''
      run: pipx install --python "${{ steps.localpython.outputs.python-path }}" bowtie-json-schema
      shell: bash

    - name: "Install Bowtie ${{ inputs.version }}"
      if: inputs.version != ''
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 10
        max_attempts: ${{ inputs.installation-attempts }}
        retry_wait_seconds: ${{ inputs.installation-wait-seconds }}
        shell: bash
        command: |
          set +e # do not fail script if command returns non-zero exit code
          set -o pipefail # keep exit code when using pipes
          output=$(pipx install --python "${{ steps.localpython.outputs.python-path }}" bowtie-json-schema==${{ inputs.version }} 2>&1 | tee /dev/tty)
          if [ $? -ne 0 ]; then
            grep 'No matching distribution found for bowtie-json-schema' <<< $output
            if [ $? -ne 0 ]; then
                echo "Error during installation"
                exit 1
            fi
            exit 42
          fi
        retry_on: error
        retry_on_exit_code: 42
