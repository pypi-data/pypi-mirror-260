# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: pyhdmap/proto/hdmap_lib/proto/road_link.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from pyhdmap.proto.hdmap_lib.proto import id_pb2 as pyhdmap_dot_proto_dot_hdmap__lib_dot_proto_dot_id__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='pyhdmap/proto/hdmap_lib/proto/road_link.proto',
  package='hdmap_lib',
  syntax='proto2',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n-pyhdmap/proto/hdmap_lib/proto/road_link.proto\x12\thdmap_lib\x1a&pyhdmap/proto/hdmap_lib/proto/id.proto\"\x87\x02\n\x08RoadLink\x12\x1f\n\x08junction\x18\x01 \x01(\x0b\x32\r.hdmap_lib.Id\x12 \n\tfrom_road\x18\x02 \x01(\x0b\x32\r.hdmap_lib.Id\x12\x1e\n\x07to_road\x18\x03 \x01(\x0b\x32\r.hdmap_lib.Id\x12/\n\tturn_type\x18\x04 \x01(\x0e\x32\x1c.hdmap_lib.RoadLink.TurnType\"g\n\x08TurnType\x12\x0b\n\x07UNKNOWN\x10\x01\x12\x0c\n\x08STRAIGHT\x10\x02\x12\r\n\tLEFT_TURN\x10\x03\x12\x0f\n\x0bLEFT_U_TURN\x10\x04\x12\x0e\n\nRIGHT_TURN\x10\x05\x12\x10\n\x0cRIGHT_U_TURN\x10\x06'
  ,
  dependencies=[pyhdmap_dot_proto_dot_hdmap__lib_dot_proto_dot_id__pb2.DESCRIPTOR,])



_ROADLINK_TURNTYPE = _descriptor.EnumDescriptor(
  name='TurnType',
  full_name='hdmap_lib.RoadLink.TurnType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='STRAIGHT', index=1, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LEFT_TURN', index=2, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LEFT_U_TURN', index=3, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='RIGHT_TURN', index=4, number=5,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='RIGHT_U_TURN', index=5, number=6,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=261,
  serialized_end=364,
)
_sym_db.RegisterEnumDescriptor(_ROADLINK_TURNTYPE)


_ROADLINK = _descriptor.Descriptor(
  name='RoadLink',
  full_name='hdmap_lib.RoadLink',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='junction', full_name='hdmap_lib.RoadLink.junction', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='from_road', full_name='hdmap_lib.RoadLink.from_road', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='to_road', full_name='hdmap_lib.RoadLink.to_road', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='turn_type', full_name='hdmap_lib.RoadLink.turn_type', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _ROADLINK_TURNTYPE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=101,
  serialized_end=364,
)

_ROADLINK.fields_by_name['junction'].message_type = pyhdmap_dot_proto_dot_hdmap__lib_dot_proto_dot_id__pb2._ID
_ROADLINK.fields_by_name['from_road'].message_type = pyhdmap_dot_proto_dot_hdmap__lib_dot_proto_dot_id__pb2._ID
_ROADLINK.fields_by_name['to_road'].message_type = pyhdmap_dot_proto_dot_hdmap__lib_dot_proto_dot_id__pb2._ID
_ROADLINK.fields_by_name['turn_type'].enum_type = _ROADLINK_TURNTYPE
_ROADLINK_TURNTYPE.containing_type = _ROADLINK
DESCRIPTOR.message_types_by_name['RoadLink'] = _ROADLINK
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

RoadLink = _reflection.GeneratedProtocolMessageType('RoadLink', (_message.Message,), {
  'DESCRIPTOR' : _ROADLINK,
  '__module__' : 'pyhdmap.proto.hdmap_lib.proto.road_link_pb2'
  # @@protoc_insertion_point(class_scope:hdmap_lib.RoadLink)
  })
_sym_db.RegisterMessage(RoadLink)


# @@protoc_insertion_point(module_scope)
