# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: pyhdmap/proto/hdmap_lib/proto/signal.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from pyhdmap.proto.hdmap_lib.proto import geometry_pb2 as pyhdmap_dot_proto_dot_hdmap__lib_dot_proto_dot_geometry__pb2
from pyhdmap.proto.hdmap_lib.proto import id_pb2 as pyhdmap_dot_proto_dot_hdmap__lib_dot_proto_dot_id__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='pyhdmap/proto/hdmap_lib/proto/signal.proto',
  package='hdmap_lib',
  syntax='proto2',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n*pyhdmap/proto/hdmap_lib/proto/signal.proto\x12\thdmap_lib\x1a,pyhdmap/proto/hdmap_lib/proto/geometry.proto\x1a&pyhdmap/proto/hdmap_lib/proto/id.proto\"\xd4\x04\n\x06Signal\x12\x19\n\x02id\x18\x01 \x01(\x0b\x32\r.hdmap_lib.Id\x12;\n\x10\x63ombination_type\x18\x02 \x01(\x0e\x32!.hdmap_lib.Signal.CombinationType\x12\x31\n\x0bsignal_type\x18\x03 \x01(\x0e\x32\x1c.hdmap_lib.Signal.SignalType\x12$\n\x08\x62oundary\x18\x04 \x01(\x0b\x32\x12.hdmap_lib.Polygon\x12\"\n\x06\x63\x65nter\x18\x05 \x01(\x0b\x32\x12.hdmap_lib.Point3D\"\x8a\x01\n\x0f\x43ombinationType\x12\x17\n\x13UNKNOWN_COMNINATION\x10\x01\x12\x14\n\x10MIX_2_HORIZONTAL\x10\x02\x12\x12\n\x0eMIX_2_VERTICAL\x10\x03\x12\x14\n\x10MIX_3_HORIZONTAL\x10\x04\x12\x12\n\x0eMIX_3_VERTICAL\x10\x05\x12\n\n\x06SINGLE\x10\x06\"\xe7\x01\n\nSignalType\x12\x12\n\x0eUNKNOWN_SIGNAL\x10\x01\x12\n\n\x06\x43IRCLE\x10\x02\x12\x0e\n\nARROW_LEFT\x10\x03\x12\x11\n\rARROW_FORWARD\x10\x04\x12\x0f\n\x0b\x41RROW_RIGHT\x10\x05\x12\x1a\n\x16\x41RROW_LEFT_AND_FORWARD\x10\x06\x12\x1b\n\x17\x41RROW_RIGHT_AND_FORWARD\x10\x07\x12\x10\n\x0c\x41RROW_U_TURN\x10\x08\x12\x19\n\x15\x41RROW_LEFT_AND_U_TURN\x10\t\x12\r\n\tCOUNTDOWN\x10\n\x12\x10\n\x0cWAITING_AREA\x10\x0b'
  ,
  dependencies=[pyhdmap_dot_proto_dot_hdmap__lib_dot_proto_dot_geometry__pb2.DESCRIPTOR,pyhdmap_dot_proto_dot_hdmap__lib_dot_proto_dot_id__pb2.DESCRIPTOR,])



_SIGNAL_COMBINATIONTYPE = _descriptor.EnumDescriptor(
  name='CombinationType',
  full_name='hdmap_lib.Signal.CombinationType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN_COMNINATION', index=0, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='MIX_2_HORIZONTAL', index=1, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='MIX_2_VERTICAL', index=2, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='MIX_3_HORIZONTAL', index=3, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='MIX_3_VERTICAL', index=4, number=5,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='SINGLE', index=5, number=6,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=368,
  serialized_end=506,
)
_sym_db.RegisterEnumDescriptor(_SIGNAL_COMBINATIONTYPE)

_SIGNAL_SIGNALTYPE = _descriptor.EnumDescriptor(
  name='SignalType',
  full_name='hdmap_lib.Signal.SignalType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN_SIGNAL', index=0, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='CIRCLE', index=1, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ARROW_LEFT', index=2, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ARROW_FORWARD', index=3, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ARROW_RIGHT', index=4, number=5,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ARROW_LEFT_AND_FORWARD', index=5, number=6,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ARROW_RIGHT_AND_FORWARD', index=6, number=7,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ARROW_U_TURN', index=7, number=8,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ARROW_LEFT_AND_U_TURN', index=8, number=9,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='COUNTDOWN', index=9, number=10,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='WAITING_AREA', index=10, number=11,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=509,
  serialized_end=740,
)
_sym_db.RegisterEnumDescriptor(_SIGNAL_SIGNALTYPE)


_SIGNAL = _descriptor.Descriptor(
  name='Signal',
  full_name='hdmap_lib.Signal',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='hdmap_lib.Signal.id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='combination_type', full_name='hdmap_lib.Signal.combination_type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='signal_type', full_name='hdmap_lib.Signal.signal_type', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='boundary', full_name='hdmap_lib.Signal.boundary', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='center', full_name='hdmap_lib.Signal.center', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _SIGNAL_COMBINATIONTYPE,
    _SIGNAL_SIGNALTYPE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=144,
  serialized_end=740,
)

_SIGNAL.fields_by_name['id'].message_type = pyhdmap_dot_proto_dot_hdmap__lib_dot_proto_dot_id__pb2._ID
_SIGNAL.fields_by_name['combination_type'].enum_type = _SIGNAL_COMBINATIONTYPE
_SIGNAL.fields_by_name['signal_type'].enum_type = _SIGNAL_SIGNALTYPE
_SIGNAL.fields_by_name['boundary'].message_type = pyhdmap_dot_proto_dot_hdmap__lib_dot_proto_dot_geometry__pb2._POLYGON
_SIGNAL.fields_by_name['center'].message_type = pyhdmap_dot_proto_dot_hdmap__lib_dot_proto_dot_geometry__pb2._POINT3D
_SIGNAL_COMBINATIONTYPE.containing_type = _SIGNAL
_SIGNAL_SIGNALTYPE.containing_type = _SIGNAL
DESCRIPTOR.message_types_by_name['Signal'] = _SIGNAL
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Signal = _reflection.GeneratedProtocolMessageType('Signal', (_message.Message,), {
  'DESCRIPTOR' : _SIGNAL,
  '__module__' : 'pyhdmap.proto.hdmap_lib.proto.signal_pb2'
  # @@protoc_insertion_point(class_scope:hdmap_lib.Signal)
  })
_sym_db.RegisterMessage(Signal)


# @@protoc_insertion_point(module_scope)
