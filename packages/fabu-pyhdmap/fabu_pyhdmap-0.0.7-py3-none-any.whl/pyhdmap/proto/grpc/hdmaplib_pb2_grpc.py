# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from pyhdmap.proto.grpc import hdmaplib_pb2 as pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2


class HdmapLibStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetMap = channel.unary_unary(
                '/hdmap_lib.HdmapLib/GetMap',
                request_serializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetMapRequest.SerializeToString,
                response_deserializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetMapReply.FromString,
                )
        self.SetVessels = channel.unary_unary(
                '/hdmap_lib.HdmapLib/SetVessels',
                request_serializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.SetVesselsRequest.SerializeToString,
                response_deserializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.SetVesselsReply.FromString,
                )
        self.GetVessels = channel.unary_unary(
                '/hdmap_lib.HdmapLib/GetVessels',
                request_serializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetVesselsRequest.SerializeToString,
                response_deserializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetVesselsReply.FromString,
                )
        self.GetElementOnPosition = channel.unary_unary(
                '/hdmap_lib.HdmapLib/GetElementOnPosition',
                request_serializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetElementOnPositionRequest.SerializeToString,
                response_deserializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetElementOnPositionReply.FromString,
                )
        self.GetBlockStatus = channel.unary_unary(
                '/hdmap_lib.HdmapLib/GetBlockStatus',
                request_serializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetBlockStatusRequest.SerializeToString,
                response_deserializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetBlockStatusReply.FromString,
                )
        self.GetSuggestVesselPosition = channel.unary_unary(
                '/hdmap_lib.HdmapLib/GetSuggestVesselPosition',
                request_serializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetSuggestVesselPositionRequest.SerializeToString,
                response_deserializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetSuggestVesselPositionReply.FromString,
                )
        self.GetElectronicFence = channel.unary_unary(
                '/hdmap_lib.HdmapLib/GetElectronicFence',
                request_serializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetElectronicFenceRequest.SerializeToString,
                response_deserializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetElectronicFenceReply.FromString,
                )
        self.GetYardJunction = channel.unary_unary(
                '/hdmap_lib.HdmapLib/GetYardJunction',
                request_serializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetYardJunctionRequest.SerializeToString,
                response_deserializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetYardJunctionReply.FromString,
                )
        self.GetRoutingBlockRange = channel.unary_unary(
                '/hdmap_lib.HdmapLib/GetRoutingBlockRange',
                request_serializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetRoutingBlockRangeRequest.SerializeToString,
                response_deserializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetRoutingBlockRangeReply.FromString,
                )
        self.SetBridgeDrivingMode = channel.unary_unary(
                '/hdmap_lib.HdmapLib/SetBridgeDrivingMode',
                request_serializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.SetBridgeDrivingModeRequest.SerializeToString,
                response_deserializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.SetBridgeDrivingModeReply.FromString,
                )
        self.GetBridgeDrivingMode = channel.unary_unary(
                '/hdmap_lib.HdmapLib/GetBridgeDrivingMode',
                request_serializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetBridgeDrivingModeRequest.SerializeToString,
                response_deserializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetBridgeDrivingModeReply.FromString,
                )
        self.GetHdmapLibVessel = channel.unary_unary(
                '/hdmap_lib.HdmapLib/GetHdmapLibVessel',
                request_serializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetHdmapLibVesselRequest.SerializeToString,
                response_deserializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetHdmapLibVesselReply.FromString,
                )
        self.GetGirderDirectionMode = channel.unary_unary(
                '/hdmap_lib.HdmapLib/GetGirderDirectionMode',
                request_serializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetGirderDirectionModeRequest.SerializeToString,
                response_deserializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetGirderDirectionModeReply.FromString,
                )


class HdmapLibServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetMap(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetVessels(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVessels(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetElementOnPosition(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBlockStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSuggestVesselPosition(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetElectronicFence(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetYardJunction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRoutingBlockRange(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetBridgeDrivingMode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBridgeDrivingMode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHdmapLibVessel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetGirderDirectionMode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_HdmapLibServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetMap': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMap,
                    request_deserializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetMapRequest.FromString,
                    response_serializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetMapReply.SerializeToString,
            ),
            'SetVessels': grpc.unary_unary_rpc_method_handler(
                    servicer.SetVessels,
                    request_deserializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.SetVesselsRequest.FromString,
                    response_serializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.SetVesselsReply.SerializeToString,
            ),
            'GetVessels': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVessels,
                    request_deserializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetVesselsRequest.FromString,
                    response_serializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetVesselsReply.SerializeToString,
            ),
            'GetElementOnPosition': grpc.unary_unary_rpc_method_handler(
                    servicer.GetElementOnPosition,
                    request_deserializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetElementOnPositionRequest.FromString,
                    response_serializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetElementOnPositionReply.SerializeToString,
            ),
            'GetBlockStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBlockStatus,
                    request_deserializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetBlockStatusRequest.FromString,
                    response_serializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetBlockStatusReply.SerializeToString,
            ),
            'GetSuggestVesselPosition': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSuggestVesselPosition,
                    request_deserializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetSuggestVesselPositionRequest.FromString,
                    response_serializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetSuggestVesselPositionReply.SerializeToString,
            ),
            'GetElectronicFence': grpc.unary_unary_rpc_method_handler(
                    servicer.GetElectronicFence,
                    request_deserializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetElectronicFenceRequest.FromString,
                    response_serializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetElectronicFenceReply.SerializeToString,
            ),
            'GetYardJunction': grpc.unary_unary_rpc_method_handler(
                    servicer.GetYardJunction,
                    request_deserializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetYardJunctionRequest.FromString,
                    response_serializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetYardJunctionReply.SerializeToString,
            ),
            'GetRoutingBlockRange': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRoutingBlockRange,
                    request_deserializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetRoutingBlockRangeRequest.FromString,
                    response_serializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetRoutingBlockRangeReply.SerializeToString,
            ),
            'SetBridgeDrivingMode': grpc.unary_unary_rpc_method_handler(
                    servicer.SetBridgeDrivingMode,
                    request_deserializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.SetBridgeDrivingModeRequest.FromString,
                    response_serializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.SetBridgeDrivingModeReply.SerializeToString,
            ),
            'GetBridgeDrivingMode': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBridgeDrivingMode,
                    request_deserializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetBridgeDrivingModeRequest.FromString,
                    response_serializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetBridgeDrivingModeReply.SerializeToString,
            ),
            'GetHdmapLibVessel': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHdmapLibVessel,
                    request_deserializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetHdmapLibVesselRequest.FromString,
                    response_serializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetHdmapLibVesselReply.SerializeToString,
            ),
            'GetGirderDirectionMode': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGirderDirectionMode,
                    request_deserializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetGirderDirectionModeRequest.FromString,
                    response_serializer=pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetGirderDirectionModeReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'hdmap_lib.HdmapLib', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class HdmapLib(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetMap(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/hdmap_lib.HdmapLib/GetMap',
            pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetMapRequest.SerializeToString,
            pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetMapReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetVessels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/hdmap_lib.HdmapLib/SetVessels',
            pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.SetVesselsRequest.SerializeToString,
            pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.SetVesselsReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVessels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/hdmap_lib.HdmapLib/GetVessels',
            pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetVesselsRequest.SerializeToString,
            pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetVesselsReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetElementOnPosition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/hdmap_lib.HdmapLib/GetElementOnPosition',
            pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetElementOnPositionRequest.SerializeToString,
            pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetElementOnPositionReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBlockStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/hdmap_lib.HdmapLib/GetBlockStatus',
            pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetBlockStatusRequest.SerializeToString,
            pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetBlockStatusReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSuggestVesselPosition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/hdmap_lib.HdmapLib/GetSuggestVesselPosition',
            pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetSuggestVesselPositionRequest.SerializeToString,
            pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetSuggestVesselPositionReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetElectronicFence(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/hdmap_lib.HdmapLib/GetElectronicFence',
            pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetElectronicFenceRequest.SerializeToString,
            pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetElectronicFenceReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetYardJunction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/hdmap_lib.HdmapLib/GetYardJunction',
            pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetYardJunctionRequest.SerializeToString,
            pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetYardJunctionReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRoutingBlockRange(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/hdmap_lib.HdmapLib/GetRoutingBlockRange',
            pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetRoutingBlockRangeRequest.SerializeToString,
            pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetRoutingBlockRangeReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetBridgeDrivingMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/hdmap_lib.HdmapLib/SetBridgeDrivingMode',
            pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.SetBridgeDrivingModeRequest.SerializeToString,
            pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.SetBridgeDrivingModeReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBridgeDrivingMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/hdmap_lib.HdmapLib/GetBridgeDrivingMode',
            pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetBridgeDrivingModeRequest.SerializeToString,
            pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetBridgeDrivingModeReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHdmapLibVessel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/hdmap_lib.HdmapLib/GetHdmapLibVessel',
            pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetHdmapLibVesselRequest.SerializeToString,
            pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetHdmapLibVesselReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetGirderDirectionMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/hdmap_lib.HdmapLib/GetGirderDirectionMode',
            pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetGirderDirectionModeRequest.SerializeToString,
            pyhdmap_dot_proto_dot_grpc_dot_hdmaplib__pb2.GetGirderDirectionModeReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
