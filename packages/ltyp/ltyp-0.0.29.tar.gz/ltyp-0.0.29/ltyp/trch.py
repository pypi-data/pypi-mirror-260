# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/21_trch.ipynb.

# %% auto 0
__all__ = ['pttype', 'memfmt', 'presfmt', 'ptsize', 'ptdevice', 'pttensor', 'inttensor', 'booltensor', 'floattensor', 'nantensor',
           'tensor', 'ptmodule', 'plmodule', 'nnmodule', 'ptdataset', 'pldatamodule', 'ptdataloader', 'neuralode',
           'neuralsde', 'neuraldynamics', 'odefunc', 'sdefunc', 'sdeito', 'brownianintervial', 'augmenter']

# %% ../nbs/21_trch.ipynb 6
#| export


# %% ../nbs/21_trch.ipynb 8
from typing import TypeAlias

# %% ../nbs/21_trch.ipynb 10
#| export


# %% ../nbs/21_trch.ipynb 12
from ptyp import Prototype
from matr import (
    pttensor as ptpttensor, 
    ptinttensor as ptinttensor, 
    ptbooltensor as ptbooltensor, 
    ptfloattensor as ptfloattensor, 
    
    ptsize as ptptsize, 
    pttype as ptpttype,
    ptdevice as ptptdevice,
    ptmemfmt, ptpresfmt,
    ptmodule as ptptmodule,
    ptdataset as ptptdataset, 
    ptdataloader as ptptdataloader, 
    
    plmodule as plplmodule, 
    pldatamodule as plpldatamodule,  
    
    odefn, sdefn, neurode, neursde, 
    augmenter as tdaugmenter, 
    ito, brownian, 
)

# %% ../nbs/21_trch.ipynb 14
from .iter import itertype
from .nans import nans, nan

# %% ../nbs/21_trch.ipynb 17
@Prototype(ptpttype)
class pttype: '''size type (e.g. `tuple`, `torch.Size`, `itertype`)'''

# %% ../nbs/21_trch.ipynb 19
@Prototype(ptmemfmt)
class memfmt: '''`torch.memory_format`''';

@Prototype(ptpresfmt)
class presfmt:  '''`torch.preserve_format`''';

# %% ../nbs/21_trch.ipynb 21
@Prototype(ptptsize, attrs=dict(dtype=int))
class ptsize: '''`torch.Size`'''

# %% ../nbs/21_trch.ipynb 23
@Prototype(ptptdevice)
class ptdevice: '''`torch.device`'''

# %% ../nbs/21_trch.ipynb 25
@Prototype(ptpttensor)
class pttensor: '''`torch.Tensor`''';
    
@Prototype(ptinttensor)
class inttensor: '''`torch.IntTensor`''';

@Prototype(ptbooltensor)
class booltensor: '''`torch.BoolTensor`''';

@Prototype(ptfloattensor)
class floattensor: '''`torch.FloatTensor`''';
    
@Prototype(pttensor, nans, attrs=dict(dtype=nan))
class nantensor: '''tensor of `nan`s'''

@Prototype(pttensor, inttensor, booltensor, floattensor)
class tensor: '''tensor type
    (e.g. `torch.tensor`, `torch.IntTensor`, `torch.BoolTensor`, or `torch.FloatTensor`)'''

# %% ../nbs/21_trch.ipynb 27
@Prototype(ptptmodule)
class ptmodule: '''`torch.nn.Module`'''

@Prototype(plplmodule)
class plmodule: '''`pytorch_lightning.LightningModule`'''

# %% ../nbs/21_trch.ipynb 28
@Prototype(ptmodule, plmodule)
class nnmodule: '''module type (e.g. `torch.nn.Module` or `pytorch_lightning.LightningModule`)'''

# %% ../nbs/21_trch.ipynb 29
@Prototype(ptptdataset)
class ptdataset: '''`torch.utils.data.Dataset`'''

@Prototype(plpldatamodule)
class pldatamodule: '''`pytorch_lightning.LightningDataModule`'''

@Prototype(ptptdataloader)
class ptdataloader: '''`torch.utils.data.DataLoader`'''

# %% ../nbs/21_trch.ipynb 31
@Prototype(neurode)
class neuralode: '''torchdyn neural ODE'''

@Prototype(neursde)
class neuralsde: '''torchdyn neural SDE'''

@Prototype(neuralode, neuralsde)
class neuraldynamics: '''neuralode or neuralsde'''

# %% ../nbs/21_trch.ipynb 32
@Prototype(odefn)
class odefunc: '''`torchdyn.ODEFunc`'''

@Prototype(sdefn)
class sdefunc: '''`torchdyn.SDEFunc`'''

@Prototype(ito)
class sdeito: '''`torchsde.ito`'''

@Prototype(brownian)
class brownianintervial: '''`torchsde.BrownianInterval`'''

# %% ../nbs/21_trch.ipynb 33
@Prototype(tdaugmenter)
class augmenter: '''`torchdyn.nn.augmenter`''';
