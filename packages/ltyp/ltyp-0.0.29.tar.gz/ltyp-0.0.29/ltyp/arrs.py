# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/20_arrs.ipynb.

# %% auto 0
__all__ = ['npmatrix', 'nparray', 'recarray', 'npempty', 'sparray', 'spmatrix', 'cscarray', 'cscmatrix', 'cooarray', 'coomatrix',
           'csrarray', 'csrmatrix', 'diaarray', 'diamatrix', 'dokarray', 'dokmatrix', 'lilarray', 'lilmatrix',
           'bsrarray', 'bsrmatrix', 'sparsearray', 'sparsematrix', 'sparse', 'array', 'matrix']

# %% ../nbs/20_arrs.ipynb 6
#| export


# %% ../nbs/20_arrs.ipynb 8
from typing import TypeAlias

# %% ../nbs/20_arrs.ipynb 10
#| export


# %% ../nbs/20_arrs.ipynb 12
from ptyp import Prototype
from matr import (
    
    npmatrix as npnpmatrix, 
    nparray as npnparray, 
    recarray as nprecarray, 
    npempty as npnpempty, 
    
    sparray as spsparray, 
    spmatrix as spspmatrix,     
    cscarray as spcscarray,
    cscmatrix as spcscmatrix,
    cooarray as spcooarray,
    coomatrix as spcoomatrix,
    csrarray as spcsrarray,
    csrmatrix as spcsrmatrix,
    diaarray as spdiaarray,
    diamatrix as spdiamatrix,
    dokarray as spdokarray,
    dokmatrix as spdokmatrix,
    lilarray as splilarray,
    lilmatrix as splilmatrix,
    bsrarray as spbsrarray,
    bsrmatrix as spbsrmatrix,
    
    
    pttensor as ptpttensor, 
    ptinttensor as ptinttensor, 
    ptbooltensor as ptbooltensor, 
    ptfloattensor as ptfloattensor, 
)

# %% ../nbs/20_arrs.ipynb 14
from .iter import itertype
from .nans import nans, nan

# %% ../nbs/20_arrs.ipynb 17
@Prototype(npnpmatrix)
class npmatrix:
    '''`numpy.matrix`''';
    
@Prototype(npnparray)
class nparray:
    '''`numpy.ndarray`''';
    
@Prototype(nprecarray)
class recarray:
    '''`numpy.recarray`''';
    
@Prototype(npnpempty)
class npempty:
    '''`numpy.empty`''';

# %% ../nbs/20_arrs.ipynb 19
@Prototype(spsparray)
class sparray: 
    '''`scipy.sparse.aparray`''';

@Prototype(spspmatrix)
class spmatrix: 
    '''`scipy.sparse.spmatrix`''';

@Prototype(spcscarray)
class cscarray:
    '''`scipy.sparse.csc_array`''';
    
@Prototype(spcscmatrix)
class cscmatrix:
    '''`scipy.sparse.csc_matrix`''';

@Prototype(spcooarray)
class cooarray:
    '''`scipy.sparse.coo_array`''';

@Prototype(spcoomatrix)
class coomatrix:
    '''`scipy.sparse.coo_matrix`''';

@Prototype(spcsrarray)
class csrarray:
    '''`scipy.sparse.csr_array`''';

@Prototype(spcsrmatrix)
class csrmatrix:
    '''`scipy.sparse.csr_matrix`''';

@Prototype(spdiaarray)
class diaarray:
    '''`scipy.sparse.dia_array`''';

@Prototype(spdiamatrix)
class diamatrix:
    '''`scipy.sparse.dia_matrix`''';

@Prototype(spdokarray)
class dokarray:
    '''`scipy.sparse.dok_array`''';

@Prototype(spdokmatrix)
class dokmatrix:
    '''`scipy.sparse.dok_matrix`''';

@Prototype(splilarray)
class lilarray:
    '''`scipy.sparse.lil_array`''';

@Prototype(splilmatrix)
class lilmatrix:
    '''`scipy.sparse.lil_matrix`''';

@Prototype(spbsrarray)
class bsrarray:
    '''`scipy.sparse.bsr_array`''';

@Prototype(spbsrmatrix)
class bsrmatrix:
    '''`scipy.sparse.bsr_matrix`''';


# %% ../nbs/20_arrs.ipynb 20
@Prototype(sparray, cscarray, cooarray, csrarray, diaarray, dokarray, lilarray, bsrarray)
class sparsearray: '''sparse array
    (e.g. `scipy.sparse.sparray`, `scipy.sparse.cscarray`, `scipy.sparse.cooarray`, 
    `scipy.sparse.csrarray`, `scipy.sparse.diaarray`, `scipy.sparse.dokarray`, 
    `scipy.sparse.lilarray`, or `scipy.sparse.bsrarray`)'''
    
@Prototype(spmatrix, cscmatrix, coomatrix, csrmatrix, diamatrix, dokmatrix, lilmatrix, bsrmatrix)
class sparsematrix: '''sparse type
    (e.g.  `scipy.sparse.spmatrix`, `scipy.sparse.cscmatrix`, `scipy.sparse.coomatrix`, 
    `scipy.sparse.csrmatrix`, `scipy.sparse.diamatrix`, `scipy.sparse.dokmatrix`, 
    `scipy.sparse.lilmatrix`, or `scipy.sparse.bsrmatrix`,
    )'''
    
@Prototype(sparsearray, sparsematrix)
class sparse: '''sparse type
    (e.g. `sparsearray` or `sparsematrix`)'''

# %% ../nbs/20_arrs.ipynb 22
@Prototype(nparray, recarray, sparray, itertype, list)
class array: '''array type
    (e.g. `np.array`, `np.recarray`, `sp.sparray`, `itertype`, or `list`)'''
    
@Prototype(nparray, spmatrix, itertype, list)
class matrix: '''matrix type
    (e.g. `np.matrix`, `sp.matrix`, `itertype`, or `list`)'''
