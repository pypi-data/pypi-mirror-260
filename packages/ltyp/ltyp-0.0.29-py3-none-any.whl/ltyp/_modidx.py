# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/ltyp',
                'doc_host': 'https://dsm-72.github.io',
                'git_url': 'https://github.com/dsm-72/ltyp',
                'lib_path': 'ltyp'},
  'syms': { 'ltyp.arrs': { 'ltyp.arrs.array': ('arrs.html#array', 'ltyp/arrs.py'),
                           'ltyp.arrs.bsrarray': ('arrs.html#bsrarray', 'ltyp/arrs.py'),
                           'ltyp.arrs.bsrmatrix': ('arrs.html#bsrmatrix', 'ltyp/arrs.py'),
                           'ltyp.arrs.cooarray': ('arrs.html#cooarray', 'ltyp/arrs.py'),
                           'ltyp.arrs.coomatrix': ('arrs.html#coomatrix', 'ltyp/arrs.py'),
                           'ltyp.arrs.cscarray': ('arrs.html#cscarray', 'ltyp/arrs.py'),
                           'ltyp.arrs.cscmatrix': ('arrs.html#cscmatrix', 'ltyp/arrs.py'),
                           'ltyp.arrs.csrarray': ('arrs.html#csrarray', 'ltyp/arrs.py'),
                           'ltyp.arrs.csrmatrix': ('arrs.html#csrmatrix', 'ltyp/arrs.py'),
                           'ltyp.arrs.diaarray': ('arrs.html#diaarray', 'ltyp/arrs.py'),
                           'ltyp.arrs.diamatrix': ('arrs.html#diamatrix', 'ltyp/arrs.py'),
                           'ltyp.arrs.dokarray': ('arrs.html#dokarray', 'ltyp/arrs.py'),
                           'ltyp.arrs.dokmatrix': ('arrs.html#dokmatrix', 'ltyp/arrs.py'),
                           'ltyp.arrs.lilarray': ('arrs.html#lilarray', 'ltyp/arrs.py'),
                           'ltyp.arrs.lilmatrix': ('arrs.html#lilmatrix', 'ltyp/arrs.py'),
                           'ltyp.arrs.matrix': ('arrs.html#matrix', 'ltyp/arrs.py'),
                           'ltyp.arrs.nparray': ('arrs.html#nparray', 'ltyp/arrs.py'),
                           'ltyp.arrs.npempty': ('arrs.html#npempty', 'ltyp/arrs.py'),
                           'ltyp.arrs.npmatrix': ('arrs.html#npmatrix', 'ltyp/arrs.py'),
                           'ltyp.arrs.recarray': ('arrs.html#recarray', 'ltyp/arrs.py'),
                           'ltyp.arrs.sparray': ('arrs.html#sparray', 'ltyp/arrs.py'),
                           'ltyp.arrs.sparse': ('arrs.html#sparse', 'ltyp/arrs.py'),
                           'ltyp.arrs.sparsearray': ('arrs.html#sparsearray', 'ltyp/arrs.py'),
                           'ltyp.arrs.sparsematrix': ('arrs.html#sparsematrix', 'ltyp/arrs.py'),
                           'ltyp.arrs.spmatrix': ('arrs.html#spmatrix', 'ltyp/arrs.py')},
            'ltyp.atyp': {},
            'ltyp.bool': { 'ltyp.bool.bool01': ('bool.html#bool01', 'ltyp/bool.py'),
                           'ltyp.bool.boolic': ('bool.html#boolic', 'ltyp/bool.py'),
                           'ltyp.bool.bools': ('bool.html#bools', 'ltyp/bool.py'),
                           'ltyp.bool.iterbool': ('bool.html#iterbool', 'ltyp/bool.py'),
                           'ltyp.bool.npbool': ('bool.html#npbool', 'ltyp/bool.py')},
            'ltyp.data': { 'ltyp.data.adata': ('data.html#adata', 'ltyp/data.py'),
                           'ltyp.data.adatas': ('data.html#adatas', 'ltyp/data.py'),
                           'ltyp.data.datasource': ('data.html#datasource', 'ltyp/data.py'),
                           'ltyp.data.datatype': ('data.html#datatype', 'ltyp/data.py'),
                           'ltyp.data.device': ('data.html#device', 'ltyp/data.py'),
                           'ltyp.data.dtype': ('data.html#dtype', 'ltyp/data.py'),
                           'ltyp.data.graphtype': ('data.html#graphtype', 'ltyp/data.py'),
                           'ltyp.data.npdatasource': ('data.html#npdatasource', 'ltyp/data.py'),
                           'ltyp.data.shaped': ('data.html#shaped', 'ltyp/data.py'),
                           'ltyp.data.size': ('data.html#size', 'ltyp/data.py')},
            'ltyp.dims': { 'ltyp.dims.dim1': ('dims.html#dim1', 'ltyp/dims.py'),
                           'ltyp.dims.dim2': ('dims.html#dim2', 'ltyp/dims.py'),
                           'ltyp.dims.dim3': ('dims.html#dim3', 'ltyp/dims.py'),
                           'ltyp.dims.dim4': ('dims.html#dim4', 'ltyp/dims.py'),
                           'ltyp.dims.dimmed': ('dims.html#dimmed', 'ltyp/dims.py')},
            'ltyp.imgs': { 'ltyp.imgs.cv2vidcap': ('imgs.html#cv2vidcap', 'ltyp/imgs.py'),
                           'ltyp.imgs.image': ('imgs.html#image', 'ltyp/imgs.py'),
                           'ltyp.imgs.pilimage': ('imgs.html#pilimage', 'ltyp/imgs.py'),
                           'ltyp.imgs.vidcap': ('imgs.html#vidcap', 'ltyp/imgs.py')},
            'ltyp.iter': {'ltyp.iter.itertype': ('iter.html#itertype', 'ltyp/iter.py')},
            'ltyp.libs': { 'ltyp.libs.builtinfunctype': ('libs.html#builtinfunctype', 'ltyp/libs.py'),
                           'ltyp.libs.dictitems': ('libs.html#dictitems', 'ltyp/libs.py'),
                           'ltyp.libs.dictkeys': ('libs.html#dictkeys', 'ltyp/libs.py'),
                           'ltyp.libs.dictvalues': ('libs.html#dictvalues', 'ltyp/libs.py'),
                           'ltyp.libs.functiontype': ('libs.html#functiontype', 'ltyp/libs.py'),
                           'ltyp.libs.ichain': ('libs.html#ichain', 'ltyp/libs.py'),
                           'ltyp.libs.iprod': ('libs.html#iprod', 'ltyp/libs.py'),
                           'ltyp.libs.logger': ('libs.html#logger', 'ltyp/libs.py'),
                           'ltyp.libs.mapping': ('libs.html#mapping', 'ltyp/libs.py'),
                           'ltyp.libs.moduleloader': ('libs.html#moduleloader', 'ltyp/libs.py'),
                           'ltyp.libs.modulespec': ('libs.html#modulespec', 'ltyp/libs.py'),
                           'ltyp.libs.moduletype': ('libs.html#moduletype', 'ltyp/libs.py'),
                           'ltyp.libs.ospathlike': ('libs.html#ospathlike', 'ltyp/libs.py'),
                           'ltyp.libs.param': ('libs.html#param', 'ltyp/libs.py'),
                           'ltyp.libs.pathlike': ('libs.html#pathlike', 'ltyp/libs.py'),
                           'ltyp.libs.plibpath': ('libs.html#plibpath', 'ltyp/libs.py'),
                           'ltyp.libs.posixpath': ('libs.html#posixpath', 'ltyp/libs.py'),
                           'ltyp.libs.richcons': ('libs.html#richcons', 'ltyp/libs.py'),
                           'ltyp.libs.richprog': ('libs.html#richprog', 'ltyp/libs.py'),
                           'ltyp.libs.richtask': ('libs.html#richtask', 'ltyp/libs.py'),
                           'ltyp.libs.richtext': ('libs.html#richtext', 'ltyp/libs.py'),
                           'ltyp.libs.richtree': ('libs.html#richtree', 'ltyp/libs.py'),
                           'ltyp.libs.sig': ('libs.html#sig', 'ltyp/libs.py'),
                           'ltyp.libs.tqdmauto': ('libs.html#tqdmauto', 'ltyp/libs.py'),
                           'ltyp.libs.trackbacktype': ('libs.html#trackbacktype', 'ltyp/libs.py'),
                           'ltyp.libs.typerapp': ('libs.html#typerapp', 'ltyp/libs.py'),
                           'ltyp.libs.wrappertype': ('libs.html#wrappertype', 'ltyp/libs.py'),
                           'ltyp.libs.ziplong': ('libs.html#ziplong', 'ltyp/libs.py')},
            'ltyp.nans': { 'ltyp.nans.nan': ('nans.html#nan', 'ltyp/nans.py'),
                           'ltyp.nans.nanq': ('nans.html#nanq', 'ltyp/nans.py'),
                           'ltyp.nans.nans': ('nans.html#nans', 'ltyp/nans.py'),
                           'ltyp.nans.none': ('nans.html#none', 'ltyp/nans.py'),
                           'ltyp.nans.npnan': ('nans.html#npnan', 'ltyp/nans.py'),
                           'ltyp.nans.pdna': ('nans.html#pdna', 'ltyp/nans.py'),
                           'ltyp.nans.pynan': ('nans.html#pynan', 'ltyp/nans.py')},
            'ltyp.nums': { 'ltyp.nums.floatq': ('nums.html#floatq', 'ltyp/nums.py'),
                           'ltyp.nums.floats': ('nums.html#floats', 'ltyp/nums.py'),
                           'ltyp.nums.intq': ('nums.html#intq', 'ltyp/nums.py'),
                           'ltyp.nums.ints': ('nums.html#ints', 'ltyp/nums.py'),
                           'ltyp.nums.iternum': ('nums.html#iternum', 'ltyp/nums.py'),
                           'ltyp.nums.num': ('nums.html#num', 'ltyp/nums.py'),
                           'ltyp.nums.numq': ('nums.html#numq', 'ltyp/nums.py'),
                           'ltyp.nums.nums': ('nums.html#nums', 'ltyp/nums.py'),
                           'ltyp.nums.numstr': ('nums.html#numstr', 'ltyp/nums.py'),
                           'ltyp.nums.real': ('nums.html#real', 'ltyp/nums.py'),
                           'ltyp.nums.realq': ('nums.html#realq', 'ltyp/nums.py'),
                           'ltyp.nums.reals': ('nums.html#reals', 'ltyp/nums.py')},
            'ltyp.pand': { 'ltyp.pand.boolindex': ('pand.html#boolindex', 'ltyp/pand.py'),
                           'ltyp.pand.catindex': ('pand.html#catindex', 'ltyp/pand.py'),
                           'ltyp.pand.dataframe': ('pand.html#dataframe', 'ltyp/pand.py'),
                           'ltyp.pand.groupkey': ('pand.html#groupkey', 'ltyp/pand.py'),
                           'ltyp.pand.indexlike': ('pand.html#indexlike', 'ltyp/pand.py'),
                           'ltyp.pand.indextype': ('pand.html#indextype', 'ltyp/pand.py'),
                           'ltyp.pand.pdcataccessor': ('pand.html#pdcataccessor', 'ltyp/pand.py'),
                           'ltyp.pand.pdcatindex': ('pand.html#pdcatindex', 'ltyp/pand.py'),
                           'ltyp.pand.pddataframe': ('pand.html#pddataframe', 'ltyp/pand.py'),
                           'ltyp.pand.pddelegate': ('pand.html#pddelegate', 'ltyp/pand.py'),
                           'ltyp.pand.pdindex': ('pand.html#pdindex', 'ltyp/pand.py'),
                           'ltyp.pand.pdseries': ('pand.html#pdseries', 'ltyp/pand.py'),
                           'ltyp.pand.serialized': ('pand.html#serialized', 'ltyp/pand.py'),
                           'ltyp.pand.serieslike': ('pand.html#serieslike', 'ltyp/pand.py'),
                           'ltyp.pand.seriestype': ('pand.html#seriestype', 'ltyp/pand.py')},
            'ltyp.plot': { 'ltyp.plot.artist': ('plot.html#artist', 'ltyp/plot.py'),
                           'ltyp.plot.colormap': ('plot.html#colormap', 'ltyp/plot.py'),
                           'ltyp.plot.lscolormap': ('plot.html#lscolormap', 'ltyp/plot.py'),
                           'ltyp.plot.mplaxes': ('plot.html#mplaxes', 'ltyp/plot.py'),
                           'ltyp.plot.mplpatch': ('plot.html#mplpatch', 'ltyp/plot.py')},
            'ltyp.strs': { 'ltyp.strs.iterstr': ('strs.html#iterstr', 'ltyp/strs.py'),
                           'ltyp.strs.nilstr': ('strs.html#nilstr', 'ltyp/strs.py'),
                           'ltyp.strs.notnilstr': ('strs.html#notnilstr', 'ltyp/strs.py'),
                           'ltyp.strs.notstrbytes': ('strs.html#notstrbytes', 'ltyp/strs.py'),
                           'ltyp.strs.pttn': ('strs.html#pttn', 'ltyp/strs.py'),
                           'ltyp.strs.strbytes': ('strs.html#strbytes', 'ltyp/strs.py'),
                           'ltyp.strs.strq': ('strs.html#strq', 'ltyp/strs.py'),
                           'ltyp.strs.strs': ('strs.html#strs', 'ltyp/strs.py'),
                           'ltyp.strs.strtmpl': ('strs.html#strtmpl', 'ltyp/strs.py')},
            'ltyp.trch': { 'ltyp.trch.augmenter': ('trch.html#augmenter', 'ltyp/trch.py'),
                           'ltyp.trch.booltensor': ('trch.html#booltensor', 'ltyp/trch.py'),
                           'ltyp.trch.brownianintervial': ('trch.html#brownianintervial', 'ltyp/trch.py'),
                           'ltyp.trch.floattensor': ('trch.html#floattensor', 'ltyp/trch.py'),
                           'ltyp.trch.inttensor': ('trch.html#inttensor', 'ltyp/trch.py'),
                           'ltyp.trch.memfmt': ('trch.html#memfmt', 'ltyp/trch.py'),
                           'ltyp.trch.nantensor': ('trch.html#nantensor', 'ltyp/trch.py'),
                           'ltyp.trch.neuraldynamics': ('trch.html#neuraldynamics', 'ltyp/trch.py'),
                           'ltyp.trch.neuralode': ('trch.html#neuralode', 'ltyp/trch.py'),
                           'ltyp.trch.neuralsde': ('trch.html#neuralsde', 'ltyp/trch.py'),
                           'ltyp.trch.nnmodule': ('trch.html#nnmodule', 'ltyp/trch.py'),
                           'ltyp.trch.odefunc': ('trch.html#odefunc', 'ltyp/trch.py'),
                           'ltyp.trch.pldatamodule': ('trch.html#pldatamodule', 'ltyp/trch.py'),
                           'ltyp.trch.plmodule': ('trch.html#plmodule', 'ltyp/trch.py'),
                           'ltyp.trch.presfmt': ('trch.html#presfmt', 'ltyp/trch.py'),
                           'ltyp.trch.ptdataloader': ('trch.html#ptdataloader', 'ltyp/trch.py'),
                           'ltyp.trch.ptdataset': ('trch.html#ptdataset', 'ltyp/trch.py'),
                           'ltyp.trch.ptdevice': ('trch.html#ptdevice', 'ltyp/trch.py'),
                           'ltyp.trch.ptmodule': ('trch.html#ptmodule', 'ltyp/trch.py'),
                           'ltyp.trch.ptsize': ('trch.html#ptsize', 'ltyp/trch.py'),
                           'ltyp.trch.pttensor': ('trch.html#pttensor', 'ltyp/trch.py'),
                           'ltyp.trch.pttype': ('trch.html#pttype', 'ltyp/trch.py'),
                           'ltyp.trch.sdefunc': ('trch.html#sdefunc', 'ltyp/trch.py'),
                           'ltyp.trch.sdeito': ('trch.html#sdeito', 'ltyp/trch.py'),
                           'ltyp.trch.tensor': ('trch.html#tensor', 'ltyp/trch.py')}}}
