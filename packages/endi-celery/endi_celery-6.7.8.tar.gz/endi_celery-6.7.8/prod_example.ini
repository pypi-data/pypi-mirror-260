[app:main]
use = egg:endi_celery#worker

pyramid.default_locale_name = fr_FR
pyramid.includes =
                    pyramid_tm
                    pyramid_services
                    pyramid_layout
                    pyramid_mako
                    pyramid_chameleon
                    pyramid_celery
                    pyramid_mailer
                    pyramid_services
                    endi_payment



# Pyramid mailer configuration
mail.host=xxxxx
mail.port=xxxxx
mail.default_sender=xxxxx
mail.bounce_url=xxxxx
mail.optout_address=xxxxx



# SQLAlchemy Configuration
sqlalchemy.url = xxxxx
sqlalchemy.echo=False
sqlalchemy.encoding=UTF8
# Those variables should be improved
sqlalchemy.pool_recycle=1600

# Mako configuration
mako.directories = endi:templates
mako.imports = from markupsafe import escape_silent
mako.default_filters = escape_silent
mako.module_directory = xxxxxxx/celery/mako
# Beaker Configuration
session.type=file
session.data_dir = xxxxxxx/beaker/sessions/data
session.lock_dir = xxxxxxx/beaker/sessions/lock
session.cookie_on_exception = true
session.auto=True
session.secret=xxxxxx
session.timeout=3600
session.longtimeout=604800
cache.data_dir = xxxxxxx/beaker/cache/data
cache.regions = default_term, second, short_term, long_term
cache.type = file
cache.second.expire = 1
cache.short_term.expire = 60
cache.default_term.expire = 300
cache.long_term.expire = 3600


# endi specific configuration keys
endi.instance_name=xxxxxx
# Le rep temporaire partagée entre endi et endi_celery
endi.static_tmp=xxxxxxx/static_tmp/
# rep pour le parsing des écritures comptables en mode fichier
endi.parsing_pool_parent=/mnt/celery/
# Mail pour être notifié des générations des états
endi.sysadmin_mail=xxxx

# The depot path for static datas
endi.depot_path=/var/endi/files/

# Endi edocsafe
endi_payment_db.url = xxxxxxx
endi_payment_db.pool_recycle=1600
endi_payment.interfaces.IPaymentRecordHistoryService=endi_payment.history.HistoryDBService
endi_edocsafe.url=xxxxx
endi_edocsafe.login=xxxxx
endi_edocsafe.password=xxxxx
endi.services.task_pdf_storage_service = endi.views.task.pdf_storage_service.PdfFileDepotStorageService

# Ici les clés sont désormais en minuscule
[celery]
broker_url = redis://localhost:6379/0
imports =
    endi_celery.tasks.tasks
    endi_celery.tasks.mail
    endi_celery.tasks.csv_import
    endi_celery.tasks.export
    endi_celery.tasks.accounting_measure_compute
    endi_celery.tasks.accounting_parser
    endi_edocsafe.tasks


task_serializer = json
accept_content=
                json
                yaml


[celerybeat:accounting_parser]
task = endi_celery.tasks.accounting_parser.handle_pool_task
type = timedelta
# 15 minutes  attention, il lui faut des " et pas des '
schedule = {"seconds": 900}

[pshell]
models = endi_celery.models
db=endi_base.models.base.DBSESSION
transaction=transaction

[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 8080
