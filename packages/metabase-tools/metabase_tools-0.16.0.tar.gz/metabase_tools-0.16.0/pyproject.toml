[tool.poetry]
name = "metabase-tools"
version = "0.16.0"
description = "Unofficial API wrapper for Metabase plus additional helper tools"
license = "MIT"
authors = ["Josh Odell <j01101111sh@gmail.com>"]
maintainers = ["Josh Odell <j01101111sh@gmail.com>"]
readme = "README.md"
homepage = "https://j01101111sh.github.io/metabase-tools/"
repository = "https://github.com/j01101111sh/metabase-tools"
documentation = "https://j01101111sh.github.io/metabase-tools/"
classifiers = [
    "Programming Language :: Python :: 3",
    "Development Status :: 3 - Alpha",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Cython",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Typing :: Typed"
]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
requests = "^2.28.1"
types-requests = "^2.28.9"
pydantic = "^1.9.1"
packaging = ">=21.3,<24.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = ">=7.1.2,<9.0.0"
pytest-cov = ">=3,<5"
pylint = ">=2.14.5,<4.0.0"
black = ">=22.6,<25.0"
isort = "^5.10.1"
mypy = ">=0.971,<1.9"
pre-commit = ">=2.20,<4.0"
flake8 = ">=6.1,<8.0"
pyupgrade = "^3.15.0"
bandit = "^1.7.5"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
Sphinx = ">=5.1.1,<8.0.0"
furo = ">=2023.3.27,<2025.0.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tools.black]
target-version = ['py310','py311','py312']

[tool.isort]
profile = 'black'

[tool.pylint.main]
extension-pkg-whitelist = ["pydantic"]
disable=[
    "R0801", # similar lines in 2 files
    "R0902", # too many instance attributes
    "R0913", # too many arguments
    ]

[tool.pylint.format]
max-line-length = "88"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "*.py"
python_functions = "test_*"

log_cli = true
log_cli_level = "WARNING"
log_cli_format = "%(asctime)s - %(levelname)s - %(name)s:%(lineno)d\n\t%(message)s"

log_file_level = "DEBUG"
log_file_format = "%(asctime)s - %(levelname)s - %(name)s:%(lineno)d\n\t%(message)s"

[tool.coverage.report]
omit = ["tests/*.py"]
exclude_lines = [
    "def _","except MetabaseApiException",
    "elif response.status_code == 401:",
    "TypeError",
    "AttributeError",
    "if TYPE_CHECKING:",
    "def untested"
]
show_missing = true
