# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/typs',
                'doc_host': 'https://dsm-72.github.io',
                'git_url': 'https://github.com/dsm-72/typs',
                'lib_path': 'typs'},
  'syms': { 'typs.core.base': { 'typs.core.base.Duck': ('01_core/base.html#duck', 'typs/core/base.py'),
                                'typs.core.base.DuckModule': ('01_core/base.html#duckmodule', 'typs/core/base.py'),
                                'typs.core.base.DuckSpec': ('01_core/base.html#duckspec', 'typs/core/base.py'),
                                'typs.core.base.DuckSpec.__init__': ('01_core/base.html#duckspec.__init__', 'typs/core/base.py'),
                                'typs.core.base.DuckSpec.__load__': ('01_core/base.html#duckspec.__load__', 'typs/core/base.py'),
                                'typs.core.base.DuckSpec.__new__': ('01_core/base.html#duckspec.__new__', 'typs/core/base.py'),
                                'typs.core.base.DuckSpec.__prep__': ('01_core/base.html#duckspec.__prep__', 'typs/core/base.py'),
                                'typs.core.base.DuckSpec.__repr__': ('01_core/base.html#duckspec.__repr__', 'typs/core/base.py'),
                                'typs.core.base.DuckSpec.duck': ('01_core/base.html#duckspec.duck', 'typs/core/base.py'),
                                'typs.core.base.DuckSpec.load': ('01_core/base.html#duckspec.load', 'typs/core/base.py')},
            'typs.core.meta': { 'typs.core.meta.ABCDuck': ('01_core/meta.html#abcduck', 'typs/core/meta.py'),
                                'typs.core.meta.ABCDuck.__alias__': ('01_core/meta.html#abcduck.__alias__', 'typs/core/meta.py'),
                                'typs.core.meta.ABCDuck.__call__': ('01_core/meta.html#abcduck.__call__', 'typs/core/meta.py'),
                                'typs.core.meta.ABCDuck.__contains__': ('01_core/meta.html#abcduck.__contains__', 'typs/core/meta.py'),
                                'typs.core.meta.ABCDuck.__eq__': ('01_core/meta.html#abcduck.__eq__', 'typs/core/meta.py'),
                                'typs.core.meta.ABCDuck.__guard__': ('01_core/meta.html#abcduck.__guard__', 'typs/core/meta.py'),
                                'typs.core.meta.ABCDuck.__guardq__': ('01_core/meta.html#abcduck.__guardq__', 'typs/core/meta.py'),
                                'typs.core.meta.ABCDuck.__hash__': ('01_core/meta.html#abcduck.__hash__', 'typs/core/meta.py'),
                                'typs.core.meta.ABCDuck.__instancecheck__': ( '01_core/meta.html#abcduck.__instancecheck__',
                                                                              'typs/core/meta.py'),
                                'typs.core.meta.ABCDuck.__invert__': ('01_core/meta.html#abcduck.__invert__', 'typs/core/meta.py'),
                                'typs.core.meta.ABCDuck.__membercheck__': ( '01_core/meta.html#abcduck.__membercheck__',
                                                                            'typs/core/meta.py'),
                                'typs.core.meta.ABCDuck.__memberguard__': ( '01_core/meta.html#abcduck.__memberguard__',
                                                                            'typs/core/meta.py'),
                                'typs.core.meta.ABCDuck.__notinstance__': ( '01_core/meta.html#abcduck.__notinstance__',
                                                                            'typs/core/meta.py'),
                                'typs.core.meta.ABCDuck.__optinstance__': ( '01_core/meta.html#abcduck.__optinstance__',
                                                                            'typs/core/meta.py'),
                                'typs.core.meta.ABCDuck.__repr__': ('01_core/meta.html#abcduck.__repr__', 'typs/core/meta.py'),
                                'typs.core.meta.ABCDuck.__subclasscheck__': ( '01_core/meta.html#abcduck.__subclasscheck__',
                                                                              'typs/core/meta.py'),
                                'typs.core.meta.ABCDuck.__types__': ('01_core/meta.html#abcduck.__types__', 'typs/core/meta.py'),
                                'typs.core.meta.ABCDuck.__typesq__': ('01_core/meta.html#abcduck.__typesq__', 'typs/core/meta.py'),
                                'typs.core.meta.ABCDuck.__usetypes__': ('01_core/meta.html#abcduck.__usetypes__', 'typs/core/meta.py'),
                                'typs.core.meta.ABCSpecies': ('01_core/meta.html#abcspecies', 'typs/core/meta.py'),
                                'typs.core.meta.ABCSpecies.__hash__': ('01_core/meta.html#abcspecies.__hash__', 'typs/core/meta.py'),
                                'typs.core.meta.ABCSpecies.__migrate__': ('01_core/meta.html#abcspecies.__migrate__', 'typs/core/meta.py'),
                                'typs.core.meta.ABCSpecies.__not__': ('01_core/meta.html#abcspecies.__not__', 'typs/core/meta.py'),
                                'typs.core.meta.ABCSpecies.__opt__': ('01_core/meta.html#abcspecies.__opt__', 'typs/core/meta.py'),
                                'typs.core.meta.ABCSpecies.__reg__': ('01_core/meta.html#abcspecies.__reg__', 'typs/core/meta.py'),
                                'typs.core.meta.DuckModuleMeta': ('01_core/meta.html#duckmodulemeta', 'typs/core/meta.py'),
                                'typs.core.meta.DuckModuleMeta.__getattr__': ( '01_core/meta.html#duckmodulemeta.__getattr__',
                                                                               'typs/core/meta.py'),
                                'typs.core.meta.DuckModuleMeta.__hash__': ( '01_core/meta.html#duckmodulemeta.__hash__',
                                                                            'typs/core/meta.py'),
                                'typs.core.meta.DuckModuleMeta.__instancecheck__': ( '01_core/meta.html#duckmodulemeta.__instancecheck__',
                                                                                     'typs/core/meta.py'),
                                'typs.core.meta.DuckProtocolMeta': ('01_core/meta.html#duckprotocolmeta', 'typs/core/meta.py'),
                                'typs.core.meta.DuckProtocolMeta.__contains__': ( '01_core/meta.html#duckprotocolmeta.__contains__',
                                                                                  'typs/core/meta.py'),
                                'typs.core.meta.DuckProtocolMeta.__duck__': ( '01_core/meta.html#duckprotocolmeta.__duck__',
                                                                              'typs/core/meta.py'),
                                'typs.core.meta.DuckProtocolMeta.__eq__': ( '01_core/meta.html#duckprotocolmeta.__eq__',
                                                                            'typs/core/meta.py'),
                                'typs.core.meta.DuckProtocolMeta.__guard__': ( '01_core/meta.html#duckprotocolmeta.__guard__',
                                                                               'typs/core/meta.py'),
                                'typs.core.meta.DuckProtocolMeta.__guardq__': ( '01_core/meta.html#duckprotocolmeta.__guardq__',
                                                                                'typs/core/meta.py'),
                                'typs.core.meta.DuckProtocolMeta.__hash__': ( '01_core/meta.html#duckprotocolmeta.__hash__',
                                                                              'typs/core/meta.py'),
                                'typs.core.meta.DuckProtocolMeta.__instancecheck__': ( '01_core/meta.html#duckprotocolmeta.__instancecheck__',
                                                                                       'typs/core/meta.py'),
                                'typs.core.meta.DuckProtocolMeta.__invert__': ( '01_core/meta.html#duckprotocolmeta.__invert__',
                                                                                'typs/core/meta.py'),
                                'typs.core.meta.DuckProtocolMeta.__membercheck__': ( '01_core/meta.html#duckprotocolmeta.__membercheck__',
                                                                                     'typs/core/meta.py'),
                                'typs.core.meta.DuckProtocolMeta.__notinstance__': ( '01_core/meta.html#duckprotocolmeta.__notinstance__',
                                                                                     'typs/core/meta.py'),
                                'typs.core.meta.DuckProtocolMeta.__optinstance__': ( '01_core/meta.html#duckprotocolmeta.__optinstance__',
                                                                                     'typs/core/meta.py'),
                                'typs.core.meta.DuckProtocolMeta.__subclasscheck__': ( '01_core/meta.html#duckprotocolmeta.__subclasscheck__',
                                                                                       'typs/core/meta.py'),
                                'typs.core.meta.DuckProtocolMeta.__types__': ( '01_core/meta.html#duckprotocolmeta.__types__',
                                                                               'typs/core/meta.py'),
                                'typs.core.meta.DuckProtocolMeta.__typesq__': ( '01_core/meta.html#duckprotocolmeta.__typesq__',
                                                                                'typs/core/meta.py')},
            'typs.core.ptyp': { 'typs.core.ptyp.Prototype': ('01_core/ptyp.html#prototype', 'typs/core/ptyp.py'),
                                'typs.core.ptyp.PrototypeMeta': ('01_core/ptyp.html#prototypemeta', 'typs/core/ptyp.py'),
                                'typs.core.ptyp.PrototypeMeta.__hash__': ('01_core/ptyp.html#prototypemeta.__hash__', 'typs/core/ptyp.py'),
                                'typs.core.ptyp.PrototypeMeta.__new__': ('01_core/ptyp.html#prototypemeta.__new__', 'typs/core/ptyp.py'),
                                'typs.core.ptyp.PrototypeMeta.getbtype': ('01_core/ptyp.html#prototypemeta.getbtype', 'typs/core/ptyp.py')},
            'typs.core.rchk': { 'typs.core.rchk.Alias': ('01_core/rchk.html#alias', 'typs/core/rchk.py'),
                                'typs.core.rchk.AliasMeta': ('01_core/rchk.html#aliasmeta', 'typs/core/rchk.py'),
                                'typs.core.rchk.AliasMeta.getbtype': ('01_core/rchk.html#aliasmeta.getbtype', 'typs/core/rchk.py'),
                                'typs.core.rchk.Not': ('01_core/rchk.html#not', 'typs/core/rchk.py'),
                                'typs.core.rchk.NotMeta': ('01_core/rchk.html#notmeta', 'typs/core/rchk.py'),
                                'typs.core.rchk.NotMeta.default_kwds': ('01_core/rchk.html#notmeta.default_kwds', 'typs/core/rchk.py'),
                                'typs.core.rchk.NotMeta.getbtype': ('01_core/rchk.html#notmeta.getbtype', 'typs/core/rchk.py'),
                                'typs.core.rchk.NotMeta.guard': ('01_core/rchk.html#notmeta.guard', 'typs/core/rchk.py'),
                                'typs.core.rchk.Opt': ('01_core/rchk.html#opt', 'typs/core/rchk.py'),
                                'typs.core.rchk.OptionalMeta': ('01_core/rchk.html#optionalmeta', 'typs/core/rchk.py'),
                                'typs.core.rchk.OptionalMeta.__new__': ('01_core/rchk.html#optionalmeta.__new__', 'typs/core/rchk.py'),
                                'typs.core.rchk.OptionalMeta.default_kwds': ( '01_core/rchk.html#optionalmeta.default_kwds',
                                                                              'typs/core/rchk.py'),
                                'typs.core.rchk.OptionalMeta.getbtype': ('01_core/rchk.html#optionalmeta.getbtype', 'typs/core/rchk.py'),
                                'typs.core.rchk.RuntimeCheckableMeta': ('01_core/rchk.html#runtimecheckablemeta', 'typs/core/rchk.py'),
                                'typs.core.rchk.RuntimeCheckableMeta.getbtype': ( '01_core/rchk.html#runtimecheckablemeta.getbtype',
                                                                                  'typs/core/rchk.py'),
                                'typs.core.rchk._RuntimeCheckableMeta': ('01_core/rchk.html#_runtimecheckablemeta', 'typs/core/rchk.py'),
                                'typs.core.rchk._RuntimeCheckableMeta.__call__': ( '01_core/rchk.html#_runtimecheckablemeta.__call__',
                                                                                   'typs/core/rchk.py'),
                                'typs.core.rchk._RuntimeCheckableMeta.__eq__': ( '01_core/rchk.html#_runtimecheckablemeta.__eq__',
                                                                                 'typs/core/rchk.py'),
                                'typs.core.rchk._RuntimeCheckableMeta.__hash__': ( '01_core/rchk.html#_runtimecheckablemeta.__hash__',
                                                                                   'typs/core/rchk.py'),
                                'typs.core.rchk._RuntimeCheckableMeta.__init__': ( '01_core/rchk.html#_runtimecheckablemeta.__init__',
                                                                                   'typs/core/rchk.py'),
                                'typs.core.rchk._RuntimeCheckableMeta.__init_subclass__': ( '01_core/rchk.html#_runtimecheckablemeta.__init_subclass__',
                                                                                            'typs/core/rchk.py'),
                                'typs.core.rchk._RuntimeCheckableMeta.__instancecheck__': ( '01_core/rchk.html#_runtimecheckablemeta.__instancecheck__',
                                                                                            'typs/core/rchk.py'),
                                'typs.core.rchk._RuntimeCheckableMeta.__instanceguard__': ( '01_core/rchk.html#_runtimecheckablemeta.__instanceguard__',
                                                                                            'typs/core/rchk.py'),
                                'typs.core.rchk._RuntimeCheckableMeta.__invert__': ( '01_core/rchk.html#_runtimecheckablemeta.__invert__',
                                                                                     'typs/core/rchk.py'),
                                'typs.core.rchk._RuntimeCheckableMeta.__invopt__': ( '01_core/rchk.html#_runtimecheckablemeta.__invopt__',
                                                                                     'typs/core/rchk.py'),
                                'typs.core.rchk._RuntimeCheckableMeta.__new__': ( '01_core/rchk.html#_runtimecheckablemeta.__new__',
                                                                                  'typs/core/rchk.py'),
                                'typs.core.rchk._RuntimeCheckableMeta.__not__': ( '01_core/rchk.html#_runtimecheckablemeta.__not__',
                                                                                  'typs/core/rchk.py'),
                                'typs.core.rchk._RuntimeCheckableMeta.__redirect__': ( '01_core/rchk.html#_runtimecheckablemeta.__redirect__',
                                                                                       'typs/core/rchk.py'),
                                'typs.core.rchk._RuntimeCheckableMeta.check': ( '01_core/rchk.html#_runtimecheckablemeta.check',
                                                                                'typs/core/rchk.py'),
                                'typs.core.rchk._RuntimeCheckableMeta.construct': ( '01_core/rchk.html#_runtimecheckablemeta.construct',
                                                                                    'typs/core/rchk.py'),
                                'typs.core.rchk._RuntimeCheckableMeta.default_kwds': ( '01_core/rchk.html#_runtimecheckablemeta.default_kwds',
                                                                                       'typs/core/rchk.py'),
                                'typs.core.rchk._RuntimeCheckableMeta.getbtype': ( '01_core/rchk.html#_runtimecheckablemeta.getbtype',
                                                                                   'typs/core/rchk.py'),
                                'typs.core.rchk._RuntimeCheckableMeta.guard': ( '01_core/rchk.html#_runtimecheckablemeta.guard',
                                                                                'typs/core/rchk.py'),
                                'typs.core.rchk._RuntimeCheckableMeta.makebases': ( '01_core/rchk.html#_runtimecheckablemeta.makebases',
                                                                                    'typs/core/rchk.py'),
                                'typs.core.rchk._RuntimeCheckableMeta.new': ( '01_core/rchk.html#_runtimecheckablemeta.new',
                                                                              'typs/core/rchk.py'),
                                'typs.core.rchk._RuntimeCheckableMeta.setqualname': ( '01_core/rchk.html#_runtimecheckablemeta.setqualname',
                                                                                      'typs/core/rchk.py'),
                                'typs.core.rchk._RuntimeCheckableMeta.typeguard': ( '01_core/rchk.html#_runtimecheckablemeta.typeguard',
                                                                                    'typs/core/rchk.py')},
            'typs.core.solo': { 'typs.core.solo.Empty': ('01_core/solo.html#empty', 'typs/core/solo.py'),
                                'typs.core.solo.EmptyModule': ('01_core/solo.html#emptymodule', 'typs/core/solo.py'),
                                'typs.core.solo.Module': ('01_core/solo.html#module', 'typs/core/solo.py'),
                                'typs.core.solo.Singleton': ('01_core/solo.html#singleton', 'typs/core/solo.py'),
                                'typs.core.solo.Singleton.__call__': ('01_core/solo.html#singleton.__call__', 'typs/core/solo.py'),
                                'typs.core.solo.Singleton.__eq__': ('01_core/solo.html#singleton.__eq__', 'typs/core/solo.py'),
                                'typs.core.solo.Singleton.__hash__': ('01_core/solo.html#singleton.__hash__', 'typs/core/solo.py'),
                                'typs.core.solo.Singleton.__instancecheck__': ( '01_core/solo.html#singleton.__instancecheck__',
                                                                                'typs/core/solo.py'),
                                'typs.core.solo.Singleton.__new__': ('01_core/solo.html#singleton.__new__', 'typs/core/solo.py'),
                                'typs.core.solo.Singleton.__repr__': ('01_core/solo.html#singleton.__repr__', 'typs/core/solo.py'),
                                'typs.core.solo.Singleton.__subclasscheck__': ( '01_core/solo.html#singleton.__subclasscheck__',
                                                                                'typs/core/solo.py')},
            'typs.inst.duck': { 'typs.inst.duck._mpl_axes': ('03_inst/duck.html#_mpl_axes', 'typs/inst/duck.py'),
                                'typs.inst.duck._mpl_base': ('03_inst/duck.html#_mpl_base', 'typs/inst/duck.py'),
                                'typs.inst.duck.adata': ('03_inst/duck.html#adata', 'typs/inst/duck.py'),
                                'typs.inst.duck.adatas': ('03_inst/duck.html#adatas', 'typs/inst/duck.py'),
                                'typs.inst.duck.array': ('03_inst/duck.html#array', 'typs/inst/duck.py'),
                                'typs.inst.duck.artist': ('03_inst/duck.html#artist', 'typs/inst/duck.py'),
                                'typs.inst.duck.augmenter': ('03_inst/duck.html#augmenter', 'typs/inst/duck.py'),
                                'typs.inst.duck.bool01': ('03_inst/duck.html#bool01', 'typs/inst/duck.py'),
                                'typs.inst.duck.boolic': ('03_inst/duck.html#boolic', 'typs/inst/duck.py'),
                                'typs.inst.duck.boolindex': ('03_inst/duck.html#boolindex', 'typs/inst/duck.py'),
                                'typs.inst.duck.bools': ('03_inst/duck.html#bools', 'typs/inst/duck.py'),
                                'typs.inst.duck.booltensor': ('03_inst/duck.html#booltensor', 'typs/inst/duck.py'),
                                'typs.inst.duck.brownianintervial': ('03_inst/duck.html#brownianintervial', 'typs/inst/duck.py'),
                                'typs.inst.duck.bsrarray': ('03_inst/duck.html#bsrarray', 'typs/inst/duck.py'),
                                'typs.inst.duck.bsrmatrix': ('03_inst/duck.html#bsrmatrix', 'typs/inst/duck.py'),
                                'typs.inst.duck.builtinfunctype': ('03_inst/duck.html#builtinfunctype', 'typs/inst/duck.py'),
                                'typs.inst.duck.catindex': ('03_inst/duck.html#catindex', 'typs/inst/duck.py'),
                                'typs.inst.duck.colormap': ('03_inst/duck.html#colormap', 'typs/inst/duck.py'),
                                'typs.inst.duck.cooarray': ('03_inst/duck.html#cooarray', 'typs/inst/duck.py'),
                                'typs.inst.duck.coomatrix': ('03_inst/duck.html#coomatrix', 'typs/inst/duck.py'),
                                'typs.inst.duck.cscarray': ('03_inst/duck.html#cscarray', 'typs/inst/duck.py'),
                                'typs.inst.duck.cscmatrix': ('03_inst/duck.html#cscmatrix', 'typs/inst/duck.py'),
                                'typs.inst.duck.csrarray': ('03_inst/duck.html#csrarray', 'typs/inst/duck.py'),
                                'typs.inst.duck.csrmatrix': ('03_inst/duck.html#csrmatrix', 'typs/inst/duck.py'),
                                'typs.inst.duck.cv2vidcap': ('03_inst/duck.html#cv2vidcap', 'typs/inst/duck.py'),
                                'typs.inst.duck.dataframe': ('03_inst/duck.html#dataframe', 'typs/inst/duck.py'),
                                'typs.inst.duck.datasource': ('03_inst/duck.html#datasource', 'typs/inst/duck.py'),
                                'typs.inst.duck.datatype': ('03_inst/duck.html#datatype', 'typs/inst/duck.py'),
                                'typs.inst.duck.device': ('03_inst/duck.html#device', 'typs/inst/duck.py'),
                                'typs.inst.duck.diaarray': ('03_inst/duck.html#diaarray', 'typs/inst/duck.py'),
                                'typs.inst.duck.diamatrix': ('03_inst/duck.html#diamatrix', 'typs/inst/duck.py'),
                                'typs.inst.duck.dictitems': ('03_inst/duck.html#dictitems', 'typs/inst/duck.py'),
                                'typs.inst.duck.dictkeys': ('03_inst/duck.html#dictkeys', 'typs/inst/duck.py'),
                                'typs.inst.duck.dictvalues': ('03_inst/duck.html#dictvalues', 'typs/inst/duck.py'),
                                'typs.inst.duck.dim1': ('03_inst/duck.html#dim1', 'typs/inst/duck.py'),
                                'typs.inst.duck.dim2': ('03_inst/duck.html#dim2', 'typs/inst/duck.py'),
                                'typs.inst.duck.dim3': ('03_inst/duck.html#dim3', 'typs/inst/duck.py'),
                                'typs.inst.duck.dim4': ('03_inst/duck.html#dim4', 'typs/inst/duck.py'),
                                'typs.inst.duck.dimmed': ('03_inst/duck.html#dimmed', 'typs/inst/duck.py'),
                                'typs.inst.duck.dokarray': ('03_inst/duck.html#dokarray', 'typs/inst/duck.py'),
                                'typs.inst.duck.dokmatrix': ('03_inst/duck.html#dokmatrix', 'typs/inst/duck.py'),
                                'typs.inst.duck.doubletensor': ('03_inst/duck.html#doubletensor', 'typs/inst/duck.py'),
                                'typs.inst.duck.dtype': ('03_inst/duck.html#dtype', 'typs/inst/duck.py'),
                                'typs.inst.duck.floatq': ('03_inst/duck.html#floatq', 'typs/inst/duck.py'),
                                'typs.inst.duck.floats': ('03_inst/duck.html#floats', 'typs/inst/duck.py'),
                                'typs.inst.duck.floattensor': ('03_inst/duck.html#floattensor', 'typs/inst/duck.py'),
                                'typs.inst.duck.functiontype': ('03_inst/duck.html#functiontype', 'typs/inst/duck.py'),
                                'typs.inst.duck.graphtype': ('03_inst/duck.html#graphtype', 'typs/inst/duck.py'),
                                'typs.inst.duck.groupkey': ('03_inst/duck.html#groupkey', 'typs/inst/duck.py'),
                                'typs.inst.duck.ichain': ('03_inst/duck.html#ichain', 'typs/inst/duck.py'),
                                'typs.inst.duck.image': ('03_inst/duck.html#image', 'typs/inst/duck.py'),
                                'typs.inst.duck.indexlike': ('03_inst/duck.html#indexlike', 'typs/inst/duck.py'),
                                'typs.inst.duck.indextype': ('03_inst/duck.html#indextype', 'typs/inst/duck.py'),
                                'typs.inst.duck.intq': ('03_inst/duck.html#intq', 'typs/inst/duck.py'),
                                'typs.inst.duck.ints': ('03_inst/duck.html#ints', 'typs/inst/duck.py'),
                                'typs.inst.duck.inttensor': ('03_inst/duck.html#inttensor', 'typs/inst/duck.py'),
                                'typs.inst.duck.iprod': ('03_inst/duck.html#iprod', 'typs/inst/duck.py'),
                                'typs.inst.duck.iterable': ('03_inst/duck.html#iterable', 'typs/inst/duck.py'),
                                'typs.inst.duck.itertype': ('03_inst/duck.html#itertype', 'typs/inst/duck.py'),
                                'typs.inst.duck.lcolormap': ('03_inst/duck.html#lcolormap', 'typs/inst/duck.py'),
                                'typs.inst.duck.lilarray': ('03_inst/duck.html#lilarray', 'typs/inst/duck.py'),
                                'typs.inst.duck.lilmatrix': ('03_inst/duck.html#lilmatrix', 'typs/inst/duck.py'),
                                'typs.inst.duck.logger': ('03_inst/duck.html#logger', 'typs/inst/duck.py'),
                                'typs.inst.duck.longtensor': ('03_inst/duck.html#longtensor', 'typs/inst/duck.py'),
                                'typs.inst.duck.lscolormap': ('03_inst/duck.html#lscolormap', 'typs/inst/duck.py'),
                                'typs.inst.duck.mapping': ('03_inst/duck.html#mapping', 'typs/inst/duck.py'),
                                'typs.inst.duck.matrix': ('03_inst/duck.html#matrix', 'typs/inst/duck.py'),
                                'typs.inst.duck.memfmt': ('03_inst/duck.html#memfmt', 'typs/inst/duck.py'),
                                'typs.inst.duck.moduleloader': ('03_inst/duck.html#moduleloader', 'typs/inst/duck.py'),
                                'typs.inst.duck.modulespec': ('03_inst/duck.html#modulespec', 'typs/inst/duck.py'),
                                'typs.inst.duck.moduletype': ('03_inst/duck.html#moduletype', 'typs/inst/duck.py'),
                                'typs.inst.duck.mplaxbase': ('03_inst/duck.html#mplaxbase', 'typs/inst/duck.py'),
                                'typs.inst.duck.mplaxes': ('03_inst/duck.html#mplaxes', 'typs/inst/duck.py'),
                                'typs.inst.duck.mplpatch': ('03_inst/duck.html#mplpatch', 'typs/inst/duck.py'),
                                'typs.inst.duck.nan': ('03_inst/duck.html#nan', 'typs/inst/duck.py'),
                                'typs.inst.duck.nanq': ('03_inst/duck.html#nanq', 'typs/inst/duck.py'),
                                'typs.inst.duck.nans': ('03_inst/duck.html#nans', 'typs/inst/duck.py'),
                                'typs.inst.duck.nantensor': ('03_inst/duck.html#nantensor', 'typs/inst/duck.py'),
                                'typs.inst.duck.neuraldynamics': ('03_inst/duck.html#neuraldynamics', 'typs/inst/duck.py'),
                                'typs.inst.duck.neuralode': ('03_inst/duck.html#neuralode', 'typs/inst/duck.py'),
                                'typs.inst.duck.neuralsde': ('03_inst/duck.html#neuralsde', 'typs/inst/duck.py'),
                                'typs.inst.duck.nilstr': ('03_inst/duck.html#nilstr', 'typs/inst/duck.py'),
                                'typs.inst.duck.nnmodule': ('03_inst/duck.html#nnmodule', 'typs/inst/duck.py'),
                                'typs.inst.duck.none': ('03_inst/duck.html#none', 'typs/inst/duck.py'),
                                'typs.inst.duck.notnilstr': ('03_inst/duck.html#notnilstr', 'typs/inst/duck.py'),
                                'typs.inst.duck.notstrbytes': ('03_inst/duck.html#notstrbytes', 'typs/inst/duck.py'),
                                'typs.inst.duck.nparray': ('03_inst/duck.html#nparray', 'typs/inst/duck.py'),
                                'typs.inst.duck.npdatasource': ('03_inst/duck.html#npdatasource', 'typs/inst/duck.py'),
                                'typs.inst.duck.npempty': ('03_inst/duck.html#npempty', 'typs/inst/duck.py'),
                                'typs.inst.duck.npmatrix': ('03_inst/duck.html#npmatrix', 'typs/inst/duck.py'),
                                'typs.inst.duck.num': ('03_inst/duck.html#num', 'typs/inst/duck.py'),
                                'typs.inst.duck.numq': ('03_inst/duck.html#numq', 'typs/inst/duck.py'),
                                'typs.inst.duck.nums': ('03_inst/duck.html#nums', 'typs/inst/duck.py'),
                                'typs.inst.duck.numstr': ('03_inst/duck.html#numstr', 'typs/inst/duck.py'),
                                'typs.inst.duck.odefunc': ('03_inst/duck.html#odefunc', 'typs/inst/duck.py'),
                                'typs.inst.duck.ospathlike': ('03_inst/duck.html#ospathlike', 'typs/inst/duck.py'),
                                'typs.inst.duck.param': ('03_inst/duck.html#param', 'typs/inst/duck.py'),
                                'typs.inst.duck.paramkind': ('03_inst/duck.html#paramkind', 'typs/inst/duck.py'),
                                'typs.inst.duck.pathlike': ('03_inst/duck.html#pathlike', 'typs/inst/duck.py'),
                                'typs.inst.duck.pattern': ('03_inst/duck.html#pattern', 'typs/inst/duck.py'),
                                'typs.inst.duck.pdcataccessor': ('03_inst/duck.html#pdcataccessor', 'typs/inst/duck.py'),
                                'typs.inst.duck.pdcatindex': ('03_inst/duck.html#pdcatindex', 'typs/inst/duck.py'),
                                'typs.inst.duck.pddataframe': ('03_inst/duck.html#pddataframe', 'typs/inst/duck.py'),
                                'typs.inst.duck.pddelegate': ('03_inst/duck.html#pddelegate', 'typs/inst/duck.py'),
                                'typs.inst.duck.pdindex': ('03_inst/duck.html#pdindex', 'typs/inst/duck.py'),
                                'typs.inst.duck.pdseries': ('03_inst/duck.html#pdseries', 'typs/inst/duck.py'),
                                'typs.inst.duck.pilimage': ('03_inst/duck.html#pilimage', 'typs/inst/duck.py'),
                                'typs.inst.duck.pldatamodule': ('03_inst/duck.html#pldatamodule', 'typs/inst/duck.py'),
                                'typs.inst.duck.plibpath': ('03_inst/duck.html#plibpath', 'typs/inst/duck.py'),
                                'typs.inst.duck.plmodule': ('03_inst/duck.html#plmodule', 'typs/inst/duck.py'),
                                'typs.inst.duck.posixpath': ('03_inst/duck.html#posixpath', 'typs/inst/duck.py'),
                                'typs.inst.duck.presfmt': ('03_inst/duck.html#presfmt', 'typs/inst/duck.py'),
                                'typs.inst.duck.ptdataloader': ('03_inst/duck.html#ptdataloader', 'typs/inst/duck.py'),
                                'typs.inst.duck.ptdataset': ('03_inst/duck.html#ptdataset', 'typs/inst/duck.py'),
                                'typs.inst.duck.ptdevice': ('03_inst/duck.html#ptdevice', 'typs/inst/duck.py'),
                                'typs.inst.duck.ptmodule': ('03_inst/duck.html#ptmodule', 'typs/inst/duck.py'),
                                'typs.inst.duck.ptsize': ('03_inst/duck.html#ptsize', 'typs/inst/duck.py'),
                                'typs.inst.duck.pttensor': ('03_inst/duck.html#pttensor', 'typs/inst/duck.py'),
                                'typs.inst.duck.real': ('03_inst/duck.html#real', 'typs/inst/duck.py'),
                                'typs.inst.duck.realq': ('03_inst/duck.html#realq', 'typs/inst/duck.py'),
                                'typs.inst.duck.reals': ('03_inst/duck.html#reals', 'typs/inst/duck.py'),
                                'typs.inst.duck.recarray': ('03_inst/duck.html#recarray', 'typs/inst/duck.py'),
                                'typs.inst.duck.rematch': ('03_inst/duck.html#rematch', 'typs/inst/duck.py'),
                                'typs.inst.duck.richcons': ('03_inst/duck.html#richcons', 'typs/inst/duck.py'),
                                'typs.inst.duck.richprog': ('03_inst/duck.html#richprog', 'typs/inst/duck.py'),
                                'typs.inst.duck.richtask': ('03_inst/duck.html#richtask', 'typs/inst/duck.py'),
                                'typs.inst.duck.richtext': ('03_inst/duck.html#richtext', 'typs/inst/duck.py'),
                                'typs.inst.duck.richtree': ('03_inst/duck.html#richtree', 'typs/inst/duck.py'),
                                'typs.inst.duck.sdefunc': ('03_inst/duck.html#sdefunc', 'typs/inst/duck.py'),
                                'typs.inst.duck.sdeito': ('03_inst/duck.html#sdeito', 'typs/inst/duck.py'),
                                'typs.inst.duck.serieslike': ('03_inst/duck.html#serieslike', 'typs/inst/duck.py'),
                                'typs.inst.duck.seriestype': ('03_inst/duck.html#seriestype', 'typs/inst/duck.py'),
                                'typs.inst.duck.shaped': ('03_inst/duck.html#shaped', 'typs/inst/duck.py'),
                                'typs.inst.duck.sig': ('03_inst/duck.html#sig', 'typs/inst/duck.py'),
                                'typs.inst.duck.size': ('03_inst/duck.html#size', 'typs/inst/duck.py'),
                                'typs.inst.duck.sparray': ('03_inst/duck.html#sparray', 'typs/inst/duck.py'),
                                'typs.inst.duck.sparse': ('03_inst/duck.html#sparse', 'typs/inst/duck.py'),
                                'typs.inst.duck.sparsearray': ('03_inst/duck.html#sparsearray', 'typs/inst/duck.py'),
                                'typs.inst.duck.sparsematrix': ('03_inst/duck.html#sparsematrix', 'typs/inst/duck.py'),
                                'typs.inst.duck.spmatrix': ('03_inst/duck.html#spmatrix', 'typs/inst/duck.py'),
                                'typs.inst.duck.strbytes': ('03_inst/duck.html#strbytes', 'typs/inst/duck.py'),
                                'typs.inst.duck.strq': ('03_inst/duck.html#strq', 'typs/inst/duck.py'),
                                'typs.inst.duck.strs': ('03_inst/duck.html#strs', 'typs/inst/duck.py'),
                                'typs.inst.duck.strtmpl': ('03_inst/duck.html#strtmpl', 'typs/inst/duck.py'),
                                'typs.inst.duck.tensor': ('03_inst/duck.html#tensor', 'typs/inst/duck.py'),
                                'typs.inst.duck.tqdmauto': ('03_inst/duck.html#tqdmauto', 'typs/inst/duck.py'),
                                'typs.inst.duck.trackbacktype': ('03_inst/duck.html#trackbacktype', 'typs/inst/duck.py'),
                                'typs.inst.duck.typerapp': ('03_inst/duck.html#typerapp', 'typs/inst/duck.py'),
                                'typs.inst.duck.vidcap': ('03_inst/duck.html#vidcap', 'typs/inst/duck.py'),
                                'typs.inst.duck.wrappertype': ('03_inst/duck.html#wrappertype', 'typs/inst/duck.py'),
                                'typs.inst.duck.ziplong': ('03_inst/duck.html#ziplong', 'typs/inst/duck.py')},
            'typs.inst.prot': { 'typs.inst.prot.adata': ('03_inst/prot.html#adata', 'typs/inst/prot.py'),
                                'typs.inst.prot.adatas': ('03_inst/prot.html#adatas', 'typs/inst/prot.py'),
                                'typs.inst.prot.array': ('03_inst/prot.html#array', 'typs/inst/prot.py'),
                                'typs.inst.prot.artist': ('03_inst/prot.html#artist', 'typs/inst/prot.py'),
                                'typs.inst.prot.augmenter': ('03_inst/prot.html#augmenter', 'typs/inst/prot.py'),
                                'typs.inst.prot.bool01': ('03_inst/prot.html#bool01', 'typs/inst/prot.py'),
                                'typs.inst.prot.boolic': ('03_inst/prot.html#boolic', 'typs/inst/prot.py'),
                                'typs.inst.prot.boolindex': ('03_inst/prot.html#boolindex', 'typs/inst/prot.py'),
                                'typs.inst.prot.bools': ('03_inst/prot.html#bools', 'typs/inst/prot.py'),
                                'typs.inst.prot.booltensor': ('03_inst/prot.html#booltensor', 'typs/inst/prot.py'),
                                'typs.inst.prot.brownianintervial': ('03_inst/prot.html#brownianintervial', 'typs/inst/prot.py'),
                                'typs.inst.prot.bsrarray': ('03_inst/prot.html#bsrarray', 'typs/inst/prot.py'),
                                'typs.inst.prot.bsrmatrix': ('03_inst/prot.html#bsrmatrix', 'typs/inst/prot.py'),
                                'typs.inst.prot.builtinfunctype': ('03_inst/prot.html#builtinfunctype', 'typs/inst/prot.py'),
                                'typs.inst.prot.catindex': ('03_inst/prot.html#catindex', 'typs/inst/prot.py'),
                                'typs.inst.prot.colormap': ('03_inst/prot.html#colormap', 'typs/inst/prot.py'),
                                'typs.inst.prot.cooarray': ('03_inst/prot.html#cooarray', 'typs/inst/prot.py'),
                                'typs.inst.prot.coomatrix': ('03_inst/prot.html#coomatrix', 'typs/inst/prot.py'),
                                'typs.inst.prot.cscarray': ('03_inst/prot.html#cscarray', 'typs/inst/prot.py'),
                                'typs.inst.prot.cscmatrix': ('03_inst/prot.html#cscmatrix', 'typs/inst/prot.py'),
                                'typs.inst.prot.csrarray': ('03_inst/prot.html#csrarray', 'typs/inst/prot.py'),
                                'typs.inst.prot.csrmatrix': ('03_inst/prot.html#csrmatrix', 'typs/inst/prot.py'),
                                'typs.inst.prot.cv2vidcap': ('03_inst/prot.html#cv2vidcap', 'typs/inst/prot.py'),
                                'typs.inst.prot.dataframe': ('03_inst/prot.html#dataframe', 'typs/inst/prot.py'),
                                'typs.inst.prot.datasource': ('03_inst/prot.html#datasource', 'typs/inst/prot.py'),
                                'typs.inst.prot.datatype': ('03_inst/prot.html#datatype', 'typs/inst/prot.py'),
                                'typs.inst.prot.device': ('03_inst/prot.html#device', 'typs/inst/prot.py'),
                                'typs.inst.prot.diaarray': ('03_inst/prot.html#diaarray', 'typs/inst/prot.py'),
                                'typs.inst.prot.diamatrix': ('03_inst/prot.html#diamatrix', 'typs/inst/prot.py'),
                                'typs.inst.prot.dictitems': ('03_inst/prot.html#dictitems', 'typs/inst/prot.py'),
                                'typs.inst.prot.dictkeys': ('03_inst/prot.html#dictkeys', 'typs/inst/prot.py'),
                                'typs.inst.prot.dictvalues': ('03_inst/prot.html#dictvalues', 'typs/inst/prot.py'),
                                'typs.inst.prot.dim1': ('03_inst/prot.html#dim1', 'typs/inst/prot.py'),
                                'typs.inst.prot.dim2': ('03_inst/prot.html#dim2', 'typs/inst/prot.py'),
                                'typs.inst.prot.dim3': ('03_inst/prot.html#dim3', 'typs/inst/prot.py'),
                                'typs.inst.prot.dim4': ('03_inst/prot.html#dim4', 'typs/inst/prot.py'),
                                'typs.inst.prot.dimmed': ('03_inst/prot.html#dimmed', 'typs/inst/prot.py'),
                                'typs.inst.prot.dokarray': ('03_inst/prot.html#dokarray', 'typs/inst/prot.py'),
                                'typs.inst.prot.dokmatrix': ('03_inst/prot.html#dokmatrix', 'typs/inst/prot.py'),
                                'typs.inst.prot.dtype': ('03_inst/prot.html#dtype', 'typs/inst/prot.py'),
                                'typs.inst.prot.floatq': ('03_inst/prot.html#floatq', 'typs/inst/prot.py'),
                                'typs.inst.prot.floats': ('03_inst/prot.html#floats', 'typs/inst/prot.py'),
                                'typs.inst.prot.floattensor': ('03_inst/prot.html#floattensor', 'typs/inst/prot.py'),
                                'typs.inst.prot.functiontype': ('03_inst/prot.html#functiontype', 'typs/inst/prot.py'),
                                'typs.inst.prot.graphtype': ('03_inst/prot.html#graphtype', 'typs/inst/prot.py'),
                                'typs.inst.prot.groupkey': ('03_inst/prot.html#groupkey', 'typs/inst/prot.py'),
                                'typs.inst.prot.ichain': ('03_inst/prot.html#ichain', 'typs/inst/prot.py'),
                                'typs.inst.prot.image': ('03_inst/prot.html#image', 'typs/inst/prot.py'),
                                'typs.inst.prot.indexlike': ('03_inst/prot.html#indexlike', 'typs/inst/prot.py'),
                                'typs.inst.prot.indextype': ('03_inst/prot.html#indextype', 'typs/inst/prot.py'),
                                'typs.inst.prot.intq': ('03_inst/prot.html#intq', 'typs/inst/prot.py'),
                                'typs.inst.prot.ints': ('03_inst/prot.html#ints', 'typs/inst/prot.py'),
                                'typs.inst.prot.inttensor': ('03_inst/prot.html#inttensor', 'typs/inst/prot.py'),
                                'typs.inst.prot.iprod': ('03_inst/prot.html#iprod', 'typs/inst/prot.py'),
                                'typs.inst.prot.iterbool': ('03_inst/prot.html#iterbool', 'typs/inst/prot.py'),
                                'typs.inst.prot.iternum': ('03_inst/prot.html#iternum', 'typs/inst/prot.py'),
                                'typs.inst.prot.iterstr': ('03_inst/prot.html#iterstr', 'typs/inst/prot.py'),
                                'typs.inst.prot.itertype': ('03_inst/prot.html#itertype', 'typs/inst/prot.py'),
                                'typs.inst.prot.lilarray': ('03_inst/prot.html#lilarray', 'typs/inst/prot.py'),
                                'typs.inst.prot.lilmatrix': ('03_inst/prot.html#lilmatrix', 'typs/inst/prot.py'),
                                'typs.inst.prot.logger': ('03_inst/prot.html#logger', 'typs/inst/prot.py'),
                                'typs.inst.prot.lscolormap': ('03_inst/prot.html#lscolormap', 'typs/inst/prot.py'),
                                'typs.inst.prot.mapping': ('03_inst/prot.html#mapping', 'typs/inst/prot.py'),
                                'typs.inst.prot.matrix': ('03_inst/prot.html#matrix', 'typs/inst/prot.py'),
                                'typs.inst.prot.memfmt': ('03_inst/prot.html#memfmt', 'typs/inst/prot.py'),
                                'typs.inst.prot.moduleloader': ('03_inst/prot.html#moduleloader', 'typs/inst/prot.py'),
                                'typs.inst.prot.modulespec': ('03_inst/prot.html#modulespec', 'typs/inst/prot.py'),
                                'typs.inst.prot.moduletype': ('03_inst/prot.html#moduletype', 'typs/inst/prot.py'),
                                'typs.inst.prot.mplaxes': ('03_inst/prot.html#mplaxes', 'typs/inst/prot.py'),
                                'typs.inst.prot.mplpatch': ('03_inst/prot.html#mplpatch', 'typs/inst/prot.py'),
                                'typs.inst.prot.nan': ('03_inst/prot.html#nan', 'typs/inst/prot.py'),
                                'typs.inst.prot.nanq': ('03_inst/prot.html#nanq', 'typs/inst/prot.py'),
                                'typs.inst.prot.nans': ('03_inst/prot.html#nans', 'typs/inst/prot.py'),
                                'typs.inst.prot.nantensor': ('03_inst/prot.html#nantensor', 'typs/inst/prot.py'),
                                'typs.inst.prot.neuraldynamics': ('03_inst/prot.html#neuraldynamics', 'typs/inst/prot.py'),
                                'typs.inst.prot.neuralode': ('03_inst/prot.html#neuralode', 'typs/inst/prot.py'),
                                'typs.inst.prot.neuralsde': ('03_inst/prot.html#neuralsde', 'typs/inst/prot.py'),
                                'typs.inst.prot.nilstr': ('03_inst/prot.html#nilstr', 'typs/inst/prot.py'),
                                'typs.inst.prot.nnmodule': ('03_inst/prot.html#nnmodule', 'typs/inst/prot.py'),
                                'typs.inst.prot.none': ('03_inst/prot.html#none', 'typs/inst/prot.py'),
                                'typs.inst.prot.notnilstr': ('03_inst/prot.html#notnilstr', 'typs/inst/prot.py'),
                                'typs.inst.prot.notstrbytes': ('03_inst/prot.html#notstrbytes', 'typs/inst/prot.py'),
                                'typs.inst.prot.nparray': ('03_inst/prot.html#nparray', 'typs/inst/prot.py'),
                                'typs.inst.prot.npbool': ('03_inst/prot.html#npbool', 'typs/inst/prot.py'),
                                'typs.inst.prot.npdatasource': ('03_inst/prot.html#npdatasource', 'typs/inst/prot.py'),
                                'typs.inst.prot.npempty': ('03_inst/prot.html#npempty', 'typs/inst/prot.py'),
                                'typs.inst.prot.npmatrix': ('03_inst/prot.html#npmatrix', 'typs/inst/prot.py'),
                                'typs.inst.prot.npnan': ('03_inst/prot.html#npnan', 'typs/inst/prot.py'),
                                'typs.inst.prot.num': ('03_inst/prot.html#num', 'typs/inst/prot.py'),
                                'typs.inst.prot.numq': ('03_inst/prot.html#numq', 'typs/inst/prot.py'),
                                'typs.inst.prot.nums': ('03_inst/prot.html#nums', 'typs/inst/prot.py'),
                                'typs.inst.prot.numstr': ('03_inst/prot.html#numstr', 'typs/inst/prot.py'),
                                'typs.inst.prot.odefunc': ('03_inst/prot.html#odefunc', 'typs/inst/prot.py'),
                                'typs.inst.prot.ospathlike': ('03_inst/prot.html#ospathlike', 'typs/inst/prot.py'),
                                'typs.inst.prot.param': ('03_inst/prot.html#param', 'typs/inst/prot.py'),
                                'typs.inst.prot.pathlike': ('03_inst/prot.html#pathlike', 'typs/inst/prot.py'),
                                'typs.inst.prot.pattern': ('03_inst/prot.html#pattern', 'typs/inst/prot.py'),
                                'typs.inst.prot.pdcataccessor': ('03_inst/prot.html#pdcataccessor', 'typs/inst/prot.py'),
                                'typs.inst.prot.pdcatindex': ('03_inst/prot.html#pdcatindex', 'typs/inst/prot.py'),
                                'typs.inst.prot.pddataframe': ('03_inst/prot.html#pddataframe', 'typs/inst/prot.py'),
                                'typs.inst.prot.pddelegate': ('03_inst/prot.html#pddelegate', 'typs/inst/prot.py'),
                                'typs.inst.prot.pdindex': ('03_inst/prot.html#pdindex', 'typs/inst/prot.py'),
                                'typs.inst.prot.pdna': ('03_inst/prot.html#pdna', 'typs/inst/prot.py'),
                                'typs.inst.prot.pdseries': ('03_inst/prot.html#pdseries', 'typs/inst/prot.py'),
                                'typs.inst.prot.pilimage': ('03_inst/prot.html#pilimage', 'typs/inst/prot.py'),
                                'typs.inst.prot.pldatamodule': ('03_inst/prot.html#pldatamodule', 'typs/inst/prot.py'),
                                'typs.inst.prot.plibpath': ('03_inst/prot.html#plibpath', 'typs/inst/prot.py'),
                                'typs.inst.prot.plmodule': ('03_inst/prot.html#plmodule', 'typs/inst/prot.py'),
                                'typs.inst.prot.posixpath': ('03_inst/prot.html#posixpath', 'typs/inst/prot.py'),
                                'typs.inst.prot.presfmt': ('03_inst/prot.html#presfmt', 'typs/inst/prot.py'),
                                'typs.inst.prot.ptdataloader': ('03_inst/prot.html#ptdataloader', 'typs/inst/prot.py'),
                                'typs.inst.prot.ptdataset': ('03_inst/prot.html#ptdataset', 'typs/inst/prot.py'),
                                'typs.inst.prot.ptdevice': ('03_inst/prot.html#ptdevice', 'typs/inst/prot.py'),
                                'typs.inst.prot.ptmodule': ('03_inst/prot.html#ptmodule', 'typs/inst/prot.py'),
                                'typs.inst.prot.ptsize': ('03_inst/prot.html#ptsize', 'typs/inst/prot.py'),
                                'typs.inst.prot.pttensor': ('03_inst/prot.html#pttensor', 'typs/inst/prot.py'),
                                'typs.inst.prot.pttype': ('03_inst/prot.html#pttype', 'typs/inst/prot.py'),
                                'typs.inst.prot.pynan': ('03_inst/prot.html#pynan', 'typs/inst/prot.py'),
                                'typs.inst.prot.real': ('03_inst/prot.html#real', 'typs/inst/prot.py'),
                                'typs.inst.prot.realq': ('03_inst/prot.html#realq', 'typs/inst/prot.py'),
                                'typs.inst.prot.reals': ('03_inst/prot.html#reals', 'typs/inst/prot.py'),
                                'typs.inst.prot.recarray': ('03_inst/prot.html#recarray', 'typs/inst/prot.py'),
                                'typs.inst.prot.rematch': ('03_inst/prot.html#rematch', 'typs/inst/prot.py'),
                                'typs.inst.prot.richcons': ('03_inst/prot.html#richcons', 'typs/inst/prot.py'),
                                'typs.inst.prot.richprog': ('03_inst/prot.html#richprog', 'typs/inst/prot.py'),
                                'typs.inst.prot.richtask': ('03_inst/prot.html#richtask', 'typs/inst/prot.py'),
                                'typs.inst.prot.richtext': ('03_inst/prot.html#richtext', 'typs/inst/prot.py'),
                                'typs.inst.prot.richtree': ('03_inst/prot.html#richtree', 'typs/inst/prot.py'),
                                'typs.inst.prot.sdefunc': ('03_inst/prot.html#sdefunc', 'typs/inst/prot.py'),
                                'typs.inst.prot.sdeito': ('03_inst/prot.html#sdeito', 'typs/inst/prot.py'),
                                'typs.inst.prot.serialized': ('03_inst/prot.html#serialized', 'typs/inst/prot.py'),
                                'typs.inst.prot.serieslike': ('03_inst/prot.html#serieslike', 'typs/inst/prot.py'),
                                'typs.inst.prot.seriestype': ('03_inst/prot.html#seriestype', 'typs/inst/prot.py'),
                                'typs.inst.prot.shaped': ('03_inst/prot.html#shaped', 'typs/inst/prot.py'),
                                'typs.inst.prot.sig': ('03_inst/prot.html#sig', 'typs/inst/prot.py'),
                                'typs.inst.prot.size': ('03_inst/prot.html#size', 'typs/inst/prot.py'),
                                'typs.inst.prot.sparray': ('03_inst/prot.html#sparray', 'typs/inst/prot.py'),
                                'typs.inst.prot.sparse': ('03_inst/prot.html#sparse', 'typs/inst/prot.py'),
                                'typs.inst.prot.sparsearray': ('03_inst/prot.html#sparsearray', 'typs/inst/prot.py'),
                                'typs.inst.prot.sparsematrix': ('03_inst/prot.html#sparsematrix', 'typs/inst/prot.py'),
                                'typs.inst.prot.spmatrix': ('03_inst/prot.html#spmatrix', 'typs/inst/prot.py'),
                                'typs.inst.prot.strbytes': ('03_inst/prot.html#strbytes', 'typs/inst/prot.py'),
                                'typs.inst.prot.strq': ('03_inst/prot.html#strq', 'typs/inst/prot.py'),
                                'typs.inst.prot.strs': ('03_inst/prot.html#strs', 'typs/inst/prot.py'),
                                'typs.inst.prot.strtmpl': ('03_inst/prot.html#strtmpl', 'typs/inst/prot.py'),
                                'typs.inst.prot.tensor': ('03_inst/prot.html#tensor', 'typs/inst/prot.py'),
                                'typs.inst.prot.tqdmauto': ('03_inst/prot.html#tqdmauto', 'typs/inst/prot.py'),
                                'typs.inst.prot.trackbacktype': ('03_inst/prot.html#trackbacktype', 'typs/inst/prot.py'),
                                'typs.inst.prot.typerapp': ('03_inst/prot.html#typerapp', 'typs/inst/prot.py'),
                                'typs.inst.prot.vidcap': ('03_inst/prot.html#vidcap', 'typs/inst/prot.py'),
                                'typs.inst.prot.wrappertype': ('03_inst/prot.html#wrappertype', 'typs/inst/prot.py'),
                                'typs.inst.prot.ziplong': ('03_inst/prot.html#ziplong', 'typs/inst/prot.py')},
            'typs.prep.matr': {},
            'typs.prep.mods': { 'typs.prep.mods._PIL': ('02_prep/mods.html#_pil', 'typs/prep/mods.py'),
                                'typs.prep.mods._anndata': ('02_prep/mods.html#_anndata', 'typs/prep/mods.py'),
                                'typs.prep.mods._collectionsabc': ('02_prep/mods.html#_collectionsabc', 'typs/prep/mods.py'),
                                'typs.prep.mods._cv2': ('02_prep/mods.html#_cv2', 'typs/prep/mods.py'),
                                'typs.prep.mods._graphtools': ('02_prep/mods.html#_graphtools', 'typs/prep/mods.py'),
                                'typs.prep.mods._importlib': ('02_prep/mods.html#_importlib', 'typs/prep/mods.py'),
                                'typs.prep.mods._inspect': ('02_prep/mods.html#_inspect', 'typs/prep/mods.py'),
                                'typs.prep.mods._itertools': ('02_prep/mods.html#_itertools', 'typs/prep/mods.py'),
                                'typs.prep.mods._logging': ('02_prep/mods.html#_logging', 'typs/prep/mods.py'),
                                'typs.prep.mods._math': ('02_prep/mods.html#_math', 'typs/prep/mods.py'),
                                'typs.prep.mods._matplotlib': ('02_prep/mods.html#_matplotlib', 'typs/prep/mods.py'),
                                'typs.prep.mods._mpl_artist': ('02_prep/mods.html#_mpl_artist', 'typs/prep/mods.py'),
                                'typs.prep.mods._mpl_axes': ('02_prep/mods.html#_mpl_axes', 'typs/prep/mods.py'),
                                'typs.prep.mods._mpl_base': ('02_prep/mods.html#_mpl_base', 'typs/prep/mods.py'),
                                'typs.prep.mods._mpl_patches': ('02_prep/mods.html#_mpl_patches', 'typs/prep/mods.py'),
                                'typs.prep.mods._numbers': ('02_prep/mods.html#_numbers', 'typs/prep/mods.py'),
                                'typs.prep.mods._numpy': ('02_prep/mods.html#_numpy', 'typs/prep/mods.py'),
                                'typs.prep.mods._os': ('02_prep/mods.html#_os', 'typs/prep/mods.py'),
                                'typs.prep.mods._pandas': ('02_prep/mods.html#_pandas', 'typs/prep/mods.py'),
                                'typs.prep.mods._pathlib': ('02_prep/mods.html#_pathlib', 'typs/prep/mods.py'),
                                'typs.prep.mods._phate': ('02_prep/mods.html#_phate', 'typs/prep/mods.py'),
                                'typs.prep.mods._pytorch_lightning': ('02_prep/mods.html#_pytorch_lightning', 'typs/prep/mods.py'),
                                'typs.prep.mods._re': ('02_prep/mods.html#_re', 'typs/prep/mods.py'),
                                'typs.prep.mods._rich': ('02_prep/mods.html#_rich', 'typs/prep/mods.py'),
                                'typs.prep.mods._scipy': ('02_prep/mods.html#_scipy', 'typs/prep/mods.py'),
                                'typs.prep.mods._seaborn': ('02_prep/mods.html#_seaborn', 'typs/prep/mods.py'),
                                'typs.prep.mods._sklearn': ('02_prep/mods.html#_sklearn', 'typs/prep/mods.py'),
                                'typs.prep.mods._string': ('02_prep/mods.html#_string', 'typs/prep/mods.py'),
                                'typs.prep.mods._torch': ('02_prep/mods.html#_torch', 'typs/prep/mods.py'),
                                'typs.prep.mods._torch_c': ('02_prep/mods.html#_torch_c', 'typs/prep/mods.py'),
                                'typs.prep.mods._torchdyn': ('02_prep/mods.html#_torchdyn', 'typs/prep/mods.py'),
                                'typs.prep.mods._torchsde': ('02_prep/mods.html#_torchsde', 'typs/prep/mods.py'),
                                'typs.prep.mods._torchvision': ('02_prep/mods.html#_torchvision', 'typs/prep/mods.py'),
                                'typs.prep.mods._tqdm': ('02_prep/mods.html#_tqdm', 'typs/prep/mods.py'),
                                'typs.prep.mods._typer': ('02_prep/mods.html#_typer', 'typs/prep/mods.py'),
                                'typs.prep.mods._types': ('02_prep/mods.html#_types', 'typs/prep/mods.py')},
            'typs.prep.spec': {},
            'typs.prep.trys': {},
            'typs.util.attr': { 'typs.util.attr.attr': ('00_util/attr.html#attr', 'typs/util/attr.py'),
                                'typs.util.attr.attribute': ('00_util/attr.html#attribute', 'typs/util/attr.py'),
                                'typs.util.attr.attribute.__call__': ('00_util/attr.html#attribute.__call__', 'typs/util/attr.py'),
                                'typs.util.attr.attribute.__guard__': ('00_util/attr.html#attribute.__guard__', 'typs/util/attr.py'),
                                'typs.util.attr.attribute.__init_subclass__': ( '00_util/attr.html#attribute.__init_subclass__',
                                                                                'typs/util/attr.py'),
                                'typs.util.attr.attribute.__new__': ('00_util/attr.html#attribute.__new__', 'typs/util/attr.py'),
                                'typs.util.attr.attribute.deco': ('00_util/attr.html#attribute.deco', 'typs/util/attr.py'),
                                'typs.util.attr.attribute.many': ('00_util/attr.html#attribute.many', 'typs/util/attr.py'),
                                'typs.util.attr.attrmeta': ('00_util/attr.html#attrmeta', 'typs/util/attr.py'),
                                'typs.util.attr.attrmeta.__deco__': ('00_util/attr.html#attrmeta.__deco__', 'typs/util/attr.py'),
                                'typs.util.attr.attrmeta.__eq__': ('00_util/attr.html#attrmeta.__eq__', 'typs/util/attr.py'),
                                'typs.util.attr.attrmeta.__guard__': ('00_util/attr.html#attrmeta.__guard__', 'typs/util/attr.py'),
                                'typs.util.attr.attrmeta.__hash__': ('00_util/attr.html#attrmeta.__hash__', 'typs/util/attr.py'),
                                'typs.util.attr.attrmeta.__init__': ('00_util/attr.html#attrmeta.__init__', 'typs/util/attr.py'),
                                'typs.util.attr.attrmeta.__init_subclass__': ( '00_util/attr.html#attrmeta.__init_subclass__',
                                                                               'typs/util/attr.py'),
                                'typs.util.attr.attrmeta.__instancecheck__': ( '00_util/attr.html#attrmeta.__instancecheck__',
                                                                               'typs/util/attr.py'),
                                'typs.util.attr.attrmeta.__make_astr__': ('00_util/attr.html#attrmeta.__make_astr__', 'typs/util/attr.py'),
                                'typs.util.attr.attrmeta.__make_astrs__': ( '00_util/attr.html#attrmeta.__make_astrs__',
                                                                            'typs/util/attr.py'),
                                'typs.util.attr.attrmeta.__make_or_call__': ( '00_util/attr.html#attrmeta.__make_or_call__',
                                                                              'typs/util/attr.py'),
                                'typs.util.attr.attrmeta.__new__': ('00_util/attr.html#attrmeta.__new__', 'typs/util/attr.py'),
                                'typs.util.attr.attrmeta.__repr__': ('00_util/attr.html#attrmeta.__repr__', 'typs/util/attr.py'),
                                'typs.util.attr.attrmeta.__str__': ('00_util/attr.html#attrmeta.__str__', 'typs/util/attr.py'),
                                'typs.util.attr.attrmeta.chain': ('00_util/attr.html#attrmeta.chain', 'typs/util/attr.py'),
                                'typs.util.attr.attrmeta.dot': ('00_util/attr.html#attrmeta.dot', 'typs/util/attr.py'),
                                'typs.util.attr.attrmeta.get': ('00_util/attr.html#attrmeta.get', 'typs/util/attr.py'),
                                'typs.util.attr.attrmeta.getvars': ('00_util/attr.html#attrmeta.getvars', 'typs/util/attr.py'),
                                'typs.util.attr.attrmeta.has': ('00_util/attr.html#attrmeta.has', 'typs/util/attr.py'),
                                'typs.util.attr.attrmeta.set': ('00_util/attr.html#attrmeta.set', 'typs/util/attr.py'),
                                'typs.util.attr.attrmeta.setvars': ('00_util/attr.html#attrmeta.setvars', 'typs/util/attr.py'),
                                'typs.util.attr.attrstr': ('00_util/attr.html#attrstr', 'typs/util/attr.py'),
                                'typs.util.attr.insattr': ('00_util/attr.html#insattr', 'typs/util/attr.py')},
            'typs.util.cons': {},
            'typs.util.enum': { 'typs.util.enum.LoaderState': ('00_util/enum.html#loaderstate', 'typs/util/enum.py'),
                                'typs.util.enum.LoaderState._missing_': ('00_util/enum.html#loaderstate._missing_', 'typs/util/enum.py'),
                                'typs.util.enum.LoaderState.exec': ('00_util/enum.html#loaderstate.exec', 'typs/util/enum.py'),
                                'typs.util.enum.LoaderState.get': ('00_util/enum.html#loaderstate.get', 'typs/util/enum.py'),
                                'typs.util.enum.LoaderState.set': ('00_util/enum.html#loaderstate.set', 'typs/util/enum.py'),
                                'typs.util.enum.LoaderState.spec': ('00_util/enum.html#loaderstate.spec', 'typs/util/enum.py'),
                                'typs.util.enum.ProtocolMethod': ('00_util/enum.html#protocolmethod', 'typs/util/enum.py'),
                                'typs.util.enum.ProtocolMethod._missing_': ( '00_util/enum.html#protocolmethod._missing_',
                                                                             'typs/util/enum.py'),
                                'typs.util.enum.ProtocolMethod.casefold': ( '00_util/enum.html#protocolmethod.casefold',
                                                                            'typs/util/enum.py'),
                                'typs.util.enum.ProtocolMethod.gidt': ('00_util/enum.html#protocolmethod.gidt', 'typs/util/enum.py'),
                                'typs.util.enum.ProtocolMethod.idgt': ('00_util/enum.html#protocolmethod.idgt', 'typs/util/enum.py'),
                                'typs.util.enum.ProtocolMethod.ieq': ('00_util/enum.html#protocolmethod.ieq', 'typs/util/enum.py'),
                                'typs.util.enum.ProtocolMethod.startswith': ( '00_util/enum.html#protocolmethod.startswith',
                                                                              'typs/util/enum.py'),
                                'typs.util.enum.ProtocolMethodOrder': ('00_util/enum.html#protocolmethodorder', 'typs/util/enum.py'),
                                'typs.util.enum.Species': ('00_util/enum.html#species', 'typs/util/enum.py'),
                                'typs.util.enum.Species.contains': ('00_util/enum.html#species.contains', 'typs/util/enum.py')},
            'typs.util.errs': { 'typs.util.errs.DuckAttributeError': ('00_util/errs.html#duckattributeerror', 'typs/util/errs.py'),
                                'typs.util.errs.DuckException': ('00_util/errs.html#duckexception', 'typs/util/errs.py'),
                                'typs.util.errs.DuckImportError': ('00_util/errs.html#duckimporterror', 'typs/util/errs.py'),
                                'typs.util.errs.DuckModuleNotFoundError': ( '00_util/errs.html#duckmodulenotfounderror',
                                                                            'typs/util/errs.py'),
                                'typs.util.errs.DuckNameError': ('00_util/errs.html#ducknameerror', 'typs/util/errs.py')},
            'typs.util.grds': { 'typs.util.grds.allnotspecial': ('00_util/grds.html#allnotspecial', 'typs/util/grds.py'),
                                'typs.util.grds.allstrs': ('00_util/grds.html#allstrs', 'typs/util/grds.py'),
                                'typs.util.grds.getnotspecials': ('00_util/grds.html#getnotspecials', 'typs/util/grds.py'),
                                'typs.util.grds.hasduck': ('00_util/grds.html#hasduck', 'typs/util/grds.py'),
                                'typs.util.grds.hashash': ('00_util/grds.html#hashash', 'typs/util/grds.py'),
                                'typs.util.grds.hasload': ('00_util/grds.html#hasload', 'typs/util/grds.py'),
                                'typs.util.grds.hasorigin': ('00_util/grds.html#hasorigin', 'typs/util/grds.py'),
                                'typs.util.grds.isalias': ('00_util/grds.html#isalias', 'typs/util/grds.py'),
                                'typs.util.grds.isallsame': ('00_util/grds.html#isallsame', 'typs/util/grds.py'),
                                'typs.util.grds.isargs': ('00_util/grds.html#isargs', 'typs/util/grds.py'),
                                'typs.util.grds.isbool': ('00_util/grds.html#isbool', 'typs/util/grds.py'),
                                'typs.util.grds.iscall': ('00_util/grds.html#iscall', 'typs/util/grds.py'),
                                'typs.util.grds.iscls': ('00_util/grds.html#iscls', 'typs/util/grds.py'),
                                'typs.util.grds.isclstype': ('00_util/grds.html#isclstype', 'typs/util/grds.py'),
                                'typs.util.grds.isdict': ('00_util/grds.html#isdict', 'typs/util/grds.py'),
                                'typs.util.grds.isduckmodule': ('00_util/grds.html#isduckmodule', 'typs/util/grds.py'),
                                'typs.util.grds.isduckspec': ('00_util/grds.html#isduckspec', 'typs/util/grds.py'),
                                'typs.util.grds.isdunder': ('00_util/grds.html#isdunder', 'typs/util/grds.py'),
                                'typs.util.grds.ishashable': ('00_util/grds.html#ishashable', 'typs/util/grds.py'),
                                'typs.util.grds.isiter': ('00_util/grds.html#isiter', 'typs/util/grds.py'),
                                'typs.util.grds.isnan': ('00_util/grds.html#isnan', 'typs/util/grds.py'),
                                'typs.util.grds.isnone': ('00_util/grds.html#isnone', 'typs/util/grds.py'),
                                'typs.util.grds.isnotiterstr': ('00_util/grds.html#isnotiterstr', 'typs/util/grds.py'),
                                'typs.util.grds.isnotspecial': ('00_util/grds.html#isnotspecial', 'typs/util/grds.py'),
                                'typs.util.grds.isorigin': ('00_util/grds.html#isorigin', 'typs/util/grds.py'),
                                'typs.util.grds.isprivate': ('00_util/grds.html#isprivate', 'typs/util/grds.py'),
                                'typs.util.grds.isspecial': ('00_util/grds.html#isspecial', 'typs/util/grds.py'),
                                'typs.util.grds.isstr': ('00_util/grds.html#isstr', 'typs/util/grds.py'),
                                'typs.util.grds.istuple': ('00_util/grds.html#istuple', 'typs/util/grds.py'),
                                'typs.util.grds.istype': ('00_util/grds.html#istype', 'typs/util/grds.py'),
                                'typs.util.grds.istyping': ('00_util/grds.html#istyping', 'typs/util/grds.py'),
                                'typs.util.grds.notcls': ('00_util/grds.html#notcls', 'typs/util/grds.py'),
                                'typs.util.grds.notnone': ('00_util/grds.html#notnone', 'typs/util/grds.py'),
                                'typs.util.grds.notspecialsorigins': ('00_util/grds.html#notspecialsorigins', 'typs/util/grds.py')},
            'typs.util.imps': { 'typs.util.imps.ImportedAttribute': ('00_util/imps.html#importedattribute', 'typs/util/imps.py'),
                                'typs.util.imps.ModuleAssetSpec': ('00_util/imps.html#moduleassetspec', 'typs/util/imps.py'),
                                'typs.util.imps.ModuleAssetSpec.asdict': ('00_util/imps.html#moduleassetspec.asdict', 'typs/util/imps.py'),
                                'typs.util.imps.ModuleAssetSpec.getvals': ( '00_util/imps.html#moduleassetspec.getvals',
                                                                            'typs/util/imps.py'),
                                'typs.util.imps.ModuleAssetSpec.setvals': ( '00_util/imps.html#moduleassetspec.setvals',
                                                                            'typs/util/imps.py'),
                                'typs.util.imps.ModuleAttribute': ('00_util/imps.html#moduleattribute', 'typs/util/imps.py'),
                                'typs.util.imps.ProxyModule': ('00_util/imps.html#proxymodule', 'typs/util/imps.py'),
                                'typs.util.imps.ProxyModule.__dir__': ('00_util/imps.html#proxymodule.__dir__', 'typs/util/imps.py'),
                                'typs.util.imps.ProxyModule.__getattr__': ( '00_util/imps.html#proxymodule.__getattr__',
                                                                            'typs/util/imps.py'),
                                'typs.util.imps.ProxyModule.__init__': ('00_util/imps.html#proxymodule.__init__', 'typs/util/imps.py'),
                                'typs.util.imps.ProxyModule.__setattr__': ( '00_util/imps.html#proxymodule.__setattr__',
                                                                            'typs/util/imps.py'),
                                'typs.util.imps.ProxyModule.attrs': ('00_util/imps.html#proxymodule.attrs', 'typs/util/imps.py'),
                                'typs.util.imps.ProxyModule.names': ('00_util/imps.html#proxymodule.names', 'typs/util/imps.py'),
                                'typs.util.imps.ProxyModule.populate': ('00_util/imps.html#proxymodule.populate', 'typs/util/imps.py'),
                                'typs.util.imps.iattr': ('00_util/imps.html#iattr', 'typs/util/imps.py'),
                                'typs.util.imps.iattrs': ('00_util/imps.html#iattrs', 'typs/util/imps.py'),
                                'typs.util.imps.imod': ('00_util/imps.html#imod', 'typs/util/imps.py'),
                                'typs.util.imps.itry': ('00_util/imps.html#itry', 'typs/util/imps.py'),
                                'typs.util.imps.matr': ('00_util/imps.html#matr', 'typs/util/imps.py'),
                                'typs.util.imps.modattr': ('00_util/imps.html#modattr', 'typs/util/imps.py'),
                                'typs.util.imps.modattr.__asset_repr__': ('00_util/imps.html#modattr.__asset_repr__', 'typs/util/imps.py'),
                                'typs.util.imps.modattr.__call__': ('00_util/imps.html#modattr.__call__', 'typs/util/imps.py'),
                                'typs.util.imps.modattr.__getattribute__': ( '00_util/imps.html#modattr.__getattribute__',
                                                                             'typs/util/imps.py'),
                                'typs.util.imps.modattr.__getitem__': ('00_util/imps.html#modattr.__getitem__', 'typs/util/imps.py'),
                                'typs.util.imps.modattr.__import__': ('00_util/imps.html#modattr.__import__', 'typs/util/imps.py'),
                                'typs.util.imps.modattr.__init__': ('00_util/imps.html#modattr.__init__', 'typs/util/imps.py'),
                                'typs.util.imps.modattr.__repr__': ('00_util/imps.html#modattr.__repr__', 'typs/util/imps.py'),
                                'typs.util.imps.modattr.ib': ('00_util/imps.html#modattr.ib', 'typs/util/imps.py'),
                                'typs.util.imps.modattr.io': ('00_util/imps.html#modattr.io', 'typs/util/imps.py'),
                                'typs.util.imps.modattrs': ('00_util/imps.html#modattrs', 'typs/util/imps.py')},
            'typs.util.misc': { 'typs.util.misc._fromcall': ('00_util/misc.html#_fromcall', 'typs/util/misc.py'),
                                'typs.util.misc._fromducks': ('00_util/misc.html#_fromducks', 'typs/util/misc.py'),
                                'typs.util.misc.argname': ('00_util/misc.html#argname', 'typs/util/misc.py'),
                                'typs.util.misc.argsname': ('00_util/misc.html#argsname', 'typs/util/misc.py'),
                                'typs.util.misc.asset_attrs': ('00_util/misc.html#asset_attrs', 'typs/util/misc.py'),
                                'typs.util.misc.asset_last': ('00_util/misc.html#asset_last', 'typs/util/misc.py'),
                                'typs.util.misc.asset_name': ('00_util/misc.html#asset_name', 'typs/util/misc.py'),
                                'typs.util.misc.asset_sub_pkg': ('00_util/misc.html#asset_sub_pkg', 'typs/util/misc.py'),
                                'typs.util.misc.classname': ('00_util/misc.html#classname', 'typs/util/misc.py'),
                                'typs.util.misc.filtkwds': ('00_util/misc.html#filtkwds', 'typs/util/misc.py'),
                                'typs.util.misc.find_asset_module': ('00_util/misc.html#find_asset_module', 'typs/util/misc.py'),
                                'typs.util.misc.find_last_spec': ('00_util/misc.html#find_last_spec', 'typs/util/misc.py'),
                                'typs.util.misc.find_spec_or_none': ('00_util/misc.html#find_spec_or_none', 'typs/util/misc.py'),
                                'typs.util.misc.getname': ('00_util/misc.html#getname', 'typs/util/misc.py'),
                                'typs.util.misc.getorigintypes': ('00_util/misc.html#getorigintypes', 'typs/util/misc.py'),
                                'typs.util.misc.getsig': ('00_util/misc.html#getsig', 'typs/util/misc.py'),
                                'typs.util.misc.guardtype': ('00_util/misc.html#guardtype', 'typs/util/misc.py'),
                                'typs.util.misc.insys': ('00_util/misc.html#insys', 'typs/util/misc.py'),
                                'typs.util.misc.load_asset': ('00_util/misc.html#load_asset', 'typs/util/misc.py'),
                                'typs.util.misc.makegetter': ('00_util/misc.html#makegetter', 'typs/util/misc.py'),
                                'typs.util.misc.newtype': ('00_util/misc.html#newtype', 'typs/util/misc.py'),
                                'typs.util.misc.opttypes': ('00_util/misc.html#opttypes', 'typs/util/misc.py'),
                                'typs.util.misc.parse_asset': ('00_util/misc.html#parse_asset', 'typs/util/misc.py'),
                                'typs.util.misc.prep_kwargs': ('00_util/misc.html#prep_kwargs', 'typs/util/misc.py'),
                                'typs.util.misc.prepare_types_for_instancecheck': ( '00_util/misc.html#prepare_types_for_instancecheck',
                                                                                    'typs/util/misc.py'),
                                'typs.util.misc.qualname': ('00_util/misc.html#qualname', 'typs/util/misc.py'),
                                'typs.util.misc.setsig': ('00_util/misc.html#setsig', 'typs/util/misc.py'),
                                'typs.util.misc.try_ducked_attr': ('00_util/misc.html#try_ducked_attr', 'typs/util/misc.py'),
                                'typs.util.misc.try_loaded_attr': ('00_util/misc.html#try_loaded_attr', 'typs/util/misc.py'),
                                'typs.util.misc.tryattr': ('00_util/misc.html#tryattr', 'typs/util/misc.py'),
                                'typs.util.misc.trysig': ('00_util/misc.html#trysig', 'typs/util/misc.py'),
                                'typs.util.misc.unduck': ('00_util/misc.html#unduck', 'typs/util/misc.py'),
                                'typs.util.misc.unionify': ('00_util/misc.html#unionify', 'typs/util/misc.py')},
            'typs.util.prop': { 'typs.util.prop.Property': ('00_util/prop.html#property', 'typs/util/prop.py'),
                                'typs.util.prop.Property.__repr__': ('00_util/prop.html#property.__repr__', 'typs/util/prop.py'),
                                'typs.util.prop.Property.__str__': ('00_util/prop.html#property.__str__', 'typs/util/prop.py'),
                                'typs.util.prop.Property.getdef': ('00_util/prop.html#property.getdef', 'typs/util/prop.py'),
                                'typs.util.prop.Property.getkws': ('00_util/prop.html#property.getkws', 'typs/util/prop.py'),
                                'typs.util.prop.Property.make': ('00_util/prop.html#property.make', 'typs/util/prop.py'),
                                'typs.util.prop.Property.prv': ('00_util/prop.html#property.prv', 'typs/util/prop.py'),
                                'typs.util.prop.props': ('00_util/prop.html#props', 'typs/util/prop.py'),
                                'typs.util.prop.slotprops': ('00_util/prop.html#slotprops', 'typs/util/prop.py')},
            'typs.util.prot': { 'typs.util.prot.DuckModuleProtocol': ('00_util/prot.html#duckmoduleprotocol', 'typs/util/prot.py'),
                                'typs.util.prot.DuckSpecProtocol': ('00_util/prot.html#duckspecprotocol', 'typs/util/prot.py'),
                                'typs.util.prot.DuckedProtocol': ('00_util/prot.html#duckedprotocol', 'typs/util/prot.py'),
                                'typs.util.prot.DunderString': ('00_util/prot.html#dunderstring', 'typs/util/prot.py'),
                                'typs.util.prot.DunderString.__guard__': ('00_util/prot.html#dunderstring.__guard__', 'typs/util/prot.py'),
                                'typs.util.prot.GuardProtocol': ('00_util/prot.html#guardprotocol', 'typs/util/prot.py'),
                                'typs.util.prot.HasAllAttributeProtocol': ( '00_util/prot.html#hasallattributeprotocol',
                                                                            'typs/util/prot.py'),
                                'typs.util.prot.HasAllAttributeProtocol.__guard__': ( '00_util/prot.html#hasallattributeprotocol.__guard__',
                                                                                      'typs/util/prot.py'),
                                'typs.util.prot.HasAnyAttributeProtocol': ( '00_util/prot.html#hasanyattributeprotocol',
                                                                            'typs/util/prot.py'),
                                'typs.util.prot.HasAnyAttributeProtocol.__guard__': ( '00_util/prot.html#hasanyattributeprotocol.__guard__',
                                                                                      'typs/util/prot.py'),
                                'typs.util.prot.Hashable': ('00_util/prot.html#hashable', 'typs/util/prot.py'),
                                'typs.util.prot.Hashable.__hash__': ('00_util/prot.html#hashable.__hash__', 'typs/util/prot.py'),
                                'typs.util.prot.Hashable.__instancecheck__': ( '00_util/prot.html#hashable.__instancecheck__',
                                                                               'typs/util/prot.py'),
                                'typs.util.prot.NonStrBytesIterable': ('00_util/prot.html#nonstrbytesiterable', 'typs/util/prot.py'),
                                'typs.util.prot.NonStrBytesIterable.__instancecheck__': ( '00_util/prot.html#nonstrbytesiterable.__instancecheck__',
                                                                                          'typs/util/prot.py'),
                                'typs.util.prot.NonStrBytesIterable.__iter__': ( '00_util/prot.html#nonstrbytesiterable.__iter__',
                                                                                 'typs/util/prot.py'),
                                'typs.util.prot.NotProtocol': ('00_util/prot.html#notprotocol', 'typs/util/prot.py'),
                                'typs.util.prot.NotProtocol.__instancecheck__': ( '00_util/prot.html#notprotocol.__instancecheck__',
                                                                                  'typs/util/prot.py'),
                                'typs.util.prot.NotSpecial': ('00_util/prot.html#notspecial', 'typs/util/prot.py'),
                                'typs.util.prot.NotSpecial.__hash__': ('00_util/prot.html#notspecial.__hash__', 'typs/util/prot.py'),
                                'typs.util.prot.NotSpecial.__instancecheck__': ( '00_util/prot.html#notspecial.__instancecheck__',
                                                                                 'typs/util/prot.py'),
                                'typs.util.prot.OptProtocol': ('00_util/prot.html#optprotocol', 'typs/util/prot.py'),
                                'typs.util.prot.OptProtocol.__instancecheck__': ( '00_util/prot.html#optprotocol.__instancecheck__',
                                                                                  'typs/util/prot.py'),
                                'typs.util.prot.Origin': ('00_util/prot.html#origin', 'typs/util/prot.py'),
                                'typs.util.prot.Origin.__hash__': ('00_util/prot.html#origin.__hash__', 'typs/util/prot.py'),
                                'typs.util.prot.Origin.__instancecheck__': ( '00_util/prot.html#origin.__instancecheck__',
                                                                             'typs/util/prot.py'),
                                'typs.util.prot.PrivateString': ('00_util/prot.html#privatestring', 'typs/util/prot.py'),
                                'typs.util.prot.PrivateString.__guard__': ( '00_util/prot.html#privatestring.__guard__',
                                                                            'typs/util/prot.py'),
                                'typs.util.prot.ProtocolMeta': ('00_util/prot.html#protocolmeta', 'typs/util/prot.py'),
                                'typs.util.prot.ProtocolMeta.__instancecheck__': ( '00_util/prot.html#protocolmeta.__instancecheck__',
                                                                                   'typs/util/prot.py'),
                                'typs.util.prot.Special': ('00_util/prot.html#special', 'typs/util/prot.py'),
                                'typs.util.prot.Special.__hash__': ('00_util/prot.html#special.__hash__', 'typs/util/prot.py'),
                                'typs.util.prot.Special.__instancecheck__': ( '00_util/prot.html#special.__instancecheck__',
                                                                              'typs/util/prot.py')},
            'typs.util.type': {},
            'typs.util.uscr': { 'typs.util.uscr.dunder': ('00_util/uscr.html#dunder', 'typs/util/uscr.py'),
                                'typs.util.uscr.dunder.__guard__': ('00_util/uscr.html#dunder.__guard__', 'typs/util/uscr.py'),
                                'typs.util.uscr.mangled': ('00_util/uscr.html#mangled', 'typs/util/uscr.py'),
                                'typs.util.uscr.mangled.__guard__': ('00_util/uscr.html#mangled.__guard__', 'typs/util/uscr.py'),
                                'typs.util.uscr.private': ('00_util/uscr.html#private', 'typs/util/uscr.py'),
                                'typs.util.uscr.private.__guard__': ('00_util/uscr.html#private.__guard__', 'typs/util/uscr.py'),
                                'typs.util.uscr.stringmeta': ('00_util/uscr.html#stringmeta', 'typs/util/uscr.py'),
                                'typs.util.uscr.stringmeta.__eq__': ('00_util/uscr.html#stringmeta.__eq__', 'typs/util/uscr.py'),
                                'typs.util.uscr.stringmeta.__guard__': ('00_util/uscr.html#stringmeta.__guard__', 'typs/util/uscr.py'),
                                'typs.util.uscr.stringmeta.__hash__': ('00_util/uscr.html#stringmeta.__hash__', 'typs/util/uscr.py'),
                                'typs.util.uscr.stringmeta.__instancecheck__': ( '00_util/uscr.html#stringmeta.__instancecheck__',
                                                                                 'typs/util/uscr.py'),
                                'typs.util.uscr.sunder': ('00_util/uscr.html#sunder', 'typs/util/uscr.py'),
                                'typs.util.uscr.sunder.__guard__': ('00_util/uscr.html#sunder.__guard__', 'typs/util/uscr.py'),
                                'typs.util.uscr.template': ('00_util/uscr.html#template', 'typs/util/uscr.py'),
                                'typs.util.uscr.template.__add__': ('00_util/uscr.html#template.__add__', 'typs/util/uscr.py'),
                                'typs.util.uscr.template.__call__': ('00_util/uscr.html#template.__call__', 'typs/util/uscr.py'),
                                'typs.util.uscr.template.__guard__': ('00_util/uscr.html#template.__guard__', 'typs/util/uscr.py'),
                                'typs.util.uscr.template.__new__': ('00_util/uscr.html#template.__new__', 'typs/util/uscr.py'),
                                'typs.util.uscr.template.__prepare__': ('00_util/uscr.html#template.__prepare__', 'typs/util/uscr.py'),
                                'typs.util.uscr.template.__radd__': ('00_util/uscr.html#template.__radd__', 'typs/util/uscr.py'),
                                'typs.util.uscr.template.__repr__': ('00_util/uscr.html#template.__repr__', 'typs/util/uscr.py'),
                                'typs.util.uscr.template.__str__': ('00_util/uscr.html#template.__str__', 'typs/util/uscr.py'),
                                'typs.util.uscr.template.__transform__': ('00_util/uscr.html#template.__transform__', 'typs/util/uscr.py'),
                                'typs.util.uscr.template.chain': ('00_util/uscr.html#template.chain', 'typs/util/uscr.py'),
                                'typs.util.uscr.template.get': ('00_util/uscr.html#template.get', 'typs/util/uscr.py'),
                                'typs.util.uscr.template.lchain': ('00_util/uscr.html#template.lchain', 'typs/util/uscr.py'),
                                'typs.util.uscr.template.ldrop': ('00_util/uscr.html#template.ldrop', 'typs/util/uscr.py'),
                                'typs.util.uscr.template.pre': ('00_util/uscr.html#template.pre', 'typs/util/uscr.py'),
                                'typs.util.uscr.template.raw': ('00_util/uscr.html#template.raw', 'typs/util/uscr.py'),
                                'typs.util.uscr.template.rchain': ('00_util/uscr.html#template.rchain', 'typs/util/uscr.py'),
                                'typs.util.uscr.template.rdrop': ('00_util/uscr.html#template.rdrop', 'typs/util/uscr.py'),
                                'typs.util.uscr.template.suf': ('00_util/uscr.html#template.suf', 'typs/util/uscr.py'),
                                'typs.util.uscr.underscoreless': ('00_util/uscr.html#underscoreless', 'typs/util/uscr.py')}}}
