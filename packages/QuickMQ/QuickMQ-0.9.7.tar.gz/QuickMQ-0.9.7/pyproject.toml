[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "QuickMQ"
authors = [
    {name = "Max Drexler", email = "mndrexler@wisc.edu"},
]
description = "An easy-to-use RabbitMQ client."
readme = "README.md"
license = {file = "LICENSE"}
keywords = ["rabbitmq"]
requires-python = ">=3.6.8"
dependencies = [
    "pika>=1.3.0",
    "typing-extensions>=4.1.1,<5",
    "dataclasses; python_version < '3.7'",
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: POSIX :: Linux",
    "Typing :: Typed",
]
dynamic = ["version"]

[project.urls]
Repository = "https://gitlab.ssec.wisc.edu/mdrexler/easymq"
Issues = "https://gitlab.ssec.wisc.edu/mdrexler/easymq/-/issues"

[project.scripts]
quickmq = "quickmq.__main__:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.dynamic]
version = {attr = "quickmq.__init__.__version__"}

[tool.mypy]
packages = "quickmq"
check_untyped_defs = true
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_unreachable = true
warn_unused_configs = true
no_implicit_reexport = true
ignore_missing_imports = true

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = ["E", "F", "UP", "B", "SIM", "I"]

[tool.pytest.ini_options]
addopts = "--cov=quickmq --cov-report term --cov-report xml --import-mode importlib"
testpaths = [
    "test/",
]
markers = [
    "unit: unit test. Note, automatically generated.",
    "integration: integration test. Note, automatically generated.",
    "slow: marks tests as slow (deselect with '-m \"not slow\"').",
    "tf_num_threads: specify number of threads to use in thread_factory.",
    "tf_autostart: mark tests that use thread_factory to start automatically.",
    "con_cfg: specify configuration for a fixture that creates a connection.",
]

[tool.tox]
legacy_tox_ini = """
    [tox]
    env_list = 
        python{3.6, 3.7, 3.8, 3.9, 3.10, 3.11, 3.12}
        ruff
        mypy

    [testenv]
    deps =
        pytest
        pytest-cov
    commands = pytest --basetemp={envtmpdir}

    [testenv:ruff]
    deps = ruff
    commands = ruff check src

    [testenv:mypy]
    deps = 
        mypy
        pika-stubs
    commands = mypy src
"""
