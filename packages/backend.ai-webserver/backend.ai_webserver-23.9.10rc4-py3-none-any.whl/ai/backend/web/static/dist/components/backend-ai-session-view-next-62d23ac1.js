import{_ as i,e as s,B as t,c as a,I as e,a as r,i as o,x as n,j as m,k as c}from"./backend-ai-webui-2e94680f.js";import"./backend-ai-session-launcher-4e7b8a26.js";import"./backend-ai-session-view-8439851e.js";import"./lablup-codemirror-37a091dc.js";import"./lablup-progress-bar-99287387.js";import"./vaadin-grid-selection-column-606c4d9c.js";import"./vaadin-grid-8b7e9eef.js";import"./dir-utils-6bfe4cc0.js";import"./mwc-check-list-item-a63802f4.js";import"./vaadin-grid-filter-column-b7417720.js";import"./vaadin-iconset-2f31ab0f.js";import"./backend-ai-resource-monitor-0c1823a6.js";import"./mwc-switch-89de5e16.js";import"./backend-ai-list-status-84ee85b9.js";import"./lablup-grid-sort-filter-column-14246e0c.js";import"./vaadin-grid-sort-column-6cb5d412.js";import"./lablup-activity-panel-da7c7aa2.js";import"./mwc-formfield-33a8f868.js";import"./mwc-tab-bar-e11f869d.js";let p=class extends t{static get styles(){return[a,e,r,o``]}async _viewStateChanged(i){await this.updateComplete}render(){return n`
      <backend-ai-react-session-list
        @moveTo="${i=>{const s=i.detail.path;globalThis.history.pushState({},"",s),m.dispatch(c(decodeURIComponent(s),{}))}}"
      ></backend-ai-react-session-list>
    `}};p=i([s("backend-ai-session-view-next")],p);
