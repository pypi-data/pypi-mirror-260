{"version":3,"file":"static/js/556.8af7b985.chunk.js","mappings":"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","sources":["helper/graphql-transformer.ts","RelayEnvironment.ts","components/DefaultProviders.tsx","components/UserInfoModal.tsx","components/__generated__/UserInfoModalQuery.graphql.ts","hooks/useLocalStorageGlobalState.tsx","hooks/useThemeMode.tsx"],"sourcesContent":["import { parse, print, visit } from 'graphql';\n\n// Delete nodes in enter\n// Remove unnecessary arguments or directives in leave\nexport function manipulateGraphQLQueryWithClientDirectives(\n  query: string,\n  variables: any = {},\n  isCompatibleWith: (version: string) => boolean,\n) {\n  const ast = parse(query);\n  let newAst = visit(ast, {\n    Field: {\n      enter(node) {\n        if (\n          node?.directives?.find((directive) => {\n            const directiveName = directive.name.value;\n            const firstArgName = directive.arguments?.[0].name.value;\n            // @ts-ignore\n            const firstArgValue = directive.arguments?.[0].value?.value;\n            const arg = directive.arguments?.[0];\n\n            if (directiveName === 'since' && firstArgName === 'version') {\n              if (isCompatibleWith(firstArgValue)) {\n                return true;\n              }\n            } else if (\n              directiveName === 'deprecatedSince' &&\n              firstArgName === 'version'\n            ) {\n              const version =\n                arg?.value.kind === 'StringValue'\n                  ? arg?.value.value\n                  : // @ts-ignore\n                    variables[arg?.value.name.value];\n\n              if (!isCompatibleWith(version)) {\n                return true;\n              }\n            } else if (\n              directiveName === 'skipOnClient' &&\n              firstArgName === 'if'\n            ) {\n              if (arg?.value.kind === 'BooleanValue' && arg.value.value) {\n                return true;\n              }\n\n              if (\n                arg?.value.kind === 'Variable' &&\n                variables[arg.value.name.value]\n              ) {\n                return true;\n              }\n            }\n            return false;\n          })\n        ) {\n          return null;\n        }\n      },\n      leave(node) {\n        // when field has a empty selectionSet, delete it\n        if (\n          node.selectionSet &&\n          node.selectionSet.kind === 'SelectionSet' &&\n          node.selectionSet.selections?.length === 0\n        ) {\n          return null;\n        }\n      },\n    },\n    Directive: {\n      // delete all onClient directives\n      leave(directive) {\n        const directiveName = directive.name.value;\n        if (\n          ['since', 'deprecatedSince', 'skipOnClient'].includes(directiveName)\n        ) {\n          return null;\n        }\n      },\n    },\n  });\n\n  // count used variables\n  const usedVariables: {\n    [key: string]: number;\n  } = {};\n  visit(newAst, {\n    Variable(node) {\n      usedVariables[node.name.value] =\n        (usedVariables[node.name.value] || 0) + 1;\n    },\n  });\n\n  // delete unused variables\n  newAst = visit(newAst, {\n    VariableDefinition: {\n      enter(variableDefinition) {\n        if (usedVariables[variableDefinition.variable.name.value] <= 1) {\n          return null;\n        }\n      },\n    },\n  });\n\n  return print(newAst);\n}\n","// import { createClient } from \"graphql-ws\";\nimport { manipulateGraphQLQueryWithClientDirectives } from './helper/graphql-transformer';\nimport {\n  Environment,\n  Network,\n  RecordSource,\n  Store,\n  FetchFunction,\n  SubscribeFunction,\n  RelayFeatureFlags,\n} from 'relay-runtime';\n\nRelayFeatureFlags.ENABLE_RELAY_RESOLVERS = true;\n\nconst fetchFn: FetchFunction = async (\n  request,\n  variables,\n  // cacheConfig,\n  // uploadables\n) => {\n  //@ts-ignore\n  if (globalThis.backendaiclient === undefined) {\n    // If globalThis.backendaiclient is not defined, wait for the backend-ai-connected event.\n    await new Promise((resolve) => {\n      const onBackendAIConnected = () => {\n        // When the backend-ai-connected event occurs, remove the event listener and execute the function.\n        document.removeEventListener(\n          'backend-ai-connected',\n          onBackendAIConnected,\n        );\n        resolve(undefined);\n      };\n      document.addEventListener('backend-ai-connected', onBackendAIConnected);\n    });\n  }\n\n  const transformedQuery = manipulateGraphQLQueryWithClientDirectives(\n    request.text || '',\n    variables,\n    (version) => {\n      // @ts-ignore\n      return !globalThis.backendaiclient?.isManagerVersionCompatibleWith(\n        version,\n      );\n    },\n  );\n\n  const reqBody = {\n    query: transformedQuery,\n    variables: variables,\n  };\n\n  //@ts-ignore\n  const reqInfo = globalThis.backendaiclient?.newSignedRequest(\n    'POST',\n    '/admin/gql',\n    reqBody,\n  );\n\n  const result =\n    //@ts-ignore\n    (await globalThis.backendaiclient\n      ?._wrapWithPromise(reqInfo, false, null, 10000, 0)\n      .catch((err: any) => {\n        // console.log(err);\n      })) || {};\n\n  return result;\n};\n\nlet subscribeFn: SubscribeFunction;\n\n// if (typeof window !== \"undefined\") {\n//   // We only want to setup subscriptions if we are on the client.\n//   const subscriptionsClient = createClient({\n//     url: WEBSOCKET_ENDPOINT,\n//   });\n\n//   subscribeFn = (request, variables) => {\n//     // To understand why we return Observable.create<any>,\n//     // please see: https://github.com/enisdenjo/graphql-ws/issues/316#issuecomment-1047605774\n//     return Observable.create<any>((sink) => {\n//       if (!request.text) {\n//         return sink.error(new Error(\"Operation text cannot be empty\"));\n//       }\n\n//       return subscriptionsClient.subscribe(\n//         {\n//           operationName: request.name,\n//           query: request.text,\n//           variables,\n//         },\n//         sink\n//       );\n//     });\n//   };\n// }\n\nfunction createRelayEnvironment() {\n  return new Environment({\n    network: Network.create(fetchFn, subscribeFn),\n    store: new Store(new RecordSource()),\n  });\n}\n\nexport const RelayEnvironment = createRelayEnvironment();\n","import { RelayEnvironment } from '../RelayEnvironment';\n// @ts-ignore\nimport rawFixAntCss from '../fix_antd.css?raw';\nimport { useCustomThemeConfig } from '../helper/customThemeConfig';\nimport { ReactWebComponentProps } from '../helper/react-to-webcomponent';\nimport { useThemeMode } from '../hooks/useThemeMode';\nimport { StyleProvider, createCache } from '@ant-design/cssinjs';\nimport { App, ConfigProvider, theme } from 'antd';\nimport en_US from 'antd/locale/en_US';\nimport ko_KR from 'antd/locale/ko_KR';\nimport dayjs from 'dayjs';\nimport 'dayjs/locale/ko';\nimport localeData from 'dayjs/plugin/localeData';\nimport localizedFormat from 'dayjs/plugin/localizedFormat';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport timezone from 'dayjs/plugin/timezone';\nimport utc from 'dayjs/plugin/utc';\nimport weekday from 'dayjs/plugin/weekday';\nimport i18n from 'i18next';\nimport Backend from 'i18next-http-backend';\nimport React, {\n  Suspense,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { useTranslation, initReactI18next } from 'react-i18next';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { RelayEnvironmentProvider } from 'react-relay';\nimport { BrowserRouter, useNavigate } from 'react-router-dom';\nimport { QueryParamProvider } from 'use-query-params';\nimport { ReactRouter6Adapter } from 'use-query-params/adapters/react-router-6';\n\ndayjs.extend(weekday);\ndayjs.extend(localeData);\ndayjs.extend(localizedFormat);\ndayjs.extend(relativeTime);\ndayjs.extend(utc);\ndayjs.extend(timezone);\n\ninterface WebComponentContextType {\n  value?: ReactWebComponentProps['value'];\n  dispatchEvent: ReactWebComponentProps['dispatchEvent'];\n  moveTo: (\n    path: string,\n    params?: {\n      [key in string]?: boolean | string | number;\n    },\n  ) => void;\n}\n\nconst WebComponentContext = React.createContext<WebComponentContextType>(null!);\nconst ShadowRootContext = React.createContext<ShadowRoot>(null!);\nexport const useShadowRoot = () => React.useContext(ShadowRootContext);\nexport const useWebComponentInfo = () => React.useContext(WebComponentContext);\n\n// Create a client\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      suspense: true,\n      refetchOnWindowFocus: false,\n      retry: false,\n    },\n  },\n});\n\nexport interface DefaultProvidersProps extends ReactWebComponentProps {\n  children?: React.ReactNode;\n}\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .use(Backend)\n  .init({\n    backend: {\n      loadPath: '/resources/i18n/{{lng}}.json',\n    },\n    //@ts-ignore\n    lng: globalThis?.backendaioptions?.get('current_language') || 'en',\n    fallbackLng: 'en',\n    interpolation: {\n      escapeValue: false, // react already safes from xss => https://www.i18next.com/translation-function/interpolation#unescape\n    },\n    react: {\n      transSupportBasicHtmlNodes: true,\n      transKeepBasicHtmlNodesFor: ['br', 'strong', 'span', 'code', 'p'],\n    },\n  });\n\nconst useCurrentLanguage = () => {\n  const [lang, _setLang] = useState(\n    //@ts-ignore\n    globalThis?.backendaioptions?.get('current_language'),\n  );\n  const { i18n } = useTranslation();\n\n  useEffect(() => {\n    // TODO: remove this hack to initialize i18next\n    setTimeout(() => i18n?.changeLanguage(lang), 0);\n    // For changing locale globally, use dayjs.locale instead of dayjs().locale\n    dayjs.locale(lang);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const handler = (e: Event) => {\n      //@ts-ignore\n      _setLang(e?.detail?.lang);\n      //@ts-ignore\n      const lang: string = e?.detail?.lang || 'en';\n      i18n?.changeLanguage(lang);\n      // For changing locale globally, use dayjs.locale instead of dayjs().locale\n      dayjs.locale(lang);\n    };\n    window.addEventListener('langChanged', handler);\n    return () => window.removeEventListener('langChanged', handler);\n  }, [i18n]);\n\n  return [lang] as const;\n};\n\nconst DefaultProviders: React.FC<DefaultProvidersProps> = ({\n  children,\n  value,\n  styles,\n  shadowRoot,\n  dispatchEvent,\n}) => {\n  const cache = useMemo(() => createCache(), []);\n  const [lang] = useCurrentLanguage();\n  const themeConfig = useCustomThemeConfig();\n  const { isDarkMode } = useThemeMode();\n\n  const componentValues = useMemo(() => {\n    return {\n      value,\n      dispatchEvent,\n      moveTo: (path, params) => {\n        dispatchEvent('moveTo', { path, params: params });\n      },\n    } as WebComponentContextType;\n  }, [value, dispatchEvent]);\n  return (\n    <>\n      {RelayEnvironment && (\n        <RelayEnvironmentProvider environment={RelayEnvironment}>\n          <React.StrictMode>\n            <style>\n              {styles}\n              {rawFixAntCss}\n            </style>\n            <QueryClientProvider client={queryClient}>\n              <ShadowRootContext.Provider value={shadowRoot}>\n                <WebComponentContext.Provider value={componentValues}>\n                  <ConfigProvider\n                    // @ts-ignore\n                    getPopupContainer={(triggerNode) => {\n                      return triggerNode?.parentNode || shadowRoot;\n                    }}\n                    //TODO: apply other supported locales\n                    locale={'ko' === lang ? ko_KR : en_US}\n                    theme={{\n                      ...(isDarkMode\n                        ? { ...themeConfig.dark }\n                        : { ...themeConfig.light }),\n                      algorithm: isDarkMode\n                        ? theme.darkAlgorithm\n                        : theme.defaultAlgorithm,\n                    }}\n                  >\n                    <App>\n                      <StyleProvider container={shadowRoot} cache={cache}>\n                        <Suspense fallback=\"\">\n                          <BrowserRouter>\n                            <QueryParamProvider\n                              adapter={ReactRouter6Adapter}\n                              options={\n                                {\n                                  // searchStringToObject: queryString.parse,\n                                  // objectToSearchString: queryString.stringify,\n                                }\n                              }\n                            >\n                              <RoutingEventHandler />\n                              {children}\n                            </QueryParamProvider>\n                          </BrowserRouter>\n                        </Suspense>\n                      </StyleProvider>\n                    </App>\n                  </ConfigProvider>\n                </WebComponentContext.Provider>\n              </ShadowRootContext.Provider>\n            </QueryClientProvider>\n          </React.StrictMode>\n        </RelayEnvironmentProvider>\n      )}\n    </>\n  );\n};\n\nconst RoutingEventHandler = () => {\n  const navigate = useNavigate();\n  useLayoutEffect(() => {\n    const handleNavigate = (e: any) => {\n      const { detail } = e;\n      navigate(detail, {\n        // we don't want to add duplicated one to history.\n        // On lit component side, it adds to history already.\n        replace: true,\n      });\n    };\n    document.addEventListener('react-navigate', handleNavigate);\n\n    return () => {\n      document.removeEventListener('react-navigate', handleNavigate);\n    };\n  }, [navigate]);\n\n  return null;\n};\n\nexport default DefaultProviders;\n","import { useSuspendedBackendaiClient } from '../hooks';\nimport BAIModal, { BAIModalProps } from './BAIModal';\nimport { useWebComponentInfo } from './DefaultProviders';\nimport { UserInfoModalQuery } from './__generated__/UserInfoModalQuery.graphql';\nimport { Descriptions, DescriptionsProps, Button, Tag, Spin } from 'antd';\nimport graphql from 'babel-plugin-relay/macro';\nimport _ from 'lodash';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useQuery } from 'react-query';\nimport { useLazyLoadQuery } from 'react-relay';\n\ninterface Props extends BAIModalProps {}\n\nconst UserInfoModal: React.FC<Props> = ({ ...baiModalProps }) => {\n  const { t } = useTranslation();\n\n  const { value, dispatchEvent } = useWebComponentInfo();\n  let parsedValue: {\n    open: boolean;\n    userEmail: string;\n  };\n  try {\n    parsedValue = JSON.parse(value || '');\n  } catch (error) {\n    parsedValue = {\n      open: false,\n      userEmail: '',\n    };\n  }\n  const { open, userEmail } = parsedValue;\n\n  const baiClient = useSuspendedBackendaiClient();\n  const sudoSessionEnabledSupported = baiClient?.supports(\n    'sudo-session-enabled',\n  );\n  let totpSupported = false;\n  let {\n    data: isManagerSupportingTOTP,\n    isLoading: isLoadingManagerSupportingTOTP,\n  } = useQuery(\n    'isManagerSupportingTOTP',\n    () => {\n      return baiClient.isManagerSupportingTOTP();\n    },\n    {\n      // for to render even this fail query failed\n      suspense: false,\n    },\n  );\n  totpSupported = baiClient?.supports('2FA') && isManagerSupportingTOTP;\n\n  const { user } = useLazyLoadQuery<UserInfoModalQuery>(\n    graphql`\n      query UserInfoModalQuery(\n        $email: String\n        $isNotSupportSudoSessionEnabled: Boolean!\n        $isTOTPSupported: Boolean!\n      ) {\n        user(email: $email) {\n          email\n          username\n          need_password_change\n          full_name\n          description\n          status\n          domain_name\n          role\n          groups {\n            id\n            name\n          }\n          # TODO: reflect https://github.com/lablup/backend.ai-webui/pull/1999\n          # support from 23.09.0b1\n          # https://github.com/lablup/backend.ai/pull/1530\n          sudo_session_enabled\n            @skipOnClient(if: $isNotSupportSudoSessionEnabled)\n          totp_activated @include(if: $isTOTPSupported)\n          main_access_key @since(version: \"23.09.7\")\n        }\n      }\n    `,\n    {\n      email: userEmail,\n      isNotSupportSudoSessionEnabled: !sudoSessionEnabledSupported,\n      isTOTPSupported: totpSupported ?? false,\n    },\n  );\n\n  const columnSetting: DescriptionsProps['column'] = {\n    xxl: 1,\n    xl: 1,\n    lg: 1,\n    md: 1,\n    sm: 1,\n    xs: 1,\n  };\n\n  return (\n    <BAIModal\n      open={open}\n      onCancel={() => {\n        dispatchEvent('cancel', null);\n      }}\n      centered\n      title={t('credential.UserDetail')}\n      footer={[\n        <Button\n          key=\"ok\"\n          type=\"primary\"\n          onClick={() => {\n            dispatchEvent('cancel', null);\n          }}\n        >\n          {t('button.OK')}\n        </Button>,\n      ]}\n      {...baiModalProps}\n    >\n      <br />\n      <Descriptions\n        size=\"small\"\n        column={columnSetting}\n        title={t('credential.Information')}\n        labelStyle={{ width: '50%' }}\n      >\n        <Descriptions.Item label={t('credential.UserID')}>\n          {user?.email}\n        </Descriptions.Item>\n        <Descriptions.Item label={t('credential.UserName')}>\n          {user?.username}\n        </Descriptions.Item>\n        <Descriptions.Item label={t('credential.FullName')}>\n          {user?.full_name}\n        </Descriptions.Item>\n        <Descriptions.Item label={t('credential.MainAccessKey')}>\n          {user?.main_access_key}\n        </Descriptions.Item>\n        <Descriptions.Item label={t('credential.DescActiveUser')}>\n          {user?.status === 'active' ? t('button.Yes') : t('button.No')}\n        </Descriptions.Item>\n        <Descriptions.Item label={t('credential.DescRequirePasswordChange')}>\n          {user?.need_password_change ? t('button.Yes') : t('button.No')}\n        </Descriptions.Item>\n        {sudoSessionEnabledSupported && (\n          <Descriptions.Item label={t('credential.EnableSudoSession')}>\n            {user?.sudo_session_enabled ? t('button.Yes') : t('button.No')}\n          </Descriptions.Item>\n        )}\n        {totpSupported && (\n          <Descriptions.Item label={t('webui.menu.TotpActivated')}>\n            <Spin spinning={isLoadingManagerSupportingTOTP}>\n              {user?.totp_activated ? t('button.Yes') : t('button.No')}\n            </Spin>\n          </Descriptions.Item>\n        )}\n      </Descriptions>\n      <br />\n      <Descriptions\n        size=\"small\"\n        column={columnSetting}\n        title={t('credential.Association')}\n        labelStyle={{ width: '50%' }}\n      >\n        <Descriptions.Item label={t('credential.Domain')}>\n          {user?.domain_name}\n        </Descriptions.Item>\n        <Descriptions.Item label={t('credential.Role')}>\n          {user?.role}\n        </Descriptions.Item>\n      </Descriptions>\n      <br />\n      <Descriptions\n        title={t('credential.ProjectAndGroup')}\n        labelStyle={{ width: '50%' }}\n      >\n        <Descriptions.Item>\n          {_.map(user?.groups, (group) => {\n            return <Tag key={group?.id}>{group?.name}</Tag>;\n          })}\n        </Descriptions.Item>\n      </Descriptions>\n    </BAIModal>\n  );\n};\n\nexport default UserInfoModal;\n","/**\n * @generated SignedSource<<6124396b8d2d536524dfb7c2b2f65bae>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nexport type UserInfoModalQuery$variables = {\n  email?: string | null;\n  isNotSupportSudoSessionEnabled: boolean;\n  isTOTPSupported: boolean;\n};\nexport type UserInfoModalQuery$data = {\n  readonly user: {\n    readonly description: string | null;\n    readonly domain_name: string | null;\n    readonly email: string | null;\n    readonly full_name: string | null;\n    readonly groups: ReadonlyArray<{\n      readonly id: string | null;\n      readonly name: string | null;\n    } | null> | null;\n    readonly main_access_key: string | null;\n    readonly need_password_change: boolean | null;\n    readonly role: string | null;\n    readonly status: string | null;\n    readonly sudo_session_enabled: boolean | null;\n    readonly totp_activated?: boolean | null;\n    readonly username: string | null;\n  } | null;\n};\nexport type UserInfoModalQuery = {\n  response: UserInfoModalQuery$data;\n  variables: UserInfoModalQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"email\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"isNotSupportSudoSessionEnabled\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"isTOTPSupported\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"email\",\n    \"variableName\": \"email\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"email\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"username\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"need_password_change\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"full_name\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"description\",\n  \"storageKey\": null\n},\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"status\",\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"domain_name\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"role\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"UserGroup\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"groups\",\n  \"plural\": true,\n  \"selections\": [\n    (v10/*: any*/),\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    }\n  ],\n  \"storageKey\": null\n},\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"sudo_session_enabled\",\n  \"storageKey\": null\n},\nv13 = {\n  \"condition\": \"isTOTPSupported\",\n  \"kind\": \"Condition\",\n  \"passingValue\": true,\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"totp_activated\",\n      \"storageKey\": null\n    }\n  ]\n},\nv14 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"main_access_key\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UserInfoModalQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          (v7/*: any*/),\n          (v8/*: any*/),\n          (v9/*: any*/),\n          (v11/*: any*/),\n          (v12/*: any*/),\n          (v13/*: any*/),\n          (v14/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Queries\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"UserInfoModalQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"user\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          (v4/*: any*/),\n          (v5/*: any*/),\n          (v6/*: any*/),\n          (v7/*: any*/),\n          (v8/*: any*/),\n          (v9/*: any*/),\n          (v11/*: any*/),\n          (v12/*: any*/),\n          (v13/*: any*/),\n          (v14/*: any*/),\n          (v10/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"129326e5b3fef57774f2f8359d108efb\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UserInfoModalQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query UserInfoModalQuery(\\n  $email: String\\n  $isNotSupportSudoSessionEnabled: Boolean!\\n  $isTOTPSupported: Boolean!\\n) {\\n  user(email: $email) {\\n    email\\n    username\\n    need_password_change\\n    full_name\\n    description\\n    status\\n    domain_name\\n    role\\n    groups {\\n      id\\n      name\\n    }\\n    sudo_session_enabled @skipOnClient(if: $isNotSupportSudoSessionEnabled)\\n    totp_activated @include(if: $isTOTPSupported)\\n    main_access_key @since(version: \\\"23.09.7\\\")\\n    id\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"e2f5a5bfd435e95cb128afc7a7fbcd46\";\n\nexport default node;\n","import { useLocalStorageState } from 'ahooks';\nimport { useEffect } from 'react';\n\nexport const useLocalStorageGlobalState = <T extends unknown>(\n  key: string,\n  defaultValue: T,\n) => {\n  const [storageValue, setStorageValue] = useLocalStorageState<T>(key, {\n    defaultValue: defaultValue,\n  });\n  const eventName = 'useLocalStorageGlobalState:' + key;\n\n  useEffect(() => {\n    const handler = (event: any) => {\n      setStorageValue(event.detail);\n    };\n    document.addEventListener(eventName, handler);\n    return () => document.removeEventListener(eventName, handler);\n  }, [setStorageValue, eventName]);\n\n  return [\n    storageValue,\n    (value: T) => {\n      document.dispatchEvent(\n        new CustomEvent(eventName, {\n          detail: value,\n        }),\n      );\n    },\n  ] as const;\n};\n","import { useLocalStorageGlobalState } from './useLocalStorageGlobalState';\nimport { useEffect } from 'react';\n\ntype themeModeValue = 'system' | 'dark' | 'light';\n\nexport const useThemeMode = () => {\n  const [themeMode, setThemeMode] = useLocalStorageGlobalState<themeModeValue>(\n    'backendaiwebui.settings.themeMode',\n    'system',\n  );\n  // TODO: remove this when all components are ready\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [isDarkMode, setIsDarkMode] = useLocalStorageGlobalState<boolean>(\n    'backendaiwebui.settings.isDarkMode',\n    window.matchMedia('(prefers-color-scheme: dark)').matches,\n  );\n\n  useEffect(() => {\n    if (themeMode === 'system') {\n      const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n      setIsDarkMode(mediaQuery.matches);\n      const handler = (event: any) => {\n        setIsDarkMode(event.matches);\n      };\n      mediaQuery.addEventListener('change', handler);\n      return () => mediaQuery.removeEventListener('change', handler);\n    } else {\n      if (themeMode === 'dark') {\n        setIsDarkMode(true);\n      } else {\n        setIsDarkMode(false);\n      }\n    }\n  }, [themeMode, setIsDarkMode]);\n\n  return {\n    themeMode,\n    isDarkMode: false, //TODO: use isDarkMode when all components are ready\n    setThemeMode: (value: themeModeValue) => {\n      setThemeMode(value);\n    },\n  };\n};\n"],"names":["manipulateGraphQLQueryWithClientDirectives","query","variables","arguments","length","undefined","isCompatibleWith","ast","parse","newAst","visit","Field","enter","node","_node$directives","directives","find","directive","_directive$arguments","_directive$arguments2","_directive$arguments3","_directive$arguments4","directiveName","name","value","firstArgName","firstArgValue","arg","version","kind","leave","_node$selectionSet$se","selectionSet","selections","Directive","includes","usedVariables","Variable","VariableDefinition","variableDefinition","variable","print","RelayFeatureFlags","ENABLE_RELAY_RESOLVERS","fetchFn","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","request","_globalThis$backendai2","_globalThis$backendai3","transformedQuery","reqBody","reqInfo","result","wrap","_context","prev","next","globalThis","backendaiclient","Promise","resolve","document","addEventListener","onBackendAIConnected","removeEventListener","text","_globalThis$backendai","isManagerVersionCompatibleWith","newSignedRequest","_wrapWithPromise","catch","err","t0","sent","abrupt","stop","_x","_x2","apply","RelayEnvironment","Environment","network","Network","create","subscribeFn","store","Store","RecordSource","dayjs","weekday","localeData","localizedFormat","relativeTime","utc","timezone","WebComponentContext","React","ShadowRootContext","useShadowRoot","useWebComponentInfo","queryClient","QueryClient","defaultOptions","queries","suspense","refetchOnWindowFocus","retry","i18n","initReactI18next","use","Backend","init","backend","loadPath","lng","backendaioptions","get","fallbackLng","interpolation","escapeValue","react","transSupportBasicHtmlNodes","transKeepBasicHtmlNodesFor","RoutingEventHandler","navigate","useNavigate","useLayoutEffect","handleNavigate","e","detail","replace","children","styles","shadowRoot","dispatchEvent","cache","useMemo","createCache","_useCurrentLanguage","_useState","useState","_useState2","_slicedToArray","lang","_setLang","useTranslation","useEffect","setTimeout","changeLanguage","handler","_e$detail","_e$detail2","window","useCurrentLanguage","themeConfig","useCustomThemeConfig","isDarkMode","useThemeMode","componentValues","moveTo","path","params","_jsx","_Fragment","RelayEnvironmentProvider","environment","_jsxs","QueryClientProvider","client","Provider","ConfigProvider","getPopupContainer","triggerNode","parentNode","locale","ko_KR","en_US","theme","_objectSpread","dark","light","algorithm","darkAlgorithm","defaultAlgorithm","App","StyleProvider","container","Suspense","fallback","BrowserRouter","QueryParamProvider","adapter","ReactRouter6Adapter","options","_totpSupported","parsedValue","baiModalProps","Object","assign","_objectDestructuringEmpty","t","_useWebComponentInfo","JSON","error","open","userEmail","totpSupported","_parsedValue","baiClient","useSuspendedBackendaiClient","sudoSessionEnabledSupported","supports","_useQuery","useQuery","isManagerSupportingTOTP","data","isLoadingManagerSupportingTOTP","isLoading","user","useLazyLoadQuery","_UserInfoModalQuery","require","email","isNotSupportSudoSessionEnabled","isTOTPSupported","columnSetting","xxl","xl","lg","md","sm","xs","BAIModal","onCancel","centered","title","footer","Button","type","onClick","Descriptions","size","column","labelStyle","width","Item","label","username","full_name","main_access_key","status","need_password_change","sudo_session_enabled","Spin","spinning","totp_activated","domain_name","role","_","groups","group","Tag","id","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","v13","v14","hash","useLocalStorageGlobalState","key","defaultValue","_useLocalStorageState","useLocalStorageState","_useLocalStorageState2","storageValue","setStorageValue","eventName","event","CustomEvent","_useLocalStorageGloba","_useLocalStorageGloba2","themeMode","setThemeMode","_useLocalStorageGloba3","matchMedia","matches","_useLocalStorageGloba4","setIsDarkMode","mediaQuery"],"sourceRoot":""}