{"version":3,"file":"static/js/570.3cb80b45.chunk.js","mappings":"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","sources":["../node_modules/@ant-design/icons-svg/es/asn/RedoOutlined.js","../node_modules/@ant-design/icons/es/icons/RedoOutlined.js","components/ErrorLogList.tsx","components/TableColumnsSettingModal.tsx","../node_modules/@ant-design/icons-svg/es/asn/DeleteOutlined.js","../node_modules/@ant-design/icons/es/icons/DeleteOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/SettingOutlined.js","../node_modules/@ant-design/icons/es/icons/SettingOutlined.js"],"sourcesContent":["// This icon file is generated automatically.\nvar RedoOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M758.2 839.1C851.8 765.9 912 651.9 912 523.9 912 303 733.5 124.3 512.6 124 291.4 123.7 112 302.8 112 523.9c0 125.2 57.5 236.9 147.6 310.2 3.5 2.8 8.6 2.2 11.4-1.3l39.4-50.5c2.7-3.4 2.1-8.3-1.2-11.1-8.1-6.6-15.9-13.7-23.4-21.2a318.64 318.64 0 01-68.6-101.7C200.4 609 192 567.1 192 523.9s8.4-85.1 25.1-124.5c16.1-38.1 39.2-72.3 68.6-101.7 29.4-29.4 63.6-52.5 101.7-68.6C426.9 212.4 468.8 204 512 204s85.1 8.4 124.5 25.1c38.1 16.1 72.3 39.2 101.7 68.6 29.4 29.4 52.5 63.6 68.6 101.7 16.7 39.4 25.1 81.3 25.1 124.5s-8.4 85.1-25.1 124.5a318.64 318.64 0 01-68.6 101.7c-9.3 9.3-19.1 18-29.3 26L668.2 724a8 8 0 00-14.1 3l-39.6 162.2c-1.2 5 2.6 9.9 7.7 9.9l167 .8c6.7 0 10.5-7.7 6.3-12.9l-37.3-47.9z\" } }] }, \"name\": \"redo\", \"theme\": \"outlined\" };\nexport default RedoOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport RedoOutlinedSvg from \"@ant-design/icons-svg/es/asn/RedoOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar RedoOutlined = function RedoOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: RedoOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  RedoOutlined.displayName = 'RedoOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(RedoOutlined);","import { useUpdatableState } from '../hooks';\nimport BAIModal from './BAIModal';\nimport Flex from './Flex';\nimport TableColumnsSettingModal from './TableColumnsSettingModal';\nimport TextHighlighter from './TextHighlighter';\nimport {\n  RedoOutlined,\n  DeleteOutlined,\n  SearchOutlined,\n  SettingOutlined,\n  LoadingOutlined,\n} from '@ant-design/icons';\nimport { useLocalStorageState } from 'ahooks';\nimport { Button, Typography, Table, Alert, Checkbox, Input, theme } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\nimport dayjs from 'dayjs';\nimport _ from 'lodash';\nimport React, { useState, useMemo, useTransition } from 'react';\nimport { useTranslation } from 'react-i18next';\n\ntype logType = NonNullable<{\n  isError: boolean;\n  statusCode: any;\n  statusText: any;\n  title: any;\n  message: string;\n  requestMethod: string;\n  timestamp: string;\n  type: string;\n  requestUrl: string;\n  requestParameters?: string;\n  formattedTimestamp?: string; // for display only\n}>;\nconst ErrorLogList: React.FC = () => {\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n  const [isOpenClearLogsModal, setIsOpenClearLogsModal] = useState(false);\n  const [isOpenColumnsSetting, setIsOpenColumnsSetting] = useState(false);\n  const [checkedShowOnlyError, setCheckedShowOnlyError] = useState(false);\n  const [logSearch, setLogSearch] = useState('');\n  const [key, checkUpdate] = useUpdatableState('first');\n  const [isPendingRefreshTransition, startRefreshTransition] = useTransition();\n  const [isPendingSearchTransition, startSearchTransition] = useTransition();\n\n  const columns: ColumnsType<logType> = [\n    {\n      title: t('logs.TimeStamp'),\n      dataIndex: 'formattedTimeStamp',\n      key: 'timeStamp',\n      render: (value) => (\n        <div style={{ minWidth: 50 }}>\n          {_.isUndefined(value) ? (\n            '-'\n          ) : (\n            <TextHighlighter keyword={logSearch}>{value}</TextHighlighter>\n          )}\n        </div>\n      ),\n      fixed: 'left',\n    },\n    {\n      title: t('logs.Status'),\n      dataIndex: 'statusCode',\n      key: 'status',\n      render: (value, record) => (\n        <div style={{ minWidth: 50 }}>\n          {_.isUndefined(value) ? (\n            '-'\n          ) : (\n            <TextHighlighter keyword={logSearch}>\n              {value + ' ' + record.statusText}\n            </TextHighlighter>\n          )}\n        </div>\n      ),\n    },\n    {\n      title: t('logs.ErrorTitle'),\n      dataIndex: 'title',\n      key: 'errorTitle',\n      render: (value) => (\n        <div style={{ minWidth: 50 }}>\n          {!value ? (\n            '-'\n          ) : (\n            <TextHighlighter keyword={logSearch}>\n              {_.toString(value)}\n              {/* set toString because sometime value type is object */}\n            </TextHighlighter>\n          )}\n        </div>\n      ),\n    },\n    {\n      title: t('logs.ErrorMessage'),\n      dataIndex: 'message',\n      key: 'errorMessage',\n      render: (value) => (\n        <div style={{ minWidth: 70 }}>\n          {!value ? (\n            '-'\n          ) : (\n            <TextHighlighter keyword={logSearch}>{value}</TextHighlighter>\n          )}\n        </div>\n      ),\n    },\n    {\n      title: t('logs.ErrorType'),\n      dataIndex: 'type',\n      key: 'errorType',\n      render: (value) => (\n        <div style={{ minWidth: 60 }}>\n          {!value ? (\n            '-'\n          ) : (\n            <TextHighlighter keyword={logSearch}>{value}</TextHighlighter>\n          )}\n        </div>\n      ),\n    },\n    {\n      title: t('logs.Method'),\n      dataIndex: 'requestMethod',\n      key: 'method',\n      render: (value) => (\n        <div style={{ minWidth: 60 }}>\n          {!value ? (\n            '-'\n          ) : (\n            <TextHighlighter keyword={logSearch}>{value}</TextHighlighter>\n          )}\n        </div>\n      ),\n    },\n    {\n      title: t('logs.RequestUrl'),\n      dataIndex: 'requestUrl',\n      key: 'requestUrl',\n      render: (value) => (\n        <div style={{ minWidth: 60 }}>\n          {!value ? (\n            '-'\n          ) : (\n            <TextHighlighter keyword={logSearch}>{value}</TextHighlighter>\n          )}\n        </div>\n      ),\n    },\n    {\n      title: t('logs.Parameters'),\n      dataIndex: 'requestParameters',\n      key: 'requestParameter',\n      render: (value) => (\n        <div style={{ minWidth: 100 }}>\n          {!value ? (\n            '-'\n          ) : (\n            <TextHighlighter keyword={logSearch}>{value}</TextHighlighter>\n          )}\n        </div>\n      ),\n    },\n  ];\n\n  const [displayedColumnKeys, setDisplayedColumnKeys] = useLocalStorageState(\n    'backendaiwebui.ErrorLogList.displayedColumnKeys',\n    {\n      defaultValue: columns.map((column) => _.toString(column.key)),\n    },\n  );\n\n  const storageLogData = useMemo(() => {\n    const raw = JSON.parse(localStorage.getItem('backendaiwebui.logs') || '[]');\n    return _.map(raw, (log) => {\n      return {\n        ...log,\n        formattedTimeStamp: dayjs(log.timestamp).format('lll'),\n      };\n    });\n    // Add blow comment because eslint dependency\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [key]);\n\n  const filteredLogData = useMemo(() => {\n    const regExp = new RegExp(`${_.escapeRegExp(logSearch)}`, 'i');\n    return _.filter(storageLogData, (log) => {\n      if (!logSearch) return true;\n      return !!_.find(log, (value, key) => {\n        if (key === 'timestamp') {\n          // timestamp is not display in table, use formattedTimestamp instead\n          return false;\n        }\n        return _.toString(value).match(regExp);\n      });\n    });\n  }, [logSearch, storageLogData]);\n\n  const handleOk = () => {\n    localStorage.removeItem('backendaiwebui.logs');\n    checkUpdate();\n    setIsOpenClearLogsModal(false);\n  };\n\n  return (\n    <>\n      <Flex direction=\"column\" align=\"stretch\">\n        <Flex\n          direction=\"row\"\n          justify=\"between\"\n          wrap=\"wrap\"\n          gap={'xs'}\n          style={{\n            padding: token.paddingContentVertical,\n            paddingLeft: token.paddingContentHorizontalSM,\n            paddingRight: token.paddingContentHorizontalSM,\n          }}\n        >\n          <Flex direction=\"column\" align=\"start\">\n            <Typography.Title level={4} style={{ margin: 0, padding: 0 }}>\n              {t('logs.LogMessages')}\n            </Typography.Title>\n            <Typography.Text type=\"secondary\">\n              {t('logs.UpTo3000Logs')}\n            </Typography.Text>\n          </Flex>\n          <Flex\n            direction=\"row\"\n            gap={'xs'}\n            wrap=\"wrap\"\n            style={{ flexShrink: 1 }}\n          >\n            <Flex gap={'xs'}>\n              <Input\n                allowClear\n                prefix={<SearchOutlined />}\n                placeholder={t('logs.SearchLogs')}\n                onChange={(e) => {\n                  startSearchTransition(() => setLogSearch(e.target.value));\n                }}\n                style={{\n                  width: 200,\n                }}\n              />\n              <Checkbox\n                onChange={(e) => setCheckedShowOnlyError(e.target.checked)}\n              >\n                {t('logs.ShowOnlyError')}\n              </Checkbox>\n            </Flex>\n            <Flex gap={'xs'}>\n              <Button\n                icon={<RedoOutlined />}\n                loading={isPendingRefreshTransition}\n                onClick={() => {\n                  startRefreshTransition(() => checkUpdate());\n                }}\n              >\n                {t('button.Refresh')}\n              </Button>\n              <Button\n                danger\n                icon={<DeleteOutlined />}\n                onClick={() => {\n                  setIsOpenClearLogsModal(true);\n                }}\n              >\n                {t('button.ClearLogs')}\n              </Button>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Table\n          pagination={{ showSizeChanger: false }}\n          loading={\n            isPendingSearchTransition\n              ? {\n                  indicator: <LoadingOutlined />,\n                }\n              : false\n          }\n          scroll={{ x: 'max-content', y: 'calc(100vh - 430px)' }}\n          dataSource={\n            checkedShowOnlyError\n              ? _.filter(filteredLogData, (log) => {\n                  return log.isError;\n                })\n              : (filteredLogData as logType[])\n          }\n          columns={columns.filter(\n            (column) => displayedColumnKeys?.includes(_.toString(column.key)),\n          )}\n          onRow={(record) => {\n            return {\n              style: { color: record.isError ? 'red' : '' },\n            };\n          }}\n        />\n      </Flex>\n      <Flex\n        justify=\"end\"\n        style={{\n          paddingRight: token.paddingXS,\n        }}\n      >\n        <Button\n          type=\"text\"\n          icon={<SettingOutlined />}\n          onClick={() => {\n            setIsOpenColumnsSetting(true);\n          }}\n        />\n      </Flex>\n      <BAIModal\n        open={isOpenClearLogsModal}\n        title={t('dialog.warning.LogDeletion')}\n        okText={t('button.Delete')}\n        okButtonProps={{ danger: true }}\n        onOk={handleOk}\n        cancelText={t('button.Cancel')}\n        onCancel={() => setIsOpenClearLogsModal(false)}\n      >\n        <Alert message={t('dialog.warning.CannotBeUndone')} type=\"warning\" />\n      </BAIModal>\n      <TableColumnsSettingModal\n        open={isOpenColumnsSetting}\n        onRequestClose={(values) => {\n          values?.selectedColumnKeys &&\n            setDisplayedColumnKeys(values?.selectedColumnKeys);\n          setIsOpenColumnsSetting(false);\n        }}\n        columns={columns}\n        displayedColumnKeys={displayedColumnKeys ? displayedColumnKeys : []}\n      />\n    </>\n  );\n};\n\nexport default ErrorLogList;\n","import BAIModal, { BAIModalProps } from './BAIModal';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { Checkbox, Input, theme, Form } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\nimport _ from 'lodash';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\ninterface FormValues {\n  searchInput?: string;\n  selectedColumnKeys?: string[];\n}\n\ninterface TableColumnsSettingProps extends BAIModalProps {\n  open: boolean;\n  onRequestClose: (formValues?: FormValues) => void;\n  columns: ColumnsType<any>;\n  displayedColumnKeys?: string[];\n}\n\nconst TableColumnsSettingModal: React.FC<TableColumnsSettingProps> = ({\n  open,\n  onRequestClose,\n  columns,\n  displayedColumnKeys,\n  ...modalProps\n}) => {\n  const [form] = Form.useForm<FormValues>();\n  const { t } = useTranslation();\n  const { token } = theme.useToken();\n\n  const onChangeTitleToString: any = (element: any) => {\n    const text = React.Children.map(element.props.children, (child) => {\n      if (typeof child === 'string') {\n        return child;\n      }\n    });\n    return text;\n  };\n\n  const columnOptions = columns.map((column) => {\n    if (typeof column.title === 'string') {\n      return {\n        label: column.title,\n        value: _.toString(column.key),\n      };\n    } else if (typeof column.title === 'object' && 'props' in column.title!) {\n      return {\n        label: onChangeTitleToString(column.title),\n        value: _.toString(column.key),\n      };\n    } else {\n      return {\n        label: undefined,\n        value: _.toString(column.key),\n      };\n    }\n  });\n\n  return (\n    <BAIModal\n      title={t('table.SettingTable')}\n      open={open}\n      destroyOnClose\n      centered\n      onOk={() => {\n        form\n          .validateFields()\n          .then((values) => {\n            onRequestClose(values);\n          })\n          .catch(() => {});\n      }}\n      onCancel={() => {\n        onRequestClose();\n      }}\n      {...modalProps}\n    >\n      <Form\n        form={form}\n        preserve={false}\n        initialValues={{\n          selectedColumnKeys:\n            displayedColumnKeys ||\n            columnOptions.map((columnOption) => columnOption.value),\n        }}\n        layout=\"vertical\"\n      >\n        <Form.Item\n          name=\"searchInput\"\n          label={t('table.SelectColumnToDisplay')}\n          style={{ marginBottom: 0 }}\n        >\n          <Input\n            prefix={<SearchOutlined />}\n            style={{ marginBottom: token.marginSM }}\n            placeholder={t('table.SearchTableColumn')}\n          />\n        </Form.Item>\n        <Form.Item\n          noStyle\n          shouldUpdate={(prev, cur) => prev.searchInput !== cur.searchInput}\n        >\n          {({ getFieldValue }) => {\n            const searchKeyword = getFieldValue('searchInput')\n              ? _.toLower(getFieldValue('searchInput'))\n              : undefined;\n\n            const filteredColumns = columnOptions.map((columnOption) =>\n              _.toLower(_.toString(columnOption.label)).includes(\n                searchKeyword || '',\n              )\n                ? columnOption\n                : {\n                    ...columnOption,\n                    style: {\n                      display: 'none',\n                    },\n                  },\n            );\n            return (\n              <Form.Item\n                name=\"selectedColumnKeys\"\n                style={{\n                  height: 220,\n                  overflowY: 'auto',\n                }}\n              >\n                <Checkbox.Group\n                  options={filteredColumns}\n                  style={{ flexDirection: 'column' }}\n                />\n              </Form.Item>\n            );\n          }}\n        </Form.Item>\n      </Form>\n    </BAIModal>\n  );\n};\n\nexport default TableColumnsSettingModal;\n","// This icon file is generated automatically.\nvar DeleteOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z\" } }] }, \"name\": \"delete\", \"theme\": \"outlined\" };\nexport default DeleteOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport DeleteOutlinedSvg from \"@ant-design/icons-svg/es/asn/DeleteOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar DeleteOutlined = function DeleteOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: DeleteOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  DeleteOutlined.displayName = 'DeleteOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(DeleteOutlined);","// This icon file is generated automatically.\nvar SettingOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M924.8 625.7l-65.5-56c3.1-19 4.7-38.4 4.7-57.8s-1.6-38.8-4.7-57.8l65.5-56a32.03 32.03 0 009.3-35.2l-.9-2.6a443.74 443.74 0 00-79.7-137.9l-1.8-2.1a32.12 32.12 0 00-35.1-9.5l-81.3 28.9c-30-24.6-63.5-44-99.7-57.6l-15.7-85a32.05 32.05 0 00-25.8-25.7l-2.7-.5c-52.1-9.4-106.9-9.4-159 0l-2.7.5a32.05 32.05 0 00-25.8 25.7l-15.8 85.4a351.86 351.86 0 00-99 57.4l-81.9-29.1a32 32 0 00-35.1 9.5l-1.8 2.1a446.02 446.02 0 00-79.7 137.9l-.9 2.6c-4.5 12.5-.8 26.5 9.3 35.2l66.3 56.6c-3.1 18.8-4.6 38-4.6 57.1 0 19.2 1.5 38.4 4.6 57.1L99 625.5a32.03 32.03 0 00-9.3 35.2l.9 2.6c18.1 50.4 44.9 96.9 79.7 137.9l1.8 2.1a32.12 32.12 0 0035.1 9.5l81.9-29.1c29.8 24.5 63.1 43.9 99 57.4l15.8 85.4a32.05 32.05 0 0025.8 25.7l2.7.5a449.4 449.4 0 00159 0l2.7-.5a32.05 32.05 0 0025.8-25.7l15.7-85a350 350 0 0099.7-57.6l81.3 28.9a32 32 0 0035.1-9.5l1.8-2.1c34.8-41.1 61.6-87.5 79.7-137.9l.9-2.6c4.5-12.3.8-26.3-9.3-35zM788.3 465.9c2.5 15.1 3.8 30.6 3.8 46.1s-1.3 31-3.8 46.1l-6.6 40.1 74.7 63.9a370.03 370.03 0 01-42.6 73.6L721 702.8l-31.4 25.8c-23.9 19.6-50.5 35-79.3 45.8l-38.1 14.3-17.9 97a377.5 377.5 0 01-85 0l-17.9-97.2-37.8-14.5c-28.5-10.8-55-26.2-78.7-45.7l-31.4-25.9-93.4 33.2c-17-22.9-31.2-47.6-42.6-73.6l75.5-64.5-6.5-40c-2.4-14.9-3.7-30.3-3.7-45.5 0-15.3 1.2-30.6 3.7-45.5l6.5-40-75.5-64.5c11.3-26.1 25.6-50.7 42.6-73.6l93.4 33.2 31.4-25.9c23.7-19.5 50.2-34.9 78.7-45.7l37.9-14.3 17.9-97.2c28.1-3.2 56.8-3.2 85 0l17.9 97 38.1 14.3c28.7 10.8 55.4 26.2 79.3 45.8l31.4 25.8 92.8-32.9c17 22.9 31.2 47.6 42.6 73.6L781.8 426l6.5 39.9zM512 326c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm79.2 255.2A111.6 111.6 0 01512 614c-29.9 0-58-11.7-79.2-32.8A111.6 111.6 0 01400 502c0-29.9 11.7-58 32.8-79.2C454 401.6 482.1 390 512 390c29.9 0 58 11.6 79.2 32.8A111.6 111.6 0 01624 502c0 29.9-11.7 58-32.8 79.2z\" } }] }, \"name\": \"setting\", \"theme\": \"outlined\" };\nexport default SettingOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport SettingOutlinedSvg from \"@ant-design/icons-svg/es/asn/SettingOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar SettingOutlined = function SettingOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: SettingOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  SettingOutlined.displayName = 'SettingOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(SettingOutlined);"],"names":["RedoOutlined","props","ref","React","AntdIcon","_extends","icon","RedoOutlinedSvg","t","useTranslation","token","theme","useToken","_useState","useState","_useState2","_slicedToArray","isOpenClearLogsModal","setIsOpenClearLogsModal","_useState3","_useState4","isOpenColumnsSetting","setIsOpenColumnsSetting","_useState5","_useState6","checkedShowOnlyError","setCheckedShowOnlyError","_useState7","_useState8","logSearch","setLogSearch","_useUpdatableState","useUpdatableState","_useUpdatableState2","key","checkUpdate","_useTransition","useTransition","_useTransition2","isPendingRefreshTransition","startRefreshTransition","_useTransition3","_useTransition4","isPendingSearchTransition","startSearchTransition","columns","title","dataIndex","render","value","_jsx","style","minWidth","children","_","TextHighlighter","keyword","fixed","record","statusText","_useLocalStorageState","useLocalStorageState","defaultValue","map","column","_useLocalStorageState2","displayedColumnKeys","setDisplayedColumnKeys","storageLogData","useMemo","raw","JSON","parse","localStorage","getItem","log","_objectSpread","formattedTimeStamp","dayjs","timestamp","format","filteredLogData","regExp","RegExp","concat","match","_jsxs","_Fragment","Flex","direction","align","justify","wrap","gap","padding","paddingContentVertical","paddingLeft","paddingContentHorizontalSM","paddingRight","Typography","Title","level","margin","Text","type","flexShrink","Input","allowClear","prefix","SearchOutlined","placeholder","onChange","e","target","width","Checkbox","checked","Button","loading","onClick","danger","DeleteOutlined","Table","pagination","showSizeChanger","indicator","LoadingOutlined","scroll","x","y","dataSource","isError","filter","includes","onRow","color","paddingXS","SettingOutlined","BAIModal","open","okText","okButtonProps","onOk","removeItem","cancelText","onCancel","Alert","message","TableColumnsSettingModal","onRequestClose","values","selectedColumnKeys","_ref","modalProps","_objectWithoutProperties","_excluded","_Form$useForm","Form","useForm","form","columnOptions","label","element","child","undefined","destroyOnClose","centered","validateFields","then","catch","preserve","initialValues","columnOption","layout","Item","name","marginBottom","marginSM","noStyle","shouldUpdate","prev","cur","searchInput","_ref2","getFieldValue","searchKeyword","filteredColumns","display","height","overflowY","Group","options","flexDirection","DeleteOutlinedSvg","SettingOutlinedSvg"],"sourceRoot":""}