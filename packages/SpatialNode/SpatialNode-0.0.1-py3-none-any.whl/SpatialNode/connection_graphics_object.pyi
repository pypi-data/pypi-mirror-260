#  Copyright (c) 2024 Feng Yang
#
#  I am making my contributions/submissions to this project solely in my
#  personal capacity and am not conveying any rights to any intellectual
#  property of any third parties.

from typing import override

from PySide6 import QtWidgets, QtCore

from SpatialNode.abstract_graph_model import AbstractGraphModel
from SpatialNode.basic_graphics_scene import BasicGraphicsScene
from SpatialNode.connection_state import ConnectionState
from SpatialNode.definitions import ConnectionId, PortType

class ConnectionGraphicsObject(QtWidgets.QGraphicsObject):
    """Graphic Object for connection. Adds itself to scene"""

    def __init__(self, scene: BasicGraphicsScene, connectionId: ConnectionId):
        self._connectionId: ConnectionId = None
        self._graphModel: AbstractGraphModel = None
        self._connectionState: ConnectionState = None
        self._out: QtCore.QPointF = None
        self._in: QtCore.QPointF = None

    @property
    def graphModel(self) -> AbstractGraphModel: ...
    @property
    def nodeScene(self) -> BasicGraphicsScene: ...
    @property
    def connectionId(self) -> ConnectionId: ...
    @override
    def boundingRect(self): ...
    @override
    def shape(self): ...
    def endPoint(self, portType: PortType | None) -> QtCore.QPointF: ...
    def outSlot(self) -> QtCore.QPointF: ...
    def inSlot(self) -> QtCore.QPointF: ...
    def pointsC1C2(self) -> tuple[QtCore.QPointF, QtCore.QPointF]: ...
    def setEndPoint(self, portType: PortType | None, point: QtCore.QPointF) -> None: ...
    def move(self) -> None: ...
    @property
    def connectionState(self) -> ConnectionState: ...
    @override
    def paint(self, painter, option, widget=...): ...
    @override
    def mousePressEvent(self, event): ...
    @override
    def mouseMoveEvent(self, event): ...
    @override
    def mouseReleaseEvent(self, event): ...
    @override
    def hoverEnterEvent(self, event): ...
    @override
    def hoverLeaveEvent(self, event): ...
    def _initializePosition(self) -> None: ...
    def _addGraphicsEffect(self) -> None: ...
    def _pointsC1C2Horizontal(self) -> tuple[QtCore.QPointF, QtCore.QPointF]: ...
    def _pointsC1C2Vertical(self) -> tuple[QtCore.QPointF, QtCore.QPointF]: ...
