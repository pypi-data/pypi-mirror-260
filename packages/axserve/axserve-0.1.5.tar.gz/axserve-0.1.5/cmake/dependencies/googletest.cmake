include_guard(GLOBAL)

message(CHECK_START "Checking GoogleTest provider")

if(AXSERVE_GTEST_PROVIDER STREQUAL "module")
    set(GTEST_EXTERNAL_NAME "GTest")

    set(GTEST_SOURCE_DIR   "${CMAKE_CURRENT_SOURCE_DIR}/third_party/googletest")
    set(GTEST_PREFIX_DIR   "${CMAKE_CURRENT_BINARY_DIR}/gtest")
    set(GTEST_BINARY_DIR   "${CMAKE_CURRENT_BINARY_DIR}/gtest-build")
    set(GTEST_INSTALL_DIR  "${GTEST_PREFIX_DIR}")
    set(GTEST_TMP_DIR      "${GTEST_PREFIX_DIR}/tmp")
    set(GTEST_STAMP_DIR    "${GTEST_TMP_DIR}/stamp")
    set(GTEST_LOG_DIR      "${GTEST_TMP_DIR}/log")
    set(GTEST_DOWNLOAD_DIR "${GTEST_TMP_DIR}/download")

    if(NOT EXISTS "${GTEST_SOURCE_DIR}/CMakeLists.txt")
        set(GTEST_GIT_REPOSITORY "https://github.com/google/googletest.git")
        set(GTEST_GIT_TAG "v1.14.0")
    endif()

    set(GTEST_CMAKE_COMMAND "${CMAKE_COMMAND}")

    if(CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
        set(GTEST_CMAKE_ARGS
            "-DCMAKE_SYSTEM_NAME:STRING=${CMAKE_SYSTEM_NAME}"
            "-DCMAKE_SYSTEM_PROCESSOR:STRING=${CMAKE_SYSTEM_PROCESSOR}"
            "-P" "${CMAKE_CURRENT_LIST_DIR}/../msvc/env-msvc.cmake"
            "--" "${GTEST_CMAKE_COMMAND}")
        set(GTEST_BUILD_COMMAND
            "${GTEST_CMAKE_COMMAND}" ${GTEST_CMAKE_ARGS}
            "--build" "${GTEST_BINARY_DIR}"
            "--parallel")
    endif()

    set(GTEST_CMAKE_CACHE_ARGS
        "-DCMAKE_INSTALL_PREFIX:PATH=${GTEST_PREFIX_DIR}"
        "-DCMAKE_PREFIX_PATH:PATH=${CMAKE_PREFIX_PATH}"
        "-DCMAKE_SYSTEM_NAME:STRING=${CMAKE_SYSTEM_NAME}"
        "-DCMAKE_SYSTEM_PROCESSOR:STRING=${CMAKE_SYSTEM_PROCESSOR}"
        "-DCMAKE_CROSSCOMPILING:BOOL=${GTEST_CMAKE_CROSSCOMPILING}"
        "-DCMAKE_TOOLCHAIN_FILE:PATH=${CMAKE_TOOLCHAIN_FILE}"
        "-DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE}"
        "-DCMAKE_CXX_STANDARD:STRING=${CMAKE_CXX_STANDARD}"
        "-DCMAKE_CXX_STANDARD_REQUIRED:BOOL=${CMAKE_CXX_STANDARD_REQUIRED}"
        "-DBUILD_SHARED_LIBS:BOOL=ON"
        "-DBUILD_GMOCK:BOOL=ON"
    )

    include(ExternalProject)
    ExternalProject_Add("${GTEST_EXTERNAL_NAME}"
        PREFIX "${GTEST_PREFIX_DIR}"
        TMP_DIR "${GTEST_TMP_DIR}"
        STAMP_DIR "${GTEST_STAMP_DIR}"
        LOG_DIR "${GTEST_LOG_DIR}"
        DOWNLOAD_DIR "${GTEST_DOWNLOAD_DIR}"
        SOURCE_DIR "${GTEST_SOURCE_DIR}"
        BINARY_DIR "${GTEST_BINARY_DIR}"
        INSTALL_DIR "${GTEST_INSTALL_DIR}"
        GIT_REPOSITORY "${GTEST_GIT_REPOSITORY}"
        GIT_TAG "${GTEST_GIT_TAG}"
        CMAKE_COMMAND "${GTEST_CMAKE_COMMAND}"
        CMAKE_ARGS ${GTEST_CMAKE_ARGS}
        CMAKE_CACHE_ARGS ${GTEST_CMAKE_CACHE_ARGS}
        BUILD_COMMAND ${GTEST_BUILD_COMMAND}
        LOG_CONFIGURE TRUE
        LOG_BUILD TRUE
    )

    ExternalProject_Get_Property("${GTEST_EXTERNAL_NAME}" INSTALL_DIR)
    set(GTEST_INSTALL_DIR "${INSTALL_DIR}")
    list(APPEND CMAKE_PREFIX_PATH "${GTEST_INSTALL_DIR}")

    message(CHECK_PASS "${AXSERVE_GTEST_PROVIDER}")
elseif(AXSERVE_GTEST_PROVIDER STREQUAL "package")
    find_package(GTest REQUIRED)
    message(CHECK_PASS "${AXSERVE_GTEST_PROVIDER}")
else()
    message(CHECK_FAIL "${AXSERVE_GTEST_PROVIDER}")
endif()
