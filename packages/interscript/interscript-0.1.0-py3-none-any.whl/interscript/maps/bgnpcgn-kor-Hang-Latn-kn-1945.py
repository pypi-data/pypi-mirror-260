import interscript
import regex as re
interscript.load_map("var-kor-Hang-Latn-mr-1939")
interscript.stdlib.define_map("bgnpcgn-kor-Hang-Latn-kn-1945")
def _stage_main(s):
    s = re.compile(""+interscript.stdlib.aliases["line_start"]+"", re.MULTILINE).sub("​", s)
    s = re.compile("(?<=\\ )", re.MULTILINE).sub("​", s)
    s = re.compile("((?:[0-9]\\ ))(?=[0-9])", re.MULTILINE).sub("\\1"+" ", s)
    s = re.compile("1", re.MULTILINE).sub(" 일", s)
    s = re.compile("2", re.MULTILINE).sub(" 이", s)
    s = re.compile("3", re.MULTILINE).sub(" 삼", s)
    s = re.compile("4", re.MULTILINE).sub(" 사", s)
    s = re.compile("5", re.MULTILINE).sub(" 오", s)
    s = re.compile("6", re.MULTILINE).sub(" 육", s)
    s = re.compile("7", re.MULTILINE).sub(" 칠", s)
    s = re.compile("8", re.MULTILINE).sub(" 팔", s)
    s = re.compile("9", re.MULTILINE).sub(" 구", s)
    s = interscript.transliterate("var-kor-Hang-Latn-mr-1939", s, "main")
    s = re.compile(""+interscript.stdlib.aliases["line_start"]+"", re.MULTILINE).sub(" ", s)
    s = re.compile(""+interscript.stdlib.aliases["line_end"]+"", re.MULTILINE).sub(" ", s)
    s = re.compile("​", re.MULTILINE).sub("", s)
    s = re.compile("(?<=\\ )ᄀ", re.MULTILINE).sub("k", s)
    s = re.compile("(?<=\\ )ᄂ", re.MULTILINE).sub("n", s)
    s = re.compile("(?<=\\ )ᄃ(?=[ᅵᅣᅤᅧᅨᅭᅲ])", re.MULTILINE).sub("ch", s)
    s = re.compile("(?<=\\ )ᄃ", re.MULTILINE).sub("t", s)
    s = re.compile("(?<=\\ )ᄅ", re.MULTILINE).sub("r", s)
    s = re.compile("(?<=\\ )ᄆ", re.MULTILINE).sub("m", s)
    s = re.compile("(?<=\\ )ᄇ", re.MULTILINE).sub("p", s)
    s = re.compile("(?<=\\ )ᄉ(?=ᅱ)", re.MULTILINE).sub("sh", s)
    s = re.compile("(?<=\\ )ᄉ", re.MULTILINE).sub("s", s)
    s = re.compile("(?<=\\ )ᄋ", re.MULTILINE).sub("", s)
    s = re.compile("(?<=\\ )ᄌ", re.MULTILINE).sub("ch", s)
    s = re.compile("(?<=\\ )ᄎ", re.MULTILINE).sub("ch’", s)
    s = re.compile("(?<=\\ )ᄏ", re.MULTILINE).sub("k’", s)
    s = re.compile("(?<=\\ )ᄐ(?=[ᅵᅣᅤᅧᅨᅭᅲ])", re.MULTILINE).sub("ch’", s)
    s = re.compile("(?<=\\ )ᄐ", re.MULTILINE).sub("t’", s)
    s = re.compile("(?<=\\ )ᄑ", re.MULTILINE).sub("p’", s)
    s = re.compile("(?<=\\ )ᄒ", re.MULTILINE).sub("h", s)
    s = re.compile("(?<=\\ )ᄁ", re.MULTILINE).sub("kk", s)
    s = re.compile("(?<=\\ )ᄭ", re.MULTILINE).sub("kk", s)
    s = re.compile("(?<=\\ )ᄄ", re.MULTILINE).sub("tt", s)
    s = re.compile("(?<=\\ )ᄯ", re.MULTILINE).sub("tt", s)
    s = re.compile("(?<=\\ )ᄈ", re.MULTILINE).sub("pp", s)
    s = re.compile("(?<=\\ )ᄲ", re.MULTILINE).sub("pp", s)
    s = re.compile("(?<=\\ )ᄊ", re.MULTILINE).sub("ss", s)
    s = re.compile("(?<=\\ )ᄍ", re.MULTILINE).sub("tch", s)
    s = re.compile("(?<=\\ )ᄶ", re.MULTILINE).sub("tch", s)
    s = re.compile(""+interscript.stdlib.aliases["line_start"]+"\\ ", re.MULTILINE).sub("", s)
    s = re.compile("\\ "+interscript.stdlib.aliases["line_end"]+"", re.MULTILINE).sub("", s)
    s = interscript.functions.title_case(s, {})
    s = interscript.functions.compose(s, {})
    return s

interscript.stdlib.add_map_stage("bgnpcgn-kor-Hang-Latn-kn-1945", "main", _stage_main)
