import interscript
import regex as re
interscript.stdlib.define_map("elot-ell-Grek-Latn-743-1982-ts")
def _stage_main(s):
    s = re.compile("(?<=[ΑαΕεΗη])Υ(?=[θΘκΚξΞπΠσΣςτΤφΦχΧψΨ])", re.MULTILINE).sub("F", s)
    s = re.compile("(?<=[ΑαΕεΗη])Υ(?="+interscript.stdlib.aliases["boundary"]+")", re.MULTILINE).sub("F", s)
    s = re.compile("(?<=[ΑαΕεΗη])υ(?=[θΘκΚξΞπΠσΣςτΤφΦχΧψΨ])", re.MULTILINE).sub("f", s)
    s = re.compile("(?<=[ΑαΕεΗη])υ(?="+interscript.stdlib.aliases["boundary"]+")", re.MULTILINE).sub("f", s)
    s = re.compile("(?<=[ΑαΕεΗη])Υ", re.MULTILINE).sub("V", s)
    s = re.compile("(?<=[ΑαΕεΗη])υ", re.MULTILINE).sub("v", s)
    s = re.compile("Αύ(?=[θΘκΚξΞπΠσΣςτΤφΦχΧψΨ])", re.MULTILINE).sub("Áf", s)
    s = re.compile("Αύ(?="+interscript.stdlib.aliases["boundary"]+")", re.MULTILINE).sub("Áf", s)
    s = re.compile("Αύ", re.MULTILINE).sub("Áv", s)
    s = re.compile("αύ(?=[θΘκΚξΞπΠσΣςτΤφΦχΧψΨ])", re.MULTILINE).sub("áf", s)
    s = re.compile("αύ(?="+interscript.stdlib.aliases["boundary"]+")", re.MULTILINE).sub("áf", s)
    s = re.compile("αύ", re.MULTILINE).sub("áv", s)
    s = re.compile("Εύ(?=[θΘκΚξΞπΠσΣςτΤφΦχΧψΨ])", re.MULTILINE).sub("Éf", s)
    s = re.compile("Εύ(?="+interscript.stdlib.aliases["boundary"]+")", re.MULTILINE).sub("Éf", s)
    s = re.compile("Εύ", re.MULTILINE).sub("Év", s)
    s = re.compile("εύ(?=[θΘκΚξΞπΠσΣςτΤφΦχΧψΨ])", re.MULTILINE).sub("éf", s)
    s = re.compile("εύ(?="+interscript.stdlib.aliases["boundary"]+")", re.MULTILINE).sub("éf", s)
    s = re.compile("εύ", re.MULTILINE).sub("év", s)
    s = re.compile("Ηύ(?=[θΘκΚξΞπΠσΣςτΤφΦχΧψΨ])", re.MULTILINE).sub("Íf", s)
    s = re.compile("Ηύ(?="+interscript.stdlib.aliases["boundary"]+")", re.MULTILINE).sub("Íf", s)
    s = re.compile("Ηύ", re.MULTILINE).sub("Ív", s)
    s = re.compile("ηύ(?=[θΘκΚξΞπΠσΣςτΤφΦχΧψΨ])", re.MULTILINE).sub("íf", s)
    s = re.compile("ηύ(?="+interscript.stdlib.aliases["boundary"]+")", re.MULTILINE).sub("íf", s)
    s = re.compile("ηύ", re.MULTILINE).sub("ív", s)
    s = re.compile("(?<=[Οο])Υ", re.MULTILINE).sub("U", s)
    s = re.compile("(?<=[Οο])υ", re.MULTILINE).sub("u", s)
    s = re.compile("(?<=[Οο])ύ", re.MULTILINE).sub("ú", s)
    s = re.compile("(?<=[ΆάΈέΉήΌό])Υ", re.MULTILINE).sub("Υ", s)
    s = re.compile("(?<=[ΆάΈέΉήΌό])υ", re.MULTILINE).sub("y", s)
    s = re.compile("Γ(?=[ξΞχΧ])", re.MULTILINE).sub("N", s)
    s = re.compile("γ(?=[ξΞχΧ])", re.MULTILINE).sub("n", s)
    s = re.compile("Γ[Γγ]", re.MULTILINE).sub("Ng", s)
    s = re.compile("γγ", re.MULTILINE).sub("ng", s)
    s = re.compile("Γ[Κκ]", re.MULTILINE).sub("Gk", s)
    s = re.compile("γ[Κκ]", re.MULTILINE).sub("gk", s)
    s = re.compile("(?<="+interscript.stdlib.aliases["boundary"]+")Μ[πΠ]", re.MULTILINE).sub("B", s)
    s = re.compile("(?<="+interscript.stdlib.aliases["boundary"]+")μ[πΠ]", re.MULTILINE).sub("b", s)
    s = re.compile("Μ[πΠ](?="+interscript.stdlib.aliases["boundary"]+")", re.MULTILINE).sub("B", s)
    s = re.compile("μ[πΠ](?="+interscript.stdlib.aliases["boundary"]+")", re.MULTILINE).sub("b", s)
    s = re.compile("(?<!"+interscript.stdlib.aliases["boundary"]+")Μ[πΠ]", re.MULTILINE).sub("Mp", s)
    s = re.compile("(?<!"+interscript.stdlib.aliases["boundary"]+")μ[πΠ]", re.MULTILINE).sub("mp", s)
    s = re.compile(";", re.MULTILINE).sub("?", s)
    s = re.compile(";", re.MULTILINE).sub("?", s)
    s = interscript.stdlib.parallel_replace_tree(s, _PTREE_3249610026369489666)
    s = re.compile("(?<=[A-Z])(?:Th|Ch|Ps)", re.MULTILINE).sub(interscript.stdlib.upper, s)
    s = re.compile("(?:Th|Ch|Ps)(?=[A-Z])", re.MULTILINE).sub(interscript.stdlib.upper, s)
    return s

interscript.stdlib.add_map_stage("elot-ell-Grek-Latn-743-1982-ts", "main", _stage_main)
_PTREE_3249610026369489666 = {39:{None:""},902:{None:"Á"},913:{None:"A"},914:{None:"V"},915:{None:"G"},916:{None:"D"},917:{None:"E",938:{None:"Eï"},970:{None:"Eï"}},904:{970:{None:"Éï"},None:"É"},918:{None:"Z"},919:{None:"I"},920:{None:"Th"},921:{None:"I"},922:{None:"K"},923:{None:"L"},924:{None:"M"},925:{None:"N"},926:{None:"X"},927:{None:"O"},928:{None:"P"},929:{None:"R"},931:{None:"S"},932:{None:"T"},933:{None:"Y"},934:{None:"F"},935:{None:"Ch"},936:{None:"Ps"},937:{None:"O"},905:{None:"Í"},906:{None:"Í"},908:{None:"Ó"},910:{None:"Ý"},911:{None:"Ó"},938:{None:"Ï"},939:{None:"Ÿ"},940:{None:"á"},945:{None:"a"},946:{None:"v"},947:{None:"g"},948:{None:"d"},949:{None:"e",970:{None:"eï"}},941:{970:{None:"éï"},953:{None:"éi"},None:"é"},950:{None:"z"},951:{None:"i"},952:{None:"th"},953:{None:"i"},954:{None:"k"},955:{None:"l"},956:{None:"m"},957:{None:"n"},958:{None:"x"},959:{None:"o"},960:{None:"p"},961:{None:"r"},963:{None:"s"},962:{None:"s"},964:{None:"t"},965:{None:"y"},966:{None:"f"},967:{None:"ch"},968:{None:"ps"},969:{None:"o"},942:{None:"í"},943:{None:"í"},972:{None:"ó"},973:{None:"ý"},974:{None:"ó"},970:{None:"ï"},971:{None:"ÿ"},912:{None:"ḯ"},944:{None:"ÿ́"},903:{None:";"},183:{None:";"}}
