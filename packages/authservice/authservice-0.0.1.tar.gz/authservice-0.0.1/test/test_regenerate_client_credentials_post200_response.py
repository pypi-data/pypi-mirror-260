# coding: utf-8

"""
    Auth Service

    This API provides token-based authentication for user registration, login, and client credential management. It ensures secure communication by utilizing tokens for authentication. Users can register with unique usernames and passwords, authenticate using client credentials, retrieve client IDs and secrets, and regenerate client credentials as needed. The API supports various user roles, including 'user', 'admin', 'moderator', 'guest', and 'superadmin'.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from authservice.models.regenerate_client_credentials_post200_response import RegenerateClientCredentialsPost200Response

class TestRegenerateClientCredentialsPost200Response(unittest.TestCase):
    """RegenerateClientCredentialsPost200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RegenerateClientCredentialsPost200Response:
        """Test RegenerateClientCredentialsPost200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RegenerateClientCredentialsPost200Response`
        """
        model = RegenerateClientCredentialsPost200Response()
        if include_optional:
            return RegenerateClientCredentialsPost200Response(
                message = 'Client credentials regenerated successfully',
                client_id = 'xyz789-abc456',
                client_secret = 'ghi012-def789'
            )
        else:
            return RegenerateClientCredentialsPost200Response(
        )
        """

    def testRegenerateClientCredentialsPost200Response(self):
        """Test RegenerateClientCredentialsPost200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
