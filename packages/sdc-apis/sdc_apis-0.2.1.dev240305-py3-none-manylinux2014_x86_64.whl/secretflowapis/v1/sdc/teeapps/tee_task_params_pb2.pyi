"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.any_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class TeeTaskParams(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Input(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        DATA_UUID_FIELD_NUMBER: builtins.int
        PARTITION_ID_FIELD_NUMBER: builtins.int
        FEATURES_FIELD_NUMBER: builtins.int
        LABELS_FIELD_NUMBER: builtins.int
        ID_FIELDS_FIELD_NUMBER: builtins.int
        TABLE_NAME_FIELD_NUMBER: builtins.int
        PARTITION_EXPR_FIELD_NUMBER: builtins.int
        data_uuid: typing.Text = ...
        """数据 ID"""

        partition_id: typing.Text = ...
        """分区 ID"""

        @property
        def features(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """特征名"""
            pass
        @property
        def labels(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """标签名"""
            pass
        @property
        def id_fields(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """求交字段(optional)，针对 PSI 算子"""
            pass
        table_name: typing.Text = ...
        """表名(optional),针对 SQL 算子"""

        partition_expr: typing.Text = ...
        """分区表达式"""

        def __init__(self,
            *,
            data_uuid : typing.Text = ...,
            partition_id : typing.Text = ...,
            features : typing.Optional[typing.Iterable[typing.Text]] = ...,
            labels : typing.Optional[typing.Iterable[typing.Text]] = ...,
            id_fields : typing.Optional[typing.Iterable[typing.Text]] = ...,
            table_name : typing.Text = ...,
            partition_expr : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["data_uuid",b"data_uuid","features",b"features","id_fields",b"id_fields","labels",b"labels","partition_expr",b"partition_expr","partition_id",b"partition_id","table_name",b"table_name"]) -> None: ...

    class Output(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        DATA_UUID_FIELD_NUMBER: builtins.int
        PARTITION_ID_FIELD_NUMBER: builtins.int
        DATA_FORMAT_FIELD_NUMBER: builtins.int
        data_uuid: typing.Text = ...
        """数据 ID"""

        partition_id: typing.Text = ...
        """分区 ID"""

        data_format: typing.Text = ...
        """CSV，例如 SQL 的输出
        OBJ 非结构化数据，例如 XGB 训练的输出
        """

        def __init__(self,
            *,
            data_uuid : typing.Text = ...,
            partition_id : typing.Text = ...,
            data_format : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["data_format",b"data_format","data_uuid",b"data_uuid","partition_id",b"partition_id"]) -> None: ...

    class DataHolderSigsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: builtins.bytes = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : builtins.bytes = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    TASK_ID_FIELD_NUMBER: builtins.int
    REQUESTER_ID_FIELD_NUMBER: builtins.int
    APP_TYPE_FIELD_NUMBER: builtins.int
    CODE_FIELD_NUMBER: builtins.int
    PARAMS_FIELD_NUMBER: builtins.int
    INPUTS_FIELD_NUMBER: builtins.int
    OUTPUTS_FIELD_NUMBER: builtins.int
    SIGNATURE_FIELD_NUMBER: builtins.int
    DATA_HOLDER_SIGS_FIELD_NUMBER: builtins.int
    EXTRA_PARAMS_FIELD_NUMBER: builtins.int
    task_id: typing.Text = ...
    requester_id: typing.Text = ...
    """任务发起者公钥哈希"""

    app_type: typing.Text = ...
    """算子类型，如 XGB, LR，对应 AppInfo::app_type"""

    code: typing.Text = ...
    """任务的可编程脚本代码，string，sql 或 python 脚本等
    TECC中code为json格式{
    session_x_enc_task_script:"****",
    iv:"****",
    kx_enc_session_x:"****",
    script_mac:"****"
    }
    开源tee device: code = base64(sha256(serilize(func)))
    内部服务: command
    """

    @property
    def params(self) -> google.protobuf.any_pb2.Any:
        """不同任务参数见 params 目录下，不同任务的定义，如：
        xgb 训练任务，对应 XgbHyperParams
        """
        pass
    @property
    def inputs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TeeTaskParams.Input]:
        """输入信息"""
        pass
    @property
    def outputs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TeeTaskParams.Output]:
        """输出信息"""
        pass
    signature: builtins.bytes = ...
    """任务发起者私钥签名以上字段:
    SIGNATURE =
    SIG(task_id||requester_id||app_type||code||params||inputs||outputs)
    """

    @property
    def data_holder_sigs(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, builtins.bytes]:
        """原始数据持有者签名
        原始数据持有者Id -> 签名
        """
        pass
    extra_params: typing.Text = ...
    """reserved field
    TECC pandas中如下形式
    {"pandas_result":"result1,result2"}
    """

    def __init__(self,
        *,
        task_id : typing.Text = ...,
        requester_id : typing.Text = ...,
        app_type : typing.Text = ...,
        code : typing.Text = ...,
        params : typing.Optional[google.protobuf.any_pb2.Any] = ...,
        inputs : typing.Optional[typing.Iterable[global___TeeTaskParams.Input]] = ...,
        outputs : typing.Optional[typing.Iterable[global___TeeTaskParams.Output]] = ...,
        signature : builtins.bytes = ...,
        data_holder_sigs : typing.Optional[typing.Mapping[typing.Text, builtins.bytes]] = ...,
        extra_params : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["params",b"params"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["app_type",b"app_type","code",b"code","data_holder_sigs",b"data_holder_sigs","extra_params",b"extra_params","inputs",b"inputs","outputs",b"outputs","params",b"params","requester_id",b"requester_id","signature",b"signature","task_id",b"task_id"]) -> None: ...
global___TeeTaskParams = TeeTaskParams

class SubTaskParams(google.protobuf.message.Message):
    """仅TECC使用
    分布式任务的每个子任务参数
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class SubInput(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        DATA_UUID_FIELD_NUMBER: builtins.int
        PARTITION_ID_FIELD_NUMBER: builtins.int
        SEGMENT_IDS_FIELD_NUMBER: builtins.int
        data_uuid: typing.Text = ...
        """数据 ID"""

        partition_id: typing.Text = ...
        """分区 ID"""

        @property
        def segment_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
            """分段 ID"""
            pass
        def __init__(self,
            *,
            data_uuid : typing.Text = ...,
            partition_id : typing.Text = ...,
            segment_ids : typing.Optional[typing.Iterable[builtins.int]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["data_uuid",b"data_uuid","partition_id",b"partition_id","segment_ids",b"segment_ids"]) -> None: ...

    class SubOutput(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        DATA_UUID_FIELD_NUMBER: builtins.int
        PARTITION_ID_FIELD_NUMBER: builtins.int
        OUTPUT_NAME_FIELD_NUMBER: builtins.int
        data_uuid: typing.Text = ...
        """数据 ID"""

        partition_id: typing.Text = ...
        """分区 ID"""

        output_name: typing.Text = ...
        """输出文件名"""

        def __init__(self,
            *,
            data_uuid : typing.Text = ...,
            partition_id : typing.Text = ...,
            output_name : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["data_uuid",b"data_uuid","output_name",b"output_name","partition_id",b"partition_id"]) -> None: ...

    class AddressInfo(google.protobuf.message.Message):
        """仅TECC 使用
        集群信息
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        GROUP_ID_FIELD_NUMBER: builtins.int
        PARTY_ID_FIELD_NUMBER: builtins.int
        IP_FIELD_NUMBER: builtins.int
        PORT_FIELD_NUMBER: builtins.int
        group_id: builtins.int = ...
        party_id: builtins.int = ...
        ip: typing.Text = ...
        port: builtins.int = ...
        def __init__(self,
            *,
            group_id : builtins.int = ...,
            party_id : builtins.int = ...,
            ip : typing.Text = ...,
            port : builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["group_id",b"group_id","ip",b"ip","party_id",b"party_id","port",b"port"]) -> None: ...

    TASK_PARAMS_FIELD_NUMBER: builtins.int
    SUB_INPUTS_FIELD_NUMBER: builtins.int
    SUB_OUTPUTS_FIELD_NUMBER: builtins.int
    NR_GROUP_FIELD_NUMBER: builtins.int
    GROUP_ID_FIELD_NUMBER: builtins.int
    PARTY_ID_FIELD_NUMBER: builtins.int
    MASTER_GROUP_FIELD_NUMBER: builtins.int
    ADDRESS_INFOS_FIELD_NUMBER: builtins.int
    @property
    def task_params(self) -> global___TeeTaskParams: ...
    @property
    def sub_inputs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SubTaskParams.SubInput]: ...
    @property
    def sub_outputs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SubTaskParams.SubOutput]: ...
    nr_group: builtins.int = ...
    """本次任务分布式组数量"""

    group_id: builtins.int = ...
    """该节点在本次分布式任务中的组号"""

    party_id: builtins.int = ...
    """该节点的角色A-0, B-1, C-2"""

    master_group: builtins.int = ...
    """master组的序号，一般为0"""

    @property
    def address_infos(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SubTaskParams.AddressInfo]:
        """TECC used only"""
        pass
    def __init__(self,
        *,
        task_params : typing.Optional[global___TeeTaskParams] = ...,
        sub_inputs : typing.Optional[typing.Iterable[global___SubTaskParams.SubInput]] = ...,
        sub_outputs : typing.Optional[typing.Iterable[global___SubTaskParams.SubOutput]] = ...,
        nr_group : builtins.int = ...,
        group_id : builtins.int = ...,
        party_id : builtins.int = ...,
        master_group : builtins.int = ...,
        address_infos : typing.Optional[typing.Iterable[global___SubTaskParams.AddressInfo]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["task_params",b"task_params"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["address_infos",b"address_infos","group_id",b"group_id","master_group",b"master_group","nr_group",b"nr_group","party_id",b"party_id","sub_inputs",b"sub_inputs","sub_outputs",b"sub_outputs","task_params",b"task_params"]) -> None: ...
global___SubTaskParams = SubTaskParams

class TeeTaskResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TASK_ID_FIELD_NUMBER: builtins.int
    RESULT_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    task_id: typing.Text = ...
    result: builtins.int = ...
    message: typing.Text = ...
    def __init__(self,
        *,
        task_id : typing.Text = ...,
        result : builtins.int = ...,
        message : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["message",b"message","result",b"result","task_id",b"task_id"]) -> None: ...
global___TeeTaskResponse = TeeTaskResponse
