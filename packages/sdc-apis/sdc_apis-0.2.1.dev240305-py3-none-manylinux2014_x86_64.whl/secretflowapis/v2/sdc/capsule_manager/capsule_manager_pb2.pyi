"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import secretflowapis.v2.common_pb2
import secretflowapis.v2.sdc.jwt_pb2
import secretflowapis.v2.sdc.ual_pb2
import secretflowapis.v2.status_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class ResourceRequest(google.protobuf.message.Message):
    """This message describes one of the resources required by the task and
    the resource usage behavior.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Resource(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        RESOURCE_URI_FIELD_NUMBER: builtins.int
        COLUMNS_FIELD_NUMBER: builtins.int
        ATTRS_FIELD_NUMBER: builtins.int
        resource_uri: typing.Text = ...
        """Resource that need to be accessed

        URI format:
           {data_uuid}/{partition_id}/{segment_id}
        因为数据授权按照数据 id 粒度授权，所以 {data_uuid} 必须存在；
        * {data_uuid}/* 表示{data_uuid}目录下所有数据
        * {data_uuid}/{partition_id}/* 表示 {data_uuid}/{partition_id}
        目录下所有数据
        * {data_uuid}/{partition_id}?q=segment_id:["5"+TO+"7"]
          表示 {data_uuid}/{partition_id} 目录下 segment_id 在 5 到 7 的数据
        """

        @property
        def columns(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """Specify which columns will be used,
            if this is a structued data
            """
            pass
        attrs: typing.Text = ...
        """Application-specific and data-dependent attributes (Json format)

        可扩展属性字段，用于填充 op
        相关的属性，这些属性作用在当前数据资源上，例如 for PSI，描述 join 的 id
        列
          {
            "join": [
                "join_key": ["id"],
          	     "reference_key": {
            	        "data_uuid": "t2",
            	        "join_key": ["id"]
          	    }
            ]
          }
        """

        def __init__(self,
            *,
            resource_uri : typing.Text = ...,
            columns : typing.Optional[typing.Iterable[typing.Text]] = ...,
            attrs : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["attrs",b"attrs","columns",b"columns","resource_uri",b"resource_uri"]) -> None: ...

    INITIATOR_PARTY_ID_FIELD_NUMBER: builtins.int
    SCOPE_FIELD_NUMBER: builtins.int
    OP_NAME_FIELD_NUMBER: builtins.int
    RESOURCES_FIELD_NUMBER: builtins.int
    ENV_FIELD_NUMBER: builtins.int
    GLOBAL_ATTRS_FIELD_NUMBER: builtins.int
    initiator_party_id: typing.Text = ...
    """Identity of task initiator

    BASE58(SHA256(DER(X.509 public key)))
    """

    scope: typing.Text = ...
    """Corresponding to the `scope` in the `Policy`, only policies
    that are the same as the scope take effect
    """

    op_name: typing.Text = ...
    """Behavior of operating on this resource

    e.g. PSI, XGB, LR, SQL
    """

    @property
    def resources(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ResourceRequest.Resource]: ...
    env: typing.Text = ...
    """In what environment is the data used (Json format)

    可扩展属性字段，可用于填充 common 性质的属性，例如：
     项目空间，执行时间，以及 TEE 的身份信息等
     {
     	"execution_time": "2023-07-12T12:00:00",
     	"tee": {
       	   "type": "sgx2",
       	   "mr_enclave": "#####"
     	}
     }
    """

    global_attrs: typing.Text = ...
    """Application-specific and data-independent attibutes (Json format)

    可扩展属性字段，用于填充 op 相关的属性，这些属性作用在所有数据上，例如
     for XGB, 描述执行参数：
      {
        "xgb": {
     		  "tree_num": 1
         }
      }
    """

    def __init__(self,
        *,
        initiator_party_id : typing.Text = ...,
        scope : typing.Text = ...,
        op_name : typing.Text = ...,
        resources : typing.Optional[typing.Iterable[global___ResourceRequest.Resource]] = ...,
        env : typing.Text = ...,
        global_attrs : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["env",b"env","global_attrs",b"global_attrs","initiator_party_id",b"initiator_party_id","op_name",b"op_name","resources",b"resources","scope",b"scope"]) -> None: ...
global___ResourceRequest = ResourceRequest

class Rule(google.protobuf.message.Message):
    """Subject to additional constraints described using a DSL, participants are
    allowed to use the specified columns of this data to participate in the
    calculation of the specified operator.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class OpConstraint(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        OP_NAME_FIELD_NUMBER: builtins.int
        CONSTRAINTS_FIELD_NUMBER: builtins.int
        op_name: typing.Text = ...
        """e.g. PSI, XGB, LR, SQL"""

        @property
        def constraints(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """DSL decribed additional constraints, working on the specified operator.

            支持常见逻辑/算数运算表达式，但是表达式使用的属性需要与 `ResourceRequest`
            属性对应，例如对 XGB 算子限制，
                "限制在 mr_enclave 为 xgb_enclave_hash 的 Enclave,
                中执行，并约束训练迭代次数大于 12"
            的描述为：
               r.env.tee.sgx.mr_enclave=\\"xgb_enclave_hash\\" &&
               r.xgb.tree_num > 12

            Note：如果 constraints 为空表示没有限制
            """
            pass
        def __init__(self,
            *,
            op_name : typing.Text = ...,
            constraints : typing.Optional[typing.Iterable[typing.Text]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["constraints",b"constraints","op_name",b"op_name"]) -> None: ...

    RULE_ID_FIELD_NUMBER: builtins.int
    GRANTEE_PARTY_IDS_FIELD_NUMBER: builtins.int
    OP_CONSTRAINTS_FIELD_NUMBER: builtins.int
    COLUMNS_FIELD_NUMBER: builtins.int
    GLOBAL_CONSTRAINTS_FIELD_NUMBER: builtins.int
    rule_id: typing.Text = ...
    @property
    def grantee_party_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Identity of grantees

        RFC4648 BASE32(SHA256(DER(X.509 public key)))
        """
        pass
    @property
    def op_constraints(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Rule.OpConstraint]:
        """Behavior of operating on this resource

        Note: If ops is empty, no operation is allowed
        """
        pass
    @property
    def columns(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Specify which columns can be used, if this is a structued data

        Note: If columns is empty, no column can be used
        """
        pass
    @property
    def global_constraints(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Global DSL decribed additional constraints

        如下限制：
           "描述所有算子的限制，如果允许在 mr_signer="xxxx" 的 Enclave 执行，
           执行时间限制在 2023-07-22 之前"
        描述为：
             r.env.tee.sgx.mr_signer=\\"xxxx\\" &&
             r.env.execution_time < \\"2023-07-22\\")

        Note: 如果 constraints 为空，表示没有额外限制，多条 constraints 之间是 and
        语义
        """
        pass
    def __init__(self,
        *,
        rule_id : typing.Text = ...,
        grantee_party_ids : typing.Optional[typing.Iterable[typing.Text]] = ...,
        op_constraints : typing.Optional[typing.Iterable[global___Rule.OpConstraint]] = ...,
        columns : typing.Optional[typing.Iterable[typing.Text]] = ...,
        global_constraints : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["columns",b"columns","global_constraints",b"global_constraints","grantee_party_ids",b"grantee_party_ids","op_constraints",b"op_constraints","rule_id",b"rule_id"]) -> None: ...
global___Rule = Rule

class CreateResultDataKeyRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Body(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        OWNER_ID_FIELD_NUMBER: builtins.int
        RESOURCE_URI_FIELD_NUMBER: builtins.int
        SCOPE_FIELD_NUMBER: builtins.int
        DATA_KEY_B64_FIELD_NUMBER: builtins.int
        ANCESTOR_UUIDS_FIELD_NUMBER: builtins.int
        owner_id: typing.Text = ...
        resource_uri: typing.Text = ...
        scope: typing.Text = ...
        data_key_b64: typing.Text = ...
        """base64(data_key)"""

        @property
        def ancestor_uuids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
        def __init__(self,
            *,
            owner_id : typing.Text = ...,
            resource_uri : typing.Text = ...,
            scope : typing.Text = ...,
            data_key_b64 : typing.Text = ...,
            ancestor_uuids : typing.Optional[typing.Iterable[typing.Text]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["ancestor_uuids",b"ancestor_uuids","data_key_b64",b"data_key_b64","owner_id",b"owner_id","resource_uri",b"resource_uri","scope",b"scope"]) -> None: ...

    ATTESTATION_REPORT_FIELD_NUMBER: builtins.int
    BODY_FIELD_NUMBER: builtins.int
    @property
    def attestation_report(self) -> secretflowapis.v2.sdc.ual_pb2.UnifiedAttestationReport:
        """quote.report_data = SHA256( body )"""
        pass
    @property
    def body(self) -> global___CreateResultDataKeyRequest.Body: ...
    def __init__(self,
        *,
        attestation_report : typing.Optional[secretflowapis.v2.sdc.ual_pb2.UnifiedAttestationReport] = ...,
        body : typing.Optional[global___CreateResultDataKeyRequest.Body] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["attestation_report",b"attestation_report","body",b"body"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["attestation_report",b"attestation_report","body",b"body"]) -> None: ...
global___CreateResultDataKeyRequest = CreateResultDataKeyRequest

class Policy(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DATA_UUID_FIELD_NUMBER: builtins.int
    RULES_FIELD_NUMBER: builtins.int
    data_uuid: typing.Text = ...
    """data identity"""

    @property
    def rules(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Rule]:
        """多条规则，至少一条匹配则通过"""
        pass
    def __init__(self,
        *,
        data_uuid : typing.Text = ...,
        rules : typing.Optional[typing.Iterable[global___Rule]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_uuid",b"data_uuid","rules",b"rules"]) -> None: ...
global___Policy = Policy

class GetRaCertRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEADER_FIELD_NUMBER: builtins.int
    NONCE_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> secretflowapis.v2.common_pb2.RequestHeader: ...
    nonce: typing.Text = ...
    """为防止重放攻击，由客户端提供的随机数"""

    def __init__(self,
        *,
        header : typing.Optional[secretflowapis.v2.common_pb2.RequestHeader] = ...,
        nonce : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header",b"header","nonce",b"nonce"]) -> None: ...
global___GetRaCertRequest = GetRaCertRequest

class GetRaCertResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    STATUS_FIELD_NUMBER: builtins.int
    ATTESTATION_REPORT_FIELD_NUMBER: builtins.int
    CERT_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> secretflowapis.v2.status_pb2.Status: ...
    @property
    def attestation_report(self) -> secretflowapis.v2.sdc.ual_pb2.UnifiedAttestationReport:
        """quote.report_data = SHA256( cert || '.' || nonce )"""
        pass
    cert: typing.Text = ...
    """certificate, X.509 PEM format"""

    def __init__(self,
        *,
        status : typing.Optional[secretflowapis.v2.status_pb2.Status] = ...,
        attestation_report : typing.Optional[secretflowapis.v2.sdc.ual_pb2.UnifiedAttestationReport] = ...,
        cert : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["attestation_report",b"attestation_report","status",b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["attestation_report",b"attestation_report","cert",b"cert","status",b"status"]) -> None: ...
global___GetRaCertResponse = GetRaCertResponse

class EncryptedRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEADER_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    HAS_SIGNATURE_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> secretflowapis.v2.common_pb2.RequestHeader: ...
    @property
    def message(self) -> secretflowapis.v2.sdc.jwt_pb2.Jwe:
        """需要密文传输的请求，将序列化后的结果加密后存储在这个字段上，考虑到双向认证的情况，
        请求需要带上请求方的签名，可以通过设置 `has_signature` 用于区分。
        """
        pass
    has_signature: builtins.bool = ...
    """如果 has_signature = True:
       `message` 中是一个嵌套结构 Jwe(Jws(plain_text)),
        即对原文先进行签名，再对签名后的整个结构进行加密；
    如果 has_signature = False:
       `message` 中存储原文密文 Jwe(plain_text)
    """

    def __init__(self,
        *,
        header : typing.Optional[secretflowapis.v2.common_pb2.RequestHeader] = ...,
        message : typing.Optional[secretflowapis.v2.sdc.jwt_pb2.Jwe] = ...,
        has_signature : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header",b"header","message",b"message"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["has_signature",b"has_signature","header",b"header","message",b"message"]) -> None: ...
global___EncryptedRequest = EncryptedRequest

class EncryptedResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    STATUS_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> secretflowapis.v2.status_pb2.Status: ...
    @property
    def message(self) -> secretflowapis.v2.sdc.jwt_pb2.Jwe:
        """需要密文传输的请求，将序列化后的结果加密后存储在这个字段上"""
        pass
    def __init__(self,
        *,
        status : typing.Optional[secretflowapis.v2.status_pb2.Status] = ...,
        message : typing.Optional[secretflowapis.v2.sdc.jwt_pb2.Jwe] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["message",b"message","status",b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["message",b"message","status",b"status"]) -> None: ...
global___EncryptedResponse = EncryptedResponse

class GetDataKeysRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ATTESTATION_REPORT_FIELD_NUMBER: builtins.int
    CERT_FIELD_NUMBER: builtins.int
    RESOURCE_REQUEST_FIELD_NUMBER: builtins.int
    @property
    def attestation_report(self) -> secretflowapis.v2.sdc.ual_pb2.UnifiedAttestationReport:
        """quote.report_data = SHA256( cert || '.' ||
          resource_request )
        """
        pass
    cert: typing.Text = ...
    """The temporary self-signed certificate generated by the worker

    X.509 PEM format
    """

    @property
    def resource_request(self) -> global___ResourceRequest:
        """Resource request"""
        pass
    def __init__(self,
        *,
        attestation_report : typing.Optional[secretflowapis.v2.sdc.ual_pb2.UnifiedAttestationReport] = ...,
        cert : typing.Text = ...,
        resource_request : typing.Optional[global___ResourceRequest] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["attestation_report",b"attestation_report","resource_request",b"resource_request"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["attestation_report",b"attestation_report","cert",b"cert","resource_request",b"resource_request"]) -> None: ...
global___GetDataKeysRequest = GetDataKeysRequest

class DataKey(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESOURCE_URI_FIELD_NUMBER: builtins.int
    DATA_KEY_B64_FIELD_NUMBER: builtins.int
    resource_uri: typing.Text = ...
    """Requested resource"""

    data_key_b64: typing.Text = ...
    """symmetric key to decrypt the requested resource content
    base64(data_key)
    """

    def __init__(self,
        *,
        resource_uri : typing.Text = ...,
        data_key_b64 : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_key_b64",b"data_key_b64","resource_uri",b"resource_uri"]) -> None: ...
global___DataKey = DataKey

class GetDataKeysResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DATA_KEYS_FIELD_NUMBER: builtins.int
    CERT_FIELD_NUMBER: builtins.int
    @property
    def data_keys(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DataKey]: ...
    cert: typing.Text = ...
    """The certificate of Capsule Manager

    X.509 PEM format
    """

    def __init__(self,
        *,
        data_keys : typing.Optional[typing.Iterable[global___DataKey]] = ...,
        cert : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cert",b"cert","data_keys",b"data_keys"]) -> None: ...
global___GetDataKeysResponse = GetDataKeysResponse

class CreateDataPolicyRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OWNER_PARTY_ID_FIELD_NUMBER: builtins.int
    SCOPE_FIELD_NUMBER: builtins.int
    POLICY_FIELD_NUMBER: builtins.int
    owner_party_id: typing.Text = ...
    """Identity of data owner(中间数据使用 Capsule Manager 的公钥生成)

    RFC4648 BASE32(SHA256(DER(X.509 public key)))
    """

    scope: typing.Text = ...
    """Isolate the policy that takes effect only in this scope

    if scope is empty, default value is "default"
    """

    @property
    def policy(self) -> global___Policy: ...
    def __init__(self,
        *,
        owner_party_id : typing.Text = ...,
        scope : typing.Text = ...,
        policy : typing.Optional[global___Policy] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["policy",b"policy"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["owner_party_id",b"owner_party_id","policy",b"policy","scope",b"scope"]) -> None: ...
global___CreateDataPolicyRequest = CreateDataPolicyRequest

class CreateDataKeysRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OWNER_PARTY_ID_FIELD_NUMBER: builtins.int
    DATA_KEYS_FIELD_NUMBER: builtins.int
    owner_party_id: typing.Text = ...
    """Identity of data owner(中间数据使用 Capsule Manager 的公钥生成)

    RFC4648 BASE32(SHA256(DER(X.509 public key)))
    """

    @property
    def data_keys(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DataKey]: ...
    def __init__(self,
        *,
        owner_party_id : typing.Text = ...,
        data_keys : typing.Optional[typing.Iterable[global___DataKey]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_keys",b"data_keys","owner_party_id",b"owner_party_id"]) -> None: ...
global___CreateDataKeysRequest = CreateDataKeysRequest

class ListDataPolicyRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OWNER_PARTY_ID_FIELD_NUMBER: builtins.int
    SCOPE_FIELD_NUMBER: builtins.int
    owner_party_id: typing.Text = ...
    """Identity of data owner

    RFC4648 BASE32(SHA256(DER(X.509 public key)))
    """

    scope: typing.Text = ...
    def __init__(self,
        *,
        owner_party_id : typing.Text = ...,
        scope : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["owner_party_id",b"owner_party_id","scope",b"scope"]) -> None: ...
global___ListDataPolicyRequest = ListDataPolicyRequest

class ListDataPolicyResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    POLICIES_FIELD_NUMBER: builtins.int
    @property
    def policies(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Policy]: ...
    def __init__(self,
        *,
        policies : typing.Optional[typing.Iterable[global___Policy]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["policies",b"policies"]) -> None: ...
global___ListDataPolicyResponse = ListDataPolicyResponse

class AddDataRuleRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OWNER_PARTY_ID_FIELD_NUMBER: builtins.int
    DATA_UUID_FIELD_NUMBER: builtins.int
    SCOPE_FIELD_NUMBER: builtins.int
    RULE_FIELD_NUMBER: builtins.int
    owner_party_id: typing.Text = ...
    """Identity of data owner

    RFC4648 BASE32(SHA256(DER(X.509 public key)))
    """

    data_uuid: typing.Text = ...
    """data identity"""

    scope: typing.Text = ...
    @property
    def rule(self) -> global___Rule: ...
    def __init__(self,
        *,
        owner_party_id : typing.Text = ...,
        data_uuid : typing.Text = ...,
        scope : typing.Text = ...,
        rule : typing.Optional[global___Rule] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["rule",b"rule"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_uuid",b"data_uuid","owner_party_id",b"owner_party_id","rule",b"rule","scope",b"scope"]) -> None: ...
global___AddDataRuleRequest = AddDataRuleRequest

class DeleteDataPolicyRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OWNER_PARTY_ID_FIELD_NUMBER: builtins.int
    SCOPE_FIELD_NUMBER: builtins.int
    DATA_UUID_FIELD_NUMBER: builtins.int
    owner_party_id: typing.Text = ...
    """Identity of data owner

    RFC4648 BASE32(SHA256(DER(X.509 public key)))
    """

    scope: typing.Text = ...
    data_uuid: typing.Text = ...
    def __init__(self,
        *,
        owner_party_id : typing.Text = ...,
        scope : typing.Text = ...,
        data_uuid : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_uuid",b"data_uuid","owner_party_id",b"owner_party_id","scope",b"scope"]) -> None: ...
global___DeleteDataPolicyRequest = DeleteDataPolicyRequest

class DeleteDataRuleRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OWNER_PARTY_ID_FIELD_NUMBER: builtins.int
    SCOPE_FIELD_NUMBER: builtins.int
    DATA_UUID_FIELD_NUMBER: builtins.int
    RULE_ID_FIELD_NUMBER: builtins.int
    owner_party_id: typing.Text = ...
    """Identity of data owner

    RFC4648 BASE32(SHA256(DER(X.509 public key)))
    """

    scope: typing.Text = ...
    data_uuid: typing.Text = ...
    rule_id: typing.Text = ...
    def __init__(self,
        *,
        owner_party_id : typing.Text = ...,
        scope : typing.Text = ...,
        data_uuid : typing.Text = ...,
        rule_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_uuid",b"data_uuid","owner_party_id",b"owner_party_id","rule_id",b"rule_id","scope",b"scope"]) -> None: ...
global___DeleteDataRuleRequest = DeleteDataRuleRequest

class RegisterCertRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OWNER_PARTY_ID_FIELD_NUMBER: builtins.int
    CERTS_FIELD_NUMBER: builtins.int
    SCHEME_FIELD_NUMBER: builtins.int
    owner_party_id: typing.Text = ...
    """RFC4648 BASE32(SHA256(DER(X.509 public key)))"""

    @property
    def certs(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """pem format"""
        pass
    scheme: typing.Text = ...
    """RSA`, `SM2`"""

    def __init__(self,
        *,
        owner_party_id : typing.Text = ...,
        certs : typing.Optional[typing.Iterable[typing.Text]] = ...,
        scheme : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["certs",b"certs","owner_party_id",b"owner_party_id","scheme",b"scheme"]) -> None: ...
global___RegisterCertRequest = RegisterCertRequest

class GetExportDataKeyRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REQUEST_PARTY_ID_FIELD_NUMBER: builtins.int
    RESOURCE_URI_FIELD_NUMBER: builtins.int
    DATA_EXPORT_CERTIFICATE_FIELD_NUMBER: builtins.int
    request_party_id: typing.Text = ...
    """RFC4648 BASE32(SHA256(DER(X.509 public key)))"""

    resource_uri: typing.Text = ...
    """Resource that need to be accessed

    URI format:
       {data_uuid}/{partition_id}/{segment_id}
    因为数据授权按照数据 id 粒度授权，所以 {data_uuid} 必须存在
    """

    data_export_certificate: typing.Text = ...
    """Data Export Certificate

    When the data request exporting party requests to obtain the decryption key
    for accessing the data, they need to obtain the signatures of all the
    original owners of the data, the request information, and the signature of
    the original owner, which together constitute the data export certificate.

    The current definition of the data export certificate is `VoteResult`.
    """

    def __init__(self,
        *,
        request_party_id : typing.Text = ...,
        resource_uri : typing.Text = ...,
        data_export_certificate : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_export_certificate",b"data_export_certificate","request_party_id",b"request_party_id","resource_uri",b"resource_uri"]) -> None: ...
global___GetExportDataKeyRequest = GetExportDataKeyRequest

class GetExportDataKeyResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DATA_KEY_FIELD_NUMBER: builtins.int
    @property
    def data_key(self) -> global___DataKey: ...
    def __init__(self,
        *,
        data_key : typing.Optional[global___DataKey] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["data_key",b"data_key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_key",b"data_key"]) -> None: ...
global___GetExportDataKeyResponse = GetExportDataKeyResponse

class DeleteDataKeyRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    OWNER_PARTY_ID_FIELD_NUMBER: builtins.int
    RESOURCE_URI_FIELD_NUMBER: builtins.int
    owner_party_id: typing.Text = ...
    """Identity of data owner

    RFC4648 BASE32(SHA256(DER(X.509 public key)))
    """

    resource_uri: typing.Text = ...
    """URI format:
       {data_uuid}/{partition_id}/{segment_id}
    因为数据授权按照数据 id 粒度授权，所以 {data_uuid} 必须存在
    """

    def __init__(self,
        *,
        owner_party_id : typing.Text = ...,
        resource_uri : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["owner_party_id",b"owner_party_id","resource_uri",b"resource_uri"]) -> None: ...
global___DeleteDataKeyRequest = DeleteDataKeyRequest
